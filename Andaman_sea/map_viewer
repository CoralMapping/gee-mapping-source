/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var depth_pal = {"opacity":1,"bands":["depth"],"max":5,"palette":["e4e1ff","7f89ff","3a52ff","0007ff","000258"]},
    geo = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo"),
    benthic = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic"),
    pixels = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_pixels"),
    geo_train = ee.FeatureCollection("projects/coral_atlas/nth_cari/training/nth_cari_geo_training"),
    wcmc = ee.FeatureCollection("projects/coral_atlas/global_datasets/wcmc_reefs_2018v4_dissolved"),
    benthic_baha = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_baha"),
    benthic_cari = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_cari"),
    geo_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo-clean3"),
    benthic_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic-clean"),
    low_rrs = ee.Image("projects/coral_atlas/workflow/mapping/andaman_sea/andaman_sea_low_tide_normalized_sr_feb2018_feb2020/20200317T185458Z/andaman_sea_low_tide_normalized_sr_feb2018_feb2020"),
    noreefmask = /* color: #43ff06 */ee.Geometry.MultiPoint(),
    BondariesWCMCForAS = 
    /* color: #00ffff */
    /* shown: false */
    /* locked: true */
    ee.Geometry.Polygon(
        [[[95.33964749157768, 16.695208856448673],
          [94.52665921032768, 16.716254129013105],
          [94.53013127193786, 16.325955825315507],
          [94.18255928154173, 16.130520451735464],
          [93.79599336585677, 15.923912941488357],
          [92.63701077282768, 14.281497396856706],
          [91.91191311657768, 13.449542299295437],
          [91.69218655407768, 9.791427198556617],
          [92.37333889782768, 10.029519571253923],
          [92.32939358532768, 8.533299882177115],
          [93.69169827282768, 6.0270213246383095],
          [94.35087796032768, 6.20180251803793],
          [94.26298733532768, 7.532488322545196],
          [94.10917874157768, 8.7288141619164],
          [92.81279202282768, 9.726463092351683],
          [94.04326077282768, 11.411190094259377],
          [95.05400296032768, 14.387940164517607],
          [94.57060452282768, 14.749464259117644],
          [95.64726467907768, 14.5794091414448],
          [96.63603421032768, 15.51304919048502],
          [97.03154202282768, 13.812555573922232],
          [96.85576077282768, 12.292853979096211],
          [96.74589749157768, 11.001670519523495],
          [97.16337796032768, 9.878026222910373],
          [97.03154202282768, 8.598482547196216],
          [97.20732327282768, 7.924402770453385],
          [98.02031155407768, 6.376525792771139],
          [99.16288967907768, 5.392979274561236],
          [99.58037014782768, 5.19606917966658],
          [99.73417874157768, 4.057233177125881],
          [100.54716702282768, 2.4778242025663926],
          [102.15117092907768, 2.4119662418636683],
          [101.55790921032768, 4.101067163409808],
          [100.98662014782768, 5.633560206346016],
          [100.72294827282768, 6.834887057813266],
          [98.94316311657768, 8.81567666647138],
          [99.22880764782768, 11.432727589597851],
          [99.16288967907768, 12.31432197234051],
          [98.98710842907768, 13.235746870414042],
          [98.39384671032768, 14.791957346870896],
          [98.30595608532768, 17.05266104344462],
          [97.60283108532768, 17.01064303748174],
          [97.00956936657768, 18.037320002837806],
          [96.37236233532768, 17.786428365136604],
          [96.26249905407768, 17.409430504634983],
          [95.75712796032768, 17.178658281709335],
          [95.62529202282768, 16.84247692714126]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// little viewing script for looking at reefs and classifications for each region. 
//From this region onwards the map_viewer script is going to be used from the very beginning
//in the workflow 

// imports
//var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
//var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// choogse where to centre (link this dynamically to map app?)
var centre_map = ee.Geometry.Point([95.68022366345264, 12.587883996209781])
Map.centerObject(centre_map, 7)
//splitting North Cari regions


// add some background data
//Map.addLayer(any_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Any tide mosaic", false)
//Map.addLayer(high_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "High tide mosaic", false)

Map.addLayer(low_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Dove low tide mosaic", false)
//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)

//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)

/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/

// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)

// WCMC

//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)
//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)
/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/
// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)
// WCMC

var wcmc=wcmc.filterBounds(BondariesWCMCForAS)

Map.addLayer(wcmc, {color:'#ffff00'}, "WCMC layer", false)

// #############
// example confidence layers

/*
// depth and nir combos
var depth_nir_flag = fiji_dove_ocean.select('b4').multiply(fiji_high_depth_ocean).gt(250000)
//Map.addLayer(depth_nir_flag, {}, "NIR flag", false)
var conf_flag = fiji_high_depth_ocean.eq(-1)
                        .or(fiji_high_depth_ocean.gt(1000))
                        .add(depth_nir_flag.eq(1))
                        .selfMask()
Map.addLayer(conf_flag, {min:1,max:2,palette:["#f7f7f7","#bababa"]}, "Confidence flag", false)

//straight depth missing/-1
var depth_flag = fiji_high_depth_ocean.gt(0).selfMask()
//Map.addLayer(depth_flag, {min:0,max:1,palette:["#ffff00"]}, "Valid depth retrievals", false)

//Map.addLayer(fiji_geo_clean.gt(0).updateMask(fiji_high_depth_ocean.lte(0)), {min:0,max:1,palette:["#ff0000"]}, "Unmapped area via original algorithm", false)
*/


/*

////////// UI SET UP //////////


//Generate title
var title = ui.Label({
  value: 'Coral Atlas map classes',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false)
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false)
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
pkg_vis.add_lgds([title, geo_legend, benthic_legend])//, mask_legend])
// generate the legend




///////// LINK TO DATA EXPORT /////////
// hopefully eventually we can link this to a download link in the app?

// // map to export 
// var export_map = gbr_geo_map10
// // extent
// var export_convhull = export_map.gt(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: export_map.geometry().bounds()}).geometry().convexHull({maxError: 100})
// // export
// Export.image.toDrive({
//     image: export_map,
//     description: 'gbr_sent2_geo_map',
//     folder: 'GBR Mapping',
//     region: export_convhull,
//     scale: 10,
//     maxPixels: 1e13
// })

*/