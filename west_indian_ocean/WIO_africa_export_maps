/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var reef_boundary = 
    /* color: #98ff00 */
    /* shown: false */
    /* locked: true */
    ee.Geometry.Polygon(
        [[[40.35842048249674, -1.8731644797702776],
          [39.69924079499674, -2.3562322691693933],
          [39.07302009187174, -3.8591024804159404],
          [38.32594977937174, -5.687377519570883],
          [38.33693610749674, -6.626740872916417],
          [38.86427985749674, -6.910394253939107],
          [38.87526618562174, -8.84740435545103],
          [39.29274665437174, -10.277410334541145],
          [40.03981696687174, -10.839024630434508],
          [39.88600837312174, -11.227221359058408],
          [40.03981696687174, -11.744003015894462],
          [40.10573493562174, -14.695513440920823],
          [39.90798102937174, -15.247407444127319],
          [39.27077399812174, -15.988050851840795],
          [35.93093024812174, -17.46102684122401],
          [35.82106696687174, -18.08873569408632],
          [35.44753181062174, -18.130504110950877],
          [34.72243415437174, -19.026081590802168],
          [34.10719977937174, -19.337372528162536],
          [33.99733649812174, -20.555960741622897],
          [34.96413337312174, -22.131748332296137],
          [34.94216071687174, -23.971496248242147],
          [33.93141852937174, -24.071844423828175],
          [33.90944587312174, -24.37241725810691],
          [33.27223884187174, -24.452449924065338],
          [32.04177009187174, -25.666581578853176],
          [31.99782477937174, -26.51511469120565],
          [32.30544196687174, -26.691931633862257],
          [32.34938727937174, -27.240271455094568],
          [32.08571540437174, -27.51343549714823],
          [32.01979743562174, -28.212739468277103],
          [30.74538337312174, -29.29147703885302],
          [30.63552009187174, -29.71219644093404],
          [30.39382087312174, -30.150162070372012],
          [31.86598884187174, -30.13116022077019],
          [32.19557868562174, -29.959979115555466],
          [32.94264899812174, -28.984405375938923],
          [33.29421149812174, -27.532921375136276],
          [33.46999274812174, -26.27893485397652],
          [33.79958259187174, -25.725980597203197],
          [34.92018806062174, -25.587336841326074],
          [35.35964118562174, -25.269833891055377],
          [36.12868415437174, -24.512441091214196],
          [35.97487556062174, -21.21288678253757],
          [35.77712165437174, -20.411877445644876],
          [36.87575446687174, -19.482439395334993],
          [37.73268806062174, -18.276614943367534],
          [39.55641852937174, -17.46102684122401],
          [40.16066657624675, -17.46102684122401],
          [40.89229301322838, -17.063481554970984],
          [41.38014899812175, -16.820631397463128],
          [42.201727631345186, -17.237185269240832],
          [43.26979743562174, -17.754231901073013],
          [43.31374274812174, -19.109149974131626],
          [43.40163337312174, -20.061400554000706],
          [42.74245368562174, -21.397125981256824],
          [40.72096931062174, -21.92806454479081],
          [40.39137946687174, -21.601564213517563],
          [39.86403571687174, -20.905310629278357],
          [39.05104743562174, -21.37666637894461],
          [39.75417243562174, -22.59910156638847],
          [40.61110602937174, -22.801806874624457],
          [40.91872321687174, -22.21313962961825],
          [42.52272712312174, -21.805714016823867],
          [43.05007087312174, -24.172114147484887],
          [43.62135993562174, -25.92376286999194],
          [44.82985602937174, -26.377401833645294],
          [46.65358649812174, -26.1606641080163],
          [47.79616462312174, -25.626965782075235],
          [48.52126227937174, -23.064873411332584],
          [50.87233649812174, -15.734418142662625],
          [50.91628181062174, -15.056528365123471],
          [50.79543220124674, -13.96104281665148],
          [50.50978766999674, -12.538799018045378],
          [49.59792243562174, -11.539557027441735],
          [48.62013923249674, -11.561084720321164],
          [47.74123298249675, -12.179286850645108],
          [47.4341492448213, -12.645919915667747],
          [47.06008063874674, -12.98346860276523],
          [45.93947516999674, -14.605165818738843],
          [43.65431891999674, -15.390453211023946],
          [40.29250251374674, -17.288023478336328],
          [41.39113532624674, -15.49634974788777],
          [41.54494391999674, -10.704115286230923],
          [40.31447516999674, -8.885397016171137],
          [40.28151618562174, -6.042563586602855],
          [40.74294196687174, -3.787850297032323],
          [42.45680915437174, -1.3295556688150814],
          [40.30348884187174, -1.3734887548247627]]]),
    pixels = ee.Image("projects/coral_atlas/west_indian_ocean/in_out/wio_pixels"),
    extra_masking = /* color: #d63000 */ee.Geometry.MultiPoint(),
    wio_lt_sr = ee.Image("projects/coral_atlas/workflow/mapping/west_indian_ocean/west_indian_ocean_islands_low_tide_normalized_sr_jan2018_jan2020_v2_shift_mosaic/20200131T210330Z/west_indian_ocean_islands_low_tide_normalized_sr_jan2018_jan2020_v2_shift_mosaic"),
    geo = ee.Image("projects/coral_atlas/west_indian_ocean/in_out/wio_geo-clean_manual_July10"),
    benthic = ee.Image("projects/coral_atlas/west_indian_ocean/in_out/wio_benthic-clean_July10");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/* export maps for WIO (This is to send another go to Eldang 16/07/2020) 
Script to export maps to GCS, ready for smoothing
- note the eventual smoothed output still needs to be QC'd by UQ, 
  to ensure smoothing has not done naything untoward
 
TODO: define output params up front
  - e.g. description, export path, GCS bucket etc.
 
TODO: link this to the reef_params module
  - in that case you'd just choose the region, and the exrpot would all happen automatically
  - let's just see if this process takes off, then i'll invest time to link it up with automation
  
TODO: deal with change in dateline (i.e. WGS-84 projection wrapping)
  - Fiji/south pacific might be the only region where this happens? worth it?
  **A: resonable solution below**
*/


/*
Script to export maps to GCS, ready for smoothing
- note the eventual smoothed output still needs to be QC'd by UQ, 
  to ensure smoothing has not done naything untoward
 
TODO: define output params up front
  - e.g. description, export path, GCS bucket etc.
 
TODO: link this to the reef_params module
  - in that case you'd just choose the region, and the exrpot would all happen automatically
  - let's just see if this process takes off, then i'll invest time to link it up with automation
  
TODO: deal with change in dateline (i.e. WGS-84 projection wrapping)
  - Fiji/south pacific might be the only region where this happens? worth it?
  **A: resonable solution below**
*/
Map.setCenter(41.21433231415011, -18.933550222113603, 6)
// so we can visualise maps before export
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// will need to import depth mosaic from pixels now
var depth = pixels.select('depth')//.multiply(100).uint16()

// addiitonal masking 

var FINAL_MASK_TO_GEOBENTHIC= extra_masking
var add_zone = function(f) {return(f.set('zone', 1))}
var exclude_fc = FINAL_MASK_TO_GEOBENTHIC.map(add_zone)





var exclude_mask = ee.Image().byte().paint(exclude_fc, 'zone').uint8()
//Map.addLayer(exclude_mask, {}, "image extra mask zone", false)

geo = geo.where(exclude_mask.eq(1), ee.Image(0))
benthic = benthic.where(geo.eq(0), ee.Image(0)) // may not always need this (only if extra masking is applied here)

// finalise layers (include 'mapped area' as zeros)
geo = geo.where(geo.lte(2), 0)
//print (geo)
benthic = benthic.unmask(0).updateMask(geo.gte(0))

// make reef/non-reef layer 
var reef_top = geo.eq([11,13,14,15,16,25,26]).reduce(ee.Reducer.sum())
print (reef_top)
var reef_all = geo.eq([11,12,13,14,15,16,21,22,23,24,25,26]).reduce(ee.Reducer.sum())
var reef_layer = reef_top.addBands(reef_all).reduce(ee.Reducer.sum())
print (reef_layer)

// check before export

//Map.addLayer(reef_layer, {min:0, max:2}, "reef layerNoSelf", false)
//Map.addLayer(reef_layer.selfMask(), {min:0, max:2}, "reef layer", false)
Map.addLayer(geo, map_palettes.geo, "geomorphic map", false)
Map.addLayer(benthic, map_palettes.benthic, "benthic map", false)
//Map.addLayer(Final_mask, {}, 'Final_mask', false)
//Map.addLayer(depth, {min: -3, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "depth layer", false)
Map.addLayer(wio_lt_sr, {"opacity":1,"bands":["b1","b2","b3"],"min":1,"max":1514,"gamma":1}, 'east_africa_lt_sr', false)
Map.addLayer(exclude_fc, {}, "vector mask zone", false)
// combine into single stack
var export_stack = depth.updateMask(geo.gte(0)).rename('depth')
                    .addBands(reef_layer.rename('reef'))
                    .addBands(geo.rename('geomorphic'))
                    .addBands(benthic.rename('benthic'))
                    .toInt16()

Map.addLayer(export_stack, {}, "export raster stack", false)

//removing the fills in the masks to visually detect gaps between them

//Map.addLayer(ee.Image().byte().paint({featureCollection:not_reef, color:1, width: 1}), {}, 'not_reefOutline', false)
//Map.addLayer(ee.Image().byte().paint({featureCollection:Rivermouth, color: 1, width: 1}), {}, 'RivermouthOutline', false)
//Map.addLayer(ee.Image().byte().paint({featureCollection: slithers, color:1, width:1}), {}, 'SlithersOutline', false)


/*// add export region
var export_geom_east = ee.Geometry.Rectangle(-179.99998,-21.4794,-168.13175,-8.4)
var export_geom_west = ee.Geometry.Rectangle(162.7051,-23.052,179.99998,-7.8)
Map.addLayer(export_geom_west, {}, "export footprint west", true)
Map.addLayer(export_geom_east, {}, "export footprint east", true)

// add raster flag for either side of dateline
var latlong = ee.Image.pixelLonLat().select('longitude').clipToCollection(ee.FeatureCollection([export_geom_west,export_geom_east]))
//Map.addLayer(latlong)

var export_stack_east = export_stack.updateMask(latlong.lte(0))
var export_stack_west = export_stack.updateMask(latlong.gt(0))

Map.addLayer(export_stack_east, {}, "export raster stack east", false)
Map.addLayer(export_stack_west, {}, "export raster stack west", false)*/

// make east/west export geometries
/*var export_geom_east = latlong.lt(0).and(latlong.gt(-179.99998)).selfMask()
                            .reduceToVectors({
                              reducer: ee.Reducer.countEvery(),
                              geometry: export_geom,
                              scale: 5,
                              maxPixels: 1e13,
                              crs: 'EPSG:4326'
                            })

var export_geom_west = latlong.gt(0).and(latlong.lt(179.99998)).selfMask()
                            .reduceToVectors({
                              reducer: ee.Reducer.countEvery(),
                              geometry: export_geom,
                              scale: 5,
                              maxPixels: 1e13,
                              crs: 'EPSG:4326'
                            })*/

/*
// run the export
Export.image.toCloudStorage({
  image: export_stack,
  description: 'ea_stack',
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/ea_updated20200618/ea_stack',
  region: reef_boundary, 
  scale: 5,
  crs: 'EPSG:4326',
  maxPixels: 1e13, 
  skipEmptyTiles: true
});



Export.table.toCloudStorage({
  collection: slithers, 
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/ea_updated20200618/Slither_Masks',
  fileFormat: 'SHP'
});




Export.image.toCloudStorage({
  image: export_stack_east,
  description: 'swp_stack_east',
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/swp/final/swp_stack_east',
  region: export_geom_east, 
  scale: 5,
  crs: 'EPSG:4326',
  maxPixels: 1e13, 
  skipEmptyTiles: true
})

// run the export
Export.image.toCloudStorage({
  image: export_stack_west,
  description: 'swp_stack_west',
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/swp/final/swp_stack_west',
  region: export_geom_west, 
  scale: 5,
  crs: 'EPSG:4326',
  maxPixels: 1e13, 
  skipEmptyTiles: true
})*/


// export the convex hull boundary

// export region convex hull, or manual
/*var export_geom = geo.gte(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: geo.geometry().bounds(100), crs: "EPSG:4326"}).geometry().convexHull({maxError: 100})

Export.table.toCloudStorage({
  collection: ee.FeatureCollection(export_geom),
  description: 'swp_convex_hull',
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/swp/new_geom/swp_convex_hull',
  fileFormat: "SHP"
})*/