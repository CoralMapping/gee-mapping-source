/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var land_dist = ee.Image("projects/coral_atlas/global_datasets/mod44w6_global_distToLand"),
    imageVisParam = {"opacity":1,"bands":["depth"],"min":1500,"max":2500,"gamma":1},
    not_reef_crest = /* color: #d63000 */ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                118.94398658299858,
                -17.505508014499394
              ],
              [
                118.94134729021927,
                -17.507042801888687
              ],
              [
                118.94057481428378,
                -17.507677176888595
              ],
              [
                118.93984525367812,
                -17.50827062246334
              ],
              [
                118.93793552150447,
                -17.50998955732359
              ],
              [
                118.93705575724482,
                -17.510542068644856
              ],
              [
                118.93440437886767,
                -17.51429834862424
              ],
              [
                118.93273068100761,
                -17.517470074733072
              ],
              [
                118.93236590070498,
                -17.517510999869046
              ],
              [
                118.93228007004548,
                -17.517777013028518
              ],
              [
                118.93187237441305,
                -17.518063488302676
              ],
              [
                118.9313359327914,
                -17.518431812990812
              ],
              [
                118.93120718680207,
                -17.519475395548668
              ],
              [
                118.92830375200651,
                -17.524214818339384
              ],
              [
                118.9257073745583,
                -17.52842990221335
              ],
              [
                118.92459157598567,
                -17.529064202474036
              ],
              [
                118.92433408400734,
                -17.530844323616662
              ],
              [
                118.92424825334786,
                -17.532747192415016
              ],
              [
                118.9226818438134,
                -17.538087394975495
              ],
              [
                118.92216685985696,
                -17.539110404334572
              ],
              [
                118.92075065397681,
                -17.54267043190167
              ],
              [
                118.91946319408584,
                -17.544143526304396
              ],
              [
                118.91877654881107,
                -17.549462934175715
              ],
              [
                118.91199592672149,
                -17.560672050165056
              ],
              [
                118.90873436166659,
                -17.56509085825812
              ],
              [
                118.905344050624,
                -17.571718868125586
              ],
              [
                118.90332703013004,
                -17.573887238400562
              ],
              [
                118.90285496150473,
                -17.576587436746895
              ],
              [
                118.89895006874477,
                -17.579726295275247
              ],
              [
                118.89961541349474,
                -17.581377543560222
              ],
              [
                118.89917561243186,
                -17.582469090200814
              ],
              [
                118.89925611665299,
                -17.58301486490909
              ],
              [
                118.89899596127665,
                -17.583492304477485
              ],
              [
                118.89903754419421,
                -17.583894665295983
              ],
              [
                118.89890746502499,
                -17.584787947200947
              ],
              [
                118.89849981235228,
                -17.5855266766201
              ],
              [
                118.89895046666248,
                -17.586429045110208
              ],
              [
                118.89843552204813,
                -17.587310958599137
              ],
              [
                118.89755577456901,
                -17.58754736796352
              ],
              [
                118.8972339234345,
                -17.58823377775644
              ],
              [
                118.89644000402005,
                -17.589115721133265
              ],
              [
                118.89586065289177,
                -17.59044766047817
              ],
              [
                118.89494065874003,
                -17.592286284397634
              ],
              [
                118.8949218810951,
                -17.592611298877344
              ],
              [
                118.89462683076098,
                -17.592974971222276
              ],
              [
                118.8944658792382,
                -17.59378413558441
              ],
              [
                118.89675108266185,
                -17.596740997333136
              ],
              [
                118.89656334203836,
                -17.599119404439914
              ],
              [
                118.89724194155218,
                -17.6002881694256
              ],
              [
                118.89629378462936,
                -17.601322529400036
              ],
              [
                118.895884070333,
                -17.60220786739752
              ],
              [
                118.89675209338714,
                -17.603693637099415
              ],
              [
                118.89727193739184,
                -17.605622780222486
              ],
              [
                118.89686667201639,
                -17.60655666899314
              ],
              [
                118.89593447540446,
                -17.60681908740728
              ],
              [
                118.89513102150154,
                -17.607245121819894
              ],
              [
                118.89294229478067,
                -17.608174870787785
              ],
              [
                118.89289931644551,
                -17.610290846500526
              ],
              [
                118.89266864272192,
                -17.612086152010118
              ],
              [
                118.89372543654315,
                -17.613636034055503
              ],
              [
                118.89297441827605,
                -17.616264058516553
              ],
              [
                118.89273838396363,
                -17.617255948850357
              ],
              [
                118.89286712995278,
                -17.617603620460162
              ],
              [
                118.89303879127144,
                -17.61775700478086
              ],
              [
                118.89298514710953,
                -17.61796151700576
              ],
              [
                118.89310316426612,
                -17.61816602899876
              ],
              [
                118.89310316426648,
                -17.618738661346047
              ],
              [
                118.89346240518333,
                -17.61907231604025
              ],
              [
                118.89346240518356,
                -17.619450660715707
              ],
              [
                118.89415977929022,
                -17.619644945510583
              ],
              [
                118.89419196578761,
                -17.619859681093477
              ],
              [
                118.89449237309513,
                -17.61999261251656
              ],
              [
                118.89526411235953,
                -17.62075640820095
              ],
              [
                118.89544650251135,
                -17.622351570884952
              ],
              [
                118.89663740290858,
                -17.62218796510442
              ],
              [
                118.89673396240109,
                -17.6237831151285
              ],
              [
                118.8977102861503,
                -17.623885367853568
              ],
              [
                118.89891191538109,
                -17.626160476000692
              ],
              [
                118.89899238162442,
                -17.626743308076414
              ],
              [
                118.89892800862998,
                -17.626814883815513
              ],
              [
                118.8989548307112,
                -17.627172762084758
              ],
              [
                118.89943226375338,
                -17.627331250805426
              ],
              [
                118.89996334095751,
                -17.627280125426584
              ],
              [
                118.90012427344448,
                -17.629176867265883
              ],
              [
                118.90488787503583,
                -17.636620491462487
              ],
              [
                118.91319199131908,
                -17.64596548543999
              ],
              [
                118.91840620386726,
                -17.64966654159266
              ],
              [
                118.91842766153219,
                -17.650832051815406
              ],
              [
                118.92606659020194,
                -17.65543267639499
              ],
              [
                118.93037958082697,
                -17.65643457460292
              ],
              [
                118.93246097431258,
                -17.65686395784224
              ],
              [
                118.93295450060305,
                -17.656741277021425
              ],
              [
                118.93381280719528,
                -17.655718933595733
              ],
              [
                118.93973512268114,
                -17.653817359381915
              ],
              [
                118.9513651770081,
                -17.646865196702144
              ],
              [
                118.95810288376147,
                -17.640648918115357
              ],
              [
                118.96389645326916,
                -17.629401816467823
              ],
              [
                118.96355313063307,
                -17.628297517745494
              ],
              [
                118.97149246662853,
                -17.613859212356356
              ],
              [
                118.97672813685767,
                -17.602037756640495
              ],
              [
                118.97608440691927,
                -17.59626991428835
              ],
              [
                118.97393864044207,
                -17.590992790822025
              ],
              [
                118.97213619660589,
                -17.581542673085412
              ],
              [
                118.97080582139797,
                -17.569555449593576
              ],
              [
                118.97011917612974,
                -17.562681871049715
              ],
              [
                118.9721361966422,
                -17.545660458215057
              ],
              [
                118.96921795423091,
                -17.536903627722413
              ],
              [
                118.9691750389076,
                -17.530192499389567
              ],
              [
                118.96938961555782,
                -17.528473755849333
              ],
              [
                118.96655720380373,
                -17.52047819413371
              ],
              [
                118.96192234820367,
                -17.508077658494205
              ],
              [
                118.95771664589252,
                -17.504271383650156
              ],
              [
                118.95166558440036,
                -17.503043536039975
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                119.34061014993645,
                -17.254288350541824
              ],
              [
                119.33822834833123,
                -17.260739972863185
              ],
              [
                119.33762753351189,
                -17.26592420184713
              ],
              [
                119.33582508905388,
                -17.26713315128029
              ],
              [
                119.3343874250219,
                -17.266989717016333
              ],
              [
                119.3320270810888,
                -17.266482676089698
              ],
              [
                119.33245623453118,
                -17.267712112398023
              ],
              [
                119.32936632974602,
                -17.275068068304584
              ],
              [
                119.32837927682854,
                -17.27525247568232
              ],
              [
                119.32769263132073,
                -17.277588286490115
              ],
              [
                119.32477438791253,
                -17.2802314051048
              ],
              [
                119.32213509424187,
                -17.290721548319173
              ],
              [
                119.32177031381585,
                -17.29488056070846
              ],
              [
                119.31728209165476,
                -17.30149790881065
              ],
              [
                119.31704605726145,
                -17.30668099044911
              ],
              [
                119.31615259797705,
                -17.3111385377848
              ],
              [
                119.31630280168189,
                -17.31476447150863
              ],
              [
                119.31756880433691,
                -17.323040346024197
              ],
              [
                119.31752588899268,
                -17.325334581870496
              ],
              [
                119.31853439958228,
                -17.327710724500594
              ],
              [
                119.31759026200903,
                -17.329574745906648
              ],
              [
                119.31823399217261,
                -17.334511238650546
              ],
              [
                119.31782629640234,
                -17.336863767174005
              ],
              [
                119.3175473466648,
                -17.349073509825132
              ],
              [
                119.31971457154883,
                -17.355975635792756
              ],
              [
                119.319564367844,
                -17.357040629123286
              ],
              [
                119.31992914827002,
                -17.359354920220984
              ],
              [
                119.32173159272803,
                -17.362222142998906
              ],
              [
                119.32645228059424,
                -17.369226169982525
              ],
              [
                119.32800796182288,
                -17.373550826566447
              ],
              [
                119.32805087716712,
                -17.374810264501303
              ],
              [
                119.32849075944556,
                -17.375864909116096
              ],
              [
                119.32880189569129,
                -17.37640758795859
              ],
              [
                119.33247859711281,
                -17.37928333402071
              ],
              [
                119.34296454439617,
                -17.388669029131275
              ],
              [
                119.3520840550468,
                -17.393644883317506
              ],
              [
                119.35826386461711,
                -17.39499632651233
              ],
              [
                119.36092461595989,
                -17.394361558982695
              ],
              [
                119.36223353395916,
                -17.394934897492856
              ],
              [
                119.36302746782756,
                -17.39470965757821
              ],
              [
                119.3676623250053,
                -17.390716722139683
              ],
              [
                119.37242592821575,
                -17.383426830600964
              ],
              [
                119.37783326158977,
                -17.373679218569542
              ],
              [
                119.37856282244182,
                -17.37060738455641
              ],
              [
                119.38182438860393,
                -17.36282517449639
              ],
              [
                119.38208188066936,
                -17.35958931618298
              ],
              [
                119.38299415783817,
                -17.35083409151861
              ],
              [
                119.38282249646122,
                -17.34391128999151
              ],
              [
                119.38277958111698,
                -17.336742433213754
              ],
              [
                119.38277958111698,
                -17.328139435467424
              ],
              [
                119.38217876629764,
                -17.322117097220488
              ],
              [
                119.3812346287244,
                -17.311628744378
              ],
              [
                119.37769751889849,
                -17.298959396650307
              ],
              [
                119.37550883634233,
                -17.291051221517392
              ],
              [
                119.37439303739214,
                -17.283511504990607
              ],
              [
                119.37404971463823,
                -17.279290768016082
              ],
              [
                119.37550883634233,
                -17.277569663041113
              ],
              [
                119.3746934448018,
                -17.276791062650542
              ],
              [
                119.37276225431108,
                -17.274332302971395
              ],
              [
                119.37091689450884,
                -17.271381748044284
              ],
              [
                119.36087470395708,
                -17.259783970270625
              ],
              [
                119.35533862455034,
                -17.25285774095087
              ],
              [
                119.34911589963579,
                -17.250849495652165
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    not_deep_water = 
    /* color: #ff0000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-178.3598226344293, 28.39266160992541],
           [-178.3634275233453, 28.390320895893513],
           [-178.34991415800334, 28.383222930933783],
           [-178.30656966032268, 28.376577596946724],
           [-178.27627142729045, 28.38397805617536],
           [-178.2767864114213, 28.4138012009732],
           [-178.28476866544963, 28.432596793329594],
           [-178.29318007292034, 28.446332825788264],
           [-178.30459555448772, 28.45403026183809],
           [-178.32115791192064, 28.45983224561206],
           [-178.33823821892747, 28.457870314956832],
           [-178.36064002861986, 28.449418505115062],
           [-178.37205551018724, 28.435154544199534],
           [-178.37608955254564, 28.428361505892074],
           [-178.37892196526536, 28.41839759435678],
           [-178.3784069811345, 28.41417019706797],
           [-178.37151906838426, 28.41330204995284],
           [-178.37304256310472, 28.416680234561827],
           [-178.37304256310472, 28.41958651943677],
           [-178.37259195199022, 28.42234175481036],
           [-178.37113283028611, 28.42479498623397],
           [-178.37008140435228, 28.427701048355253],
           [-178.36857936730394, 28.430474942314515],
           [-178.36368701806077, 28.436965947434768],
           [-178.3587732111455, 28.440626396814547],
           [-178.35370920052537, 28.443701831112005],
           [-178.3464003238721, 28.447975443089582],
           [-178.3350706729932, 28.45212602648959],
           [-178.3252001438184, 28.453786214232593],
           [-178.31292635536624, 28.451371387079984],
           [-178.30039507484867, 28.443975635867236],
           [-178.29284197426273, 28.434390576686894],
           [-178.2885504398389, 28.420577507696454],
           [-178.28554636574222, 28.407530143761267],
           [-178.28571802711917, 28.397639774679806],
           [-178.2893229160352, 28.390693314818765],
           [-178.29601770973636, 28.386615832883905],
           [-178.3127546939893, 28.387068894176487],
           [-178.32180983162357, 28.387446443774746],
           [-178.34664698933432, 28.38870187253161]]],
         [[[-177.3845128859075, 28.27323474413204],
           [-177.37043660802178, 28.276560705872825],
           [-177.3578194564977, 28.27550245658089],
           [-177.3497513460064, 28.27278119584386],
           [-177.34065326398763, 28.265070579620087],
           [-177.331020963439, 28.253100801428065],
           [-177.3214078957381, 28.237676163706247],
           [-177.31677302385913, 28.225349972686477],
           [-177.3154855595071, 28.214081227552807],
           [-177.3205495863185, 28.206215090030057],
           [-177.3359991594947, 28.200617677969188],
           [-177.3500754372459, 28.20008817789492],
           [-177.35303656840102, 28.20131746132522],
           [-177.35388413483847, 28.204744952552502],
           [-177.3554183764866, 28.204844239715143],
           [-177.35608356561315, 28.201336400686785],
           [-177.3616626170987, 28.201525386396376],
           [-177.3733356279167, 28.201071533175273],
           [-177.3857811173848, 28.19812144022518],
           [-177.3960808327952, 28.19456609178352],
           [-177.4050072528244, 28.194566091754314],
           [-177.41659443272007, 28.20243308694423],
           [-177.4189976997879, 28.222551804709003],
           [-177.4117020680185, 28.224744969653198],
           [-177.40895547726592, 28.231626677353585],
           [-177.41376201118098, 28.236541911147487],
           [-177.4073246890735, 28.24924485114533],
           [-177.39771162132593, 28.261341482582836],
           [-177.3856094556251, 28.27200050114612],
           [-177.3911884682215, 28.278879159697947],
           [-177.40397728164697, 28.27252964444862],
           [-177.41642277117379, 28.2620218772489],
           [-177.42766662701771, 28.229398167812274],
           [-177.4323014987876, 28.206935981095018],
           [-177.42723747194782, 28.196119169200028],
           [-177.4070710960901, 28.186901579840338],
           [-177.33917880534997, 28.18947373029764],
           [-177.31838562411178, 28.1952230191566],
           [-177.30525348690006, 28.201350210277926],
           [-177.3004469529217, 28.21360353859981],
           [-177.3138381386852, 28.2414349938472],
           [-177.32276455867415, 28.257010293534023],
           [-177.33460923143141, 28.272810092717204],
           [-177.36713916629793, 28.28565987615884],
           [-177.38130127516678, 28.283392379977272],
           [-177.38936938566286, 28.279461938881685]]],
         [[[-175.99629615060098, 27.787422921721983],
           [-175.98985884896524, 27.77519702482107],
           [-175.97003195992716, 27.756893580178907],
           [-175.9493467640043, 27.75051323293087],
           [-175.89638922921426, 27.76684313736514],
           [-175.86858008614786, 27.786207987264035],
           [-175.822317345059, 27.780664676545005],
           [-175.797896924949, 27.77519702482107],
           [-175.77309185597926, 27.783094655753583],
           [-175.7540016132682, 27.805841377108948],
           [-175.70078658641273, 27.916779833165183],
           [-175.7148628193229, 27.934980488279994],
           [-175.7461702024326, 27.972470626140723],
           [-175.78702561014745, 27.977625130923606],
           [-175.8495103513584, 27.966102956675808],
           [-175.90890518778417, 27.927889050763525],
           [-175.95662705057714, 27.89755093361501],
           [-175.95619789713476, 27.880482003910245],
           [-175.94555489176366, 27.876385060383264],
           [-175.93860260599706, 27.884958116893866],
           [-175.92246643656347, 27.89603774962104],
           [-175.89500061625097, 27.910146229930504],
           [-175.87611786478612, 27.923494495558785],
           [-175.86324326151464, 27.93259464093652],
           [-175.85036865824316, 27.93972255294349],
           [-175.81895462626073, 27.95306716613338],
           [-175.7985269224033, 27.959132354270277],
           [-175.7542382871494, 27.952915532064196],
           [-175.7370721494541, 27.938812632913262],
           [-175.73054901712987, 27.91621382765761],
           [-175.7351838743076, 27.893610298728913],
           [-175.7586417069973, 27.83021316694681],
           [-175.77865158076264, 27.792398841509065],
           [-175.79427276606538, 27.78617244387809],
           [-175.839591369581, 27.791183962655353],
           [-175.8674005126474, 27.793917420983327],
           [-175.91786895747163, 27.7679467922622],
           [-175.94928298945405, 27.757769475169997],
           [-175.96473251337983, 27.76126328830424],
           [-175.98155532832124, 27.778578793488805],
           [-175.99031005854584, 27.789057891992655]]],
         [[[-173.90074893282986, 25.96750636828009],
           [-173.92872973727322, 25.954850555904454],
           [-173.94898577975368, 25.970438618367783],
           [-173.9603154306326, 25.971055924862007],
           [-173.97250338839626, 25.98154963954889],
           [-173.97559329318142, 25.989727914807652],
           [-173.99550601290798, 25.99836849302157],
           [-174.00220080660915, 26.00669987734475],
           [-174.00254412936306, 26.01564774294948],
           [-174.01387378024197, 26.02243532401679],
           [-174.0188519601736, 26.027988507459018],
           [-174.0233151559744, 26.030302256326735],
           [-174.02417346285915, 26.036009308427268],
           [-174.02194186495876, 26.042024549222887],
           [-174.01541873263454, 26.055596266523583],
           [-174.0046040658865, 26.067778628561495],
           [-173.9723317270193, 26.081347362865095],
           [-173.9445225839529, 26.064231995652484],
           [-173.92890139865017, 26.047731030894575],
           [-173.91551181124782, 26.032615959562833],
           [-173.90452548312282, 26.012870892114783],
           [-173.89199420260525, 26.00083711294535],
           [-173.8925091867361, 25.985870308695088],
           [-173.8950841073904, 25.974142408736906],
           [-173.90298053073022, 25.964805546959514],
           [-173.88238116549584, 25.949602624803802],
           [-173.86229678439236, 25.967969359995227],
           [-173.86092349337673, 26.011945260574468],
           [-173.87414141940212, 26.040327974084697],
           [-173.8859860544119, 26.050352834748868],
           [-173.91246409776414, 26.079898315531775],
           [-173.9352950608989, 26.093465645109582],
           [-173.9711722886821, 26.099940406920773],
           [-173.98902507188524, 26.097782192806],
           [-174.02953715684617, 26.0869905249326],
           [-174.0396651780864, 26.06771721411414],
           [-174.0467032945415, 26.04967452109479],
           [-174.04653163316453, 26.034251214281014],
           [-174.03691859605516, 26.023607949934256],
           [-174.03520198228563, 26.01928866873467],
           [-174.0360602891704, 26.007101268504],
           [-174.02902217271532, 25.99414112629759],
           [-174.02438731553758, 25.988586341976234],
           [-174.01855082872117, 25.983648535508145],
           [-174.01134105088914, 25.978093255312515],
           [-173.9924582994243, 25.96713623903073],
           [-173.96773906114305, 25.942749357479606],
           [-173.93585203123962, 25.932464311775284],
           [-173.90340803099548, 25.931692425163384],
           [-173.88040540648376, 25.951142425657043]]],
         [[[-170.6340935745706, 25.454894649345054],
           [-170.66070108799835, 25.469153543576596],
           [-170.68336038975616, 25.470393367564053],
           [-170.69469004063507, 25.459389483146122],
           [-170.676665596055, 25.441874183567165],
           [-170.6685975113382, 25.43024757805773],
           [-170.67100077061554, 25.422340845451952],
           [-170.6663659134378, 25.41799967366642],
           [-170.65074472813507, 25.42203076693731],
           [-170.64130335240264, 25.423736188897045],
           [-170.63289194493194, 25.422805961728333],
           [-170.60611277012725, 25.405750524933183],
           [-170.5791619339456, 25.377681330491782],
           [-170.5791619339456, 25.368064967824374],
           [-170.56600003748576, 25.34354823205725],
           [-170.5428257515971, 25.3297399617653],
           [-170.50712018519084, 25.321826647397273],
           [-170.51175504236858, 25.328653851202507],
           [-170.50231366663616, 25.33160184291467],
           [-170.4908123543803, 25.332222463600026],
           [-170.4911556771342, 25.340600531360238],
           [-170.49424558191936, 25.348978019004658],
           [-170.48995404749553, 25.35161525614218],
           [-170.488237433726, 25.35859590035337],
           [-170.4933872750346, 25.363559668796402],
           [-170.49733548670451, 25.382016893894317],
           [-170.50454526453655, 25.39160279611581],
           [-170.51158338099162, 25.39625506355501],
           [-170.5160465767924, 25.40617930135911],
           [-170.51724820643108, 25.416412816531622],
           [-170.50162702112834, 25.426025327556655],
           [-170.53063779383342, 25.46028304029943],
           [-170.53973584681194, 25.43749732105068],
           [-170.5644550850932, 25.44478301995488],
           [-170.57492642908733, 25.464157733511552],
           [-170.57318346361953, 25.476532735598454],
           [-170.57498590807754, 25.479322150439607],
           [-170.59180872301897, 25.46645930998267],
           [-170.60073511462053, 25.46862904217005],
           [-170.61669962267717, 25.479322150439607],
           [-170.61395304064592, 25.48892963953271],
           [-170.59850351672014, 25.51542373367276],
           [-170.62476770739397, 25.518676991379984],
           [-170.63987390856585, 25.520535956194244],
           [-170.6451954112514, 25.516353244872175],
           [-170.64193384508928, 25.507057809009485],
           [-170.64656870226702, 25.49683199844296],
           [-170.6371273265346, 25.476687704787224],
           [-170.64742700915178, 25.48195653837032],
           [-170.65772669176894, 25.46576188775449],
           [-170.63249246935683, 25.451735093684928],
           [-170.62202112536272, 25.46428953866264],
           [-170.61609880785784, 25.466304327614672],
           [-170.60657160143694, 25.46304965176811],
           [-170.6012500987514, 25.46018236438923],
           [-170.595413611935, 25.455300069221426],
           [-170.59326784472307, 25.454215087843558],
           [-170.59000627856096, 25.45638504081924],
           [-170.5865730510219, 25.457237511642024],
           [-170.5843414531215, 25.456927522950522],
           [-170.58356897692522, 25.454990075539985],
           [-170.58631555895647, 25.4540600897055],
           [-170.58846132616839, 25.448712531727235],
           [-170.58571474413714, 25.445612389356427],
           [-170.58442728381, 25.44328723019912],
           [-170.5778183207973, 25.442434660593065],
           [-170.57275431017717, 25.43840424984516],
           [-170.57017938952288, 25.435226330899997],
           [-170.56520120959124, 25.432048328123606],
           [-170.56417124132952, 25.427319924961566],
           [-170.56726114611467, 25.42592462300411],
           [-170.58013574938616, 25.429257817547747],
           [-170.58125154833635, 25.431583247515366],
           [-170.5778183207973, 25.435381353281333],
           [-170.58065073351702, 25.436388993897626],
           [-170.5865730510219, 25.435536375463187],
           [-170.58554308276018, 25.43336604676481],
           [-170.58717386584124, 25.432435893925813],
           [-170.58897631029924, 25.43352107153986],
           [-170.5924095378383, 25.432978483954567],
           [-170.59446947436174, 25.43600144081186],
           [-170.59695856432756, 25.435923930045085],
           [-170.60022013048967, 25.433753608328384],
           [-170.60348169665178, 25.43321102179033],
           [-170.6045116649135, 25.436388993897626],
           [-170.60691492419085, 25.438636777208075],
           [-170.61721460680803, 25.438714286229285],
           [-170.62310595798965, 25.437438977875217],
           [-170.62851329136367, 25.43588877156302],
           [-170.62945742893692, 25.436896407935134],
           [-170.629114106183, 25.44038431490765],
           [-170.6305732278871, 25.4427870365118],
           [-170.63400645542617, 25.44286454286226],
           [-170.63829798985, 25.44046182280434],
           [-170.64250369358535, 25.440616838448097],
           [-170.6471385507631, 25.444879690465495],
           [-170.6419887094545, 25.447282322381746],
           [-170.63555140781875, 25.44937489821517],
           [-170.64319033909317, 25.451467437678872],
           [-170.64645190525528, 25.455187418028057],
           [-170.6416453867006, 25.455187418028057],
           [-170.63872714329239, 25.45580740357606]]],
         [[[-166.31174461060414, 23.821795763036764],
           [-166.3089980285729, 23.83011845038909],
           [-166.30951301270375, 23.84181641944645],
           [-166.30436317139515, 23.853042336867684],
           [-166.30436317139515, 23.857987712207283],
           [-166.2983550232018, 23.861912478909943],
           [-166.23810187989125, 23.874000013096513],
           [-166.18694678955922, 23.85155083741753],
           [-166.1043776965168, 23.812507164658435],
           [-166.0714187121418, 23.76915465370108],
           [-166.0666121935871, 23.745273185658224],
           [-166.06484660414992, 23.70385170480982],
           [-166.0685373237544, 23.69174834042771],
           [-166.0726571968013, 23.682080561607187],
           [-166.07986697463332, 23.668097483749186],
           [-166.092054932397, 23.654890143840955],
           [-166.10183963088332, 23.63892949542056],
           [-166.1216665199214, 23.629257810736945],
           [-166.1329961708003, 23.626505574780268],
           [-166.13548526076613, 23.626977390766026],
           [-166.13883265761672, 23.62831419349577],
           [-166.14741572646437, 23.632953579466175],
           [-166.15960368422805, 23.637907318609543],
           [-166.17470988539992, 23.640344803981762],
           [-166.18217715529738, 23.64113107990337],
           [-166.18998774794875, 23.638536351437825],
           [-166.19282016066848, 23.639165381243448],
           [-166.19762667922316, 23.640030292290632],
           [-166.20397815017043, 23.64073794253297],
           [-166.21350535659133, 23.6438830084322],
           [-166.21891268996535, 23.645927260737693],
           [-166.22380503920851, 23.64663487909552],
           [-166.22946986464797, 23.648600465567156],
           [-166.23075732497512, 23.651823963458188],
           [-166.23161563185988, 23.654890143840955],
           [-166.23513469008742, 23.658821039190727],
           [-166.2388254096919, 23.662280129365538],
           [-166.24852427748976, 23.656619752349936],
           [-166.25178584365187, 23.64954393658542],
           [-166.24157199172316, 23.642467738130055],
           [-166.21977099685012, 23.635233895369257],
           [-166.1279321601802, 23.617462106614937],
           [-166.1033845832759, 23.623202815292988],
           [-166.08186138450924, 23.640367913232826],
           [-166.0581721144897, 23.682584236402786],
           [-166.04422107219563, 23.728358373608778],
           [-166.0509158658968, 23.75090740888913],
           [-166.0526730442208, 23.79115696586891],
           [-166.09455842019736, 23.834502135430302],
           [-166.14949006082236, 23.86276292360837],
           [-166.27926606179892, 23.902317668725292],
           [-166.33763092996298, 23.875321295369552],
           [-166.34655732156455, 23.828221123622253]]],
         [[[-171.73526699959257, 25.791296203425873],
           [-171.75329144417265, 25.783722457484483],
           [-171.75483639656522, 25.766563815815555],
           [-171.74496586739042, 25.74808845117135],
           [-171.72848637520292, 25.74128508251104],
           [-171.71303685127714, 25.761230219085007],
           [-171.70745785652616, 25.783181457123117]]],
         [[[-169.46920901398317, 16.80338012541668],
           [-169.5255139456238, 16.78102967725693],
           [-169.56705599884646, 16.727772432973662],
           [-169.57220584015505, 16.687984162673906],
           [-169.54757195819263, 16.703058367918356],
           [-169.54946023333912, 16.71432070259388],
           [-169.55564004290943, 16.712923222728847],
           [-169.55709916461353, 16.71777325602501],
           [-169.5473144661272, 16.735199476528322],
           [-169.54319459308033, 16.73947358919103],
           [-169.53473614230143, 16.74911107384594],
           [-169.52847050204264, 16.758398248678095],
           [-169.51962994112955, 16.766452245677115],
           [-169.51345013155924, 16.769410771167692],
           [-169.50392292513834, 16.772122712428658],
           [-169.49551151766764, 16.777217770173646],
           [-169.48804424777018, 16.782312691325714],
           [-169.48289440646158, 16.78350422575409],
           [-169.4731526233195, 16.78436705636447],
           [-169.4692044116496, 16.78428488218949],
           [-169.46710155978192, 16.784243795088642],
           [-169.46495579257, 16.784079446596476],
           [-169.4634966708659, 16.784243795088706],
           [-169.46199463381757, 16.784284882189464],
           [-169.46075008883466, 16.78416162086032],
           [-169.4596772052287, 16.783915097962087],
           [-169.45886181368817, 16.783750749185526],
           [-169.4578747607707, 16.78346313848442],
           [-169.45705936923014, 16.783339876622087],
           [-169.45448444857584, 16.782066166028187],
           [-169.4524245120524, 16.781490939089938],
           [-169.4468026019572, 16.779724159747815],
           [-169.44238232150065, 16.779148925719284],
           [-169.43912075533854, 16.778203894606364],
           [-169.43736122622477, 16.778203894606364],
           [-169.4361595965861, 16.777751921543224],
           [-169.43367050662027, 16.776354907097538],
           [-169.4322543002604, 16.775245505957756],
           [-169.4295506335734, 16.772615788501728],
           [-169.42852066531168, 16.77060238648612],
           [-169.42693279757486, 16.768424601118614],
           [-169.42307041659342, 16.766123517781352],
           [-169.41955135836588, 16.77015039534793]]]]),
    back_reef_slope = 
    /* color: #00ffff */
    /* shown: false */
    ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -178.37205282418523,
                28.41368511029238
              ],
              [
                -178.3771597501496,
                28.414289037289233
              ],
              [
                -178.3778463956574,
                28.40783438923465
              ],
              [
                -178.37351194588933,
                28.39764203889437
              ],
              [
                -178.36703172890935,
                28.390771086625854
              ],
              [
                -178.36364141671453,
                28.389864993746716
              ],
              [
                -178.35986486642156,
                28.39220571784537
              ],
              [
                -178.35896364419256,
                28.39296077910953
              ],
              [
                -178.3591353055695,
                28.394017855843366
              ],
              [
                -178.35690370766912,
                28.395225930630314
              ],
              [
                -178.3558737394074,
                28.397981799701466
              ],
              [
                -178.3551870938996,
                28.400850847523643
              ],
              [
                -178.35793367593084,
                28.40587149429102
              ],
              [
                -178.36444098117,
                28.409405856793395
              ],
              [
                -178.3660288489068,
                28.41287853030311
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -169.49980431716665,
                16.68886262774245
              ],
              [
                -169.3864665385762,
                16.756967473323435
              ],
              [
                -169.42835191455276,
                16.782854301630753
              ],
              [
                -169.43684915271194,
                16.77825245645216
              ],
              [
                -169.4391665813008,
                16.776773268262204
              ],
              [
                -169.4406257030049,
                16.775458424650516
              ],
              [
                -169.4417415019551,
                16.77381485734489
              ],
              [
                -169.44225648608597,
                16.772171275828192
              ],
              [
                -169.44199899402054,
                16.770856400383682
              ],
              [
                -169.4431147929707,
                16.76756917198897
              ],
              [
                -169.44629052844437,
                16.764774983173925
              ],
              [
                -169.44766381945996,
                16.764035338086604
              ],
              [
                -169.44929460254104,
                16.76230948836423
              ],
              [
                -169.44998124804883,
                16.760830176139475
              ],
              [
                -169.45350030627637,
                16.760254884945514
              ],
              [
                -169.4564185496846,
                16.758364630202873
              ],
              [
                -169.4592509624043,
                16.756967473323474
              ],
              [
                -169.46178298277272,
                16.75659765193349
              ],
              [
                -169.46457246508984,
                16.754255315979705
              ],
              [
                -169.4684348991935,
                16.751912989858237
              ],
              [
                -169.47015149875105,
                16.75002264485227
              ],
              [
                -169.47212556567578,
                16.749365116438973
              ],
              [
                -169.4747863112797,
                16.749221300089406
              ],
              [
                -169.47718957629593,
                16.750228101957145
              ],
              [
                -169.47959283557327,
                16.75146093162544
              ],
              [
                -169.48400049733982,
                16.75433750313374
              ],
              [
                -169.49498682546482,
                16.754994999088524
              ],
              [
                -169.49387102651463,
                16.740693949624248
              ],
              [
                -169.51112299489841,
                16.73641986433949
              ],
              [
                -169.51747446584568,
                16.7336252182743
              ],
              [
                -169.51764612722263,
                16.722035219323605
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -175.99736759624233,
                27.83857574866536
              ],
              [
                -175.9898144956564,
                27.83857574866536
              ],
              [
                -175.9843213315939,
                27.839486511549346
              ],
              [
                -175.9814030881857,
                27.842066964866298
              ],
              [
                -175.97754070720424,
                27.84282591004272
              ],
              [
                -175.97067425212612,
                27.842066964866298
              ],
              [
                -175.95556805095424,
                27.8387275430103
              ],
              [
                -175.94930241069545,
                27.84168749028688
              ],
              [
                -175.9553963895773,
                27.84495092828748
              ],
              [
                -175.9652669187521,
                27.848897280287996
              ],
              [
                -175.97196171245326,
                27.85830723245134
              ],
              [
                -175.9861237760519,
                27.865743552309002
              ],
              [
                -175.99805424175014,
                27.868778638274605
              ],
              [
                -176.01401874980678,
                27.86984089827887
              ],
              [
                -176.0201985593771,
                27.866426454062896
              ],
              [
                -176.02243015727748,
                27.847758924255263
              ],
              [
                -176.02191517314662,
                27.824685667451106
              ],
              [
                -176.0157353635763,
                27.819372051607004
              ],
              [
                -176.00740978679408,
                27.820358885641397
              ],
              [
                -176.0066373105978,
                27.821725256420596
              ],
              [
                -176.0062939878439,
                27.824154317569516
              ],
              [
                -176.00534985027065,
                27.823622965087203
              ],
              [
                -176.00534985027065,
                27.824533853464608
              ],
              [
                -176.00500652751674,
                27.825900171700027
              ],
              [
                -176.00431988200893,
                27.82605198377575
              ],
              [
                -176.00320408305873,
                27.828480948112173
              ],
              [
                -176.00243160686244,
                27.836374706798267
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    reef_flat = 
    /* color: #ff0000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-166.21780233001004, 23.855147756689785],
          [-166.21787428737028, 23.85356607704976],
          [-166.21820372712935, 23.85210214646867],
          [-166.21956311607173, 23.850638211284984],
          [-166.221094207767, 23.849704175091592],
          [-166.22202446317706, 23.848377621118438],
          [-166.2218243993981, 23.846821376792228],
          [-166.22042272957611, 23.844558597776892],
          [-166.2171473785781, 23.842388019903932],
          [-166.2142475123033, 23.840488872851846],
          [-166.2114580149278, 23.838172892063877],
          [-166.21173696466536, 23.8367401035776],
          [-166.2108679310645, 23.835292608853802],
          [-166.20901183802087, 23.83525826956975],
          [-166.20725230292396, 23.834973661216825],
          [-166.20643691965194, 23.83411001228068],
          [-166.20569661220307, 23.832431828040924],
          [-166.2033684725389, 23.83110693237556],
          [-166.2001069063768, 23.832402387136607],
          [-166.1973388530914, 23.833560442710514],
          [-166.1943991655931, 23.833383783645075],
          [-166.19160964976197, 23.83275568146844],
          [-166.18965701269082, 23.832088324139796],
          [-166.18714647241683, 23.830714367772465],
          [-166.18570880708629, 23.829811455210407],
          [-166.18414239832015, 23.828005639632632],
          [-166.18182496973128, 23.824040587765925],
          [-166.1816103930101, 23.820036154991005],
          [-166.17980794855208, 23.818465755467923],
          [-166.17620305963607, 23.817366464496235],
          [-166.17268400140853, 23.815796032672335],
          [-166.17088155695052, 23.814461150683854],
          [-166.16864995905013, 23.81501080963561],
          [-166.16598920770736, 23.815953076709707],
          [-166.16195516534896, 23.815953076709707],
          [-166.15903692194075, 23.81461819633612],
          [-166.15586118646712, 23.81312625496903],
          [-166.15954374945983, 23.81089891082814],
          [-166.16280531562194, 23.808071979041205],
          [-166.16460776007995, 23.804302640927144],
          [-166.16538023627623, 23.80092584930376],
          [-166.16752600348815, 23.797470436774574],
          [-166.16821264899596, 23.79370079101963],
          [-166.16855597174987, 23.787417805082598],
          [-166.1676976648651, 23.78388349202174],
          [-166.16615271247252, 23.782077028239843],
          [-166.16465063810347, 23.776185993866573],
          [-166.1600372610487, 23.774418724196266],
          [-166.15722632087096, 23.768724126362446],
          [-166.15692604643883, 23.764796503738722],
          [-166.15688314686727, 23.76365749720271],
          [-166.1581276959217, 23.76316654889828],
          [-166.15795603225763, 23.7622140847806],
          [-166.15797748514942, 23.76106522765793],
          [-166.1598657175723, 23.76045644501416],
          [-166.15988707221373, 23.758944219909385],
          [-166.15852433283015, 23.758060466390507],
          [-166.15784824849052, 23.757726604256728],
          [-166.15657142237112, 23.758256855414924],
          [-166.14904511307486, 23.75007682828726],
          [-166.14828625852, 23.7478918247218],
          [-166.14555334723815, 23.74641386836288],
          [-166.13679861701354, 23.736121580650757],
          [-166.13061867391187, 23.733135494659347],
          [-166.12220739997252, 23.726457089506585],
          [-166.0882184473358, 23.72960009208868],
          [-166.0904500452362, 23.71529881837216],
          [-166.08598684943541, 23.707911832018677],
          [-166.09422659552916, 23.69439413593767],
          [-166.10813116706237, 23.675372681909728],
          [-166.12495398200377, 23.662637764397033],
          [-166.157054659494, 23.661537157731388],
          [-166.16821264899596, 23.66310945013209],
          [-166.17885565436706, 23.66499617605618],
          [-166.2039182154022, 23.662008847436727],
          [-166.24322867072448, 23.67112784726367],
          [-166.25833487189635, 23.650058850521575],
          [-166.21318792975768, 23.63291813380856],
          [-166.18761038459166, 23.626155582357534],
          [-166.12581228888854, 23.615932458055635],
          [-166.10555624640807, 23.617662581319582],
          [-166.08324026740416, 23.64329718450811],
          [-166.0610959497772, 23.680560625893023],
          [-166.04594025105064, 23.71791419935658],
          [-166.0442236372811, 23.757198858308698],
          [-166.05761322468345, 23.79057860593184],
          [-166.0830191084725, 23.816022203468027],
          [-166.13074097126548, 23.84821220091113],
          [-166.1951139876229, 23.87207474660744],
          [-166.2179878661019, 23.856729436309]]]),
    not_deep_lagoon = 
    /* color: #00ff00 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-177.40189825993468, 28.198534464511646],
           [-177.39546095829894, 28.185674224548936],
           [-177.3703125665753, 28.192331483104535],
           [-177.34095847111632, 28.190515908249044],
           [-177.32327734929015, 28.192180186377726],
           [-177.31014525395324, 28.200728115660013],
           [-177.31383597355773, 28.21744377084172],
           [-177.33349120121886, 28.224250301594203],
           [-177.33658110600402, 28.214721037042818],
           [-177.34662329655578, 28.203829407682864],
           [-177.3655918787091, 28.20292172177442]]],
         [[[-178.29894823418186, 28.389088276958297],
           [-178.30667299614475, 28.38682299428205],
           [-178.30847544060276, 28.380177885892163],
           [-178.29645914421604, 28.37859205984806],
           [-178.28203958855198, 28.387804622717706],
           [-178.28916353569554, 28.392486110216726]]],
         [[[-175.8651640549047, 27.78603347457613],
           [-175.82224871066643, 27.7773007197387],
           [-175.78594232944084, 27.777908238420103],
           [-175.7648279800756, 27.79795445108204],
           [-175.7623388901098, 27.8020543573968],
           [-175.77104260035912, 27.805938638493497],
           [-175.77679325648705, 27.79728340869415],
           [-175.78340221949975, 27.789918328249257],
           [-175.79215694972436, 27.78741256856575],
           [-175.8029716164724, 27.787108836195014],
           [-175.82211186000268, 27.789614602878594],
           [-175.83284069606225, 27.79120915160829],
           [-175.84211041041772, 27.79120915160829],
           [-175.8524100930349, 27.793107393410843],
           [-175.8619372994558, 27.79500560206564]]],
         [[[-166.31452254525834, 23.875988258700826],
           [-166.30250624887162, 23.863822417162726],
           [-166.2996738361519, 23.868217949865187],
           [-166.29460982553178, 23.871200547798832],
           [-166.2875717090767, 23.874340050343502],
           [-166.27873114816362, 23.87653765682294],
           [-166.26946143380815, 23.877479476749876],
           [-166.26130751840287, 23.877479476749876],
           [-166.2568443226021, 23.87802886854247],
           [-166.244398872773, 23.87810735289389],
           [-166.23607329599076, 23.876459171519688],
           [-166.2238853382271, 23.875988258700826],
           [-166.21513060800248, 23.872299382349716],
           [-166.20980910531694, 23.88375810111742],
           [-166.2520378040474, 23.886426424227082],
           [-166.279160301606, 23.883836581994302]]],
         [[[-169.49276325618985, 16.78186621585038],
           [-169.4956385842538, 16.77981182376929],
           [-169.49568149959805, 16.778250470932264],
           [-169.49411508953335, 16.778517545353388],
           [-169.491711830256, 16.779791279736298],
           [-169.4895875207162, 16.781188268919273],
           [-169.48870775615933, 16.78147588306427],
           [-169.4861972085214, 16.783324820742937],
           [-169.48780653393032, 16.785358631405295]]],
         [[[-171.75057311408125, 25.783643534629643],
           [-171.75726790778242, 25.770272365210737],
           [-171.75314803473555, 25.74932374772222],
           [-171.71898742072187, 25.745999457636305],
           [-171.70396705023848, 25.786425785074492],
           [-171.7419900452336, 25.79276288964354]]],
         [[[-170.69409197012726, 25.461018999630905],
           [-170.68868463675324, 25.45210678628612],
           [-170.66087549368683, 25.42149024636728],
           [-170.65460985342804, 25.42218792503188],
           [-170.6489450279886, 25.42412590013539],
           [-170.6478292290384, 25.429552064654754],
           [-170.64937418143097, 25.437380814298248],
           [-170.65375154654328, 25.441876301958565],
           [-170.65701311270539, 25.443658948879744],
           [-170.6558973137552, 25.44854171618229],
           [-170.654781514805, 25.452184286637646],
           [-170.6602746788675, 25.45505176456801],
           [-170.66345041434113, 25.45815166386597],
           [-170.66714113394562, 25.463808774257682],
           [-170.68525140921417, 25.465668588073786]]],
         [[[-170.64653213122244, 25.521341320894127],
           [-170.66078002550955, 25.503215307520637],
           [-170.64018066027518, 25.484466723557176],
           [-170.6118565330779, 25.48369192574818],
           [-170.59881026842947, 25.511116726726797],
           [-170.63623244860526, 25.525523858373617]]],
         [[[-173.97835005218792, 25.945741639533257],
           [-173.9579223483305, 25.928915261322516],
           [-173.9081405490141, 25.923511786128117],
           [-173.86793141699616, 25.951416500301598],
           [-173.85660176611725, 25.9850604210575],
           [-173.8699913535196, 26.040135405527472],
           [-173.89986043310944, 26.036433695765066],
           [-173.90346496456542, 26.029646541173598],
           [-173.89857245154806, 26.023862167157628],
           [-173.8916206870157, 26.016072203936886],
           [-173.88698582983795, 26.00805004022428],
           [-173.88183598852936, 26.00110734080258],
           [-173.88097768164462, 25.99416423102294],
           [-173.87989823215094, 25.982481638588027],
           [-173.88204425125414, 25.97032857371264],
           [-173.88710800998297, 25.96604597368862],
           [-173.9078790365943, 25.949839914762347],
           [-173.93688980929937, 25.944283038056614],
           [-173.9437562643775, 25.95138344508345],
           [-173.95663086764898, 25.95832908108216]]]]),
    not_reef_slope = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -175.89639792544625,
                27.90988615101279
              ],
              [
                -175.910079081705,
                27.902629213030995
              ],
              [
                -175.92556104747942,
                27.896584339141803
              ],
              [
                -175.93657959182596,
                27.890454760523582
              ],
              [
                -175.98498805270762,
                27.85927146655056
              ],
              [
                -176.0093663376785,
                27.82238078578412
              ],
              [
                -175.99975092164513,
                27.789436921280654
              ],
              [
                -175.99322763606907,
                27.788449989295096
              ],
              [
                -175.98464473045775,
                27.784880934416606
              ],
              [
                -175.97434505468692,
                27.769844823609226
              ],
              [
                -175.9544308340622,
                27.75830350437567
              ],
              [
                -175.9386390229351,
                27.759672092969577
              ],
              [
                -175.90293396895044,
                27.77273070286786
              ],
              [
                -175.86997500629508,
                27.796422396691437
              ],
              [
                -175.8443974781245,
                27.791335188176564
              ],
              [
                -175.83147972655186,
                27.79190522196598
              ],
              [
                -175.81907744541425,
                27.787158947602286
              ],
              [
                -175.78036782417823,
                27.797029807785965
              ],
              [
                -175.7587385075562,
                27.838022230538353
              ],
              [
                -175.739855768707,
                27.879909593545804
              ],
              [
                -175.72955609305882,
                27.922994178029192
              ],
              [
                -175.74225902655385,
                27.932701010978406
              ],
              [
                -175.79229828476352,
                27.960300051601184
              ],
              [
                -175.8005394830013,
                27.959732260129304
              ],
              [
                -175.80388723457938,
                27.95903094524013
              ],
              [
                -175.81135450674049,
                27.95686062958328
              ],
              [
                -175.81514751138062,
                27.95650041315713
              ],
              [
                -175.82417603438958,
                27.952841940899322
              ],
              [
                -175.8312035794887,
                27.949770306767366
              ],
              [
                -175.8350979849029,
                27.9481010193094
              ],
              [
                -175.83985055082658,
                27.946128314897322
              ],
              [
                -175.84821839915824,
                27.940874644926176
              ],
              [
                -175.86364679817325,
                27.932333296093567
              ],
              [
                -175.8763264919299,
                27.924548834581074
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -166.30908526115093,
                23.819554554561872
              ],
              [
                -166.28196276359233,
                23.790970204028184
              ],
              [
                -166.25999010734233,
                23.67908534558178
              ],
              [
                -166.2249711864439,
                23.6567597498551
              ],
              [
                -166.1854032390562,
                23.643000882533094
              ],
              [
                -166.17081202201518,
                23.64064207429566
              ],
              [
                -166.15124262504253,
                23.643315387086123
              ],
              [
                -166.1163783166212,
                23.63905263612774
              ],
              [
                -166.0954356286329,
                23.65980894148595
              ],
              [
                -166.0734629723829,
                23.70602705268186
              ],
              [
                -166.07723952267588,
                23.76479786757104
              ],
              [
                -166.1115717980665,
                23.80815183147648
              ],
              [
                -166.23379469845713,
                23.868132354580087
              ],
              [
                -166.29971266720713,
                23.858713167037063
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -178.35076641063426,
                28.444922966723677
              ],
              [
                -178.3615810773823,
                28.438384406531082
              ],
              [
                -178.3625681302998,
                28.43725229832116
              ],
              [
                -178.36295436839794,
                28.435327686562808
              ],
              [
                -178.36836170177196,
                28.428610139845265
              ],
              [
                -178.37136577586864,
                28.42159022535888
              ],
              [
                -178.3641559980366,
                28.410493282124772
              ],
              [
                -178.3575470350239,
                28.405963583380476
              ],
              [
                -178.3556368545718,
                28.400150185897896
              ],
              [
                -178.35651646209422,
                28.397809675033397
              ],
              [
                -178.33986591319774,
                28.391467245930198
              ],
              [
                -178.32441638927196,
                28.389277522594988
              ],
              [
                -178.32201312999462,
                28.41562670653195
              ],
              [
                -178.3492214582417,
                28.44445984695727
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -177.38563373619195,
                28.265819192133954
              ],
              [
                -177.38898113304253,
                28.264345055275193
              ],
              [
                -177.389066963731,
                28.260187123499893
              ],
              [
                -177.38893821769832,
                28.2592799168288
              ],
              [
                -177.39177063041805,
                28.258032495048504
              ],
              [
                -177.39211427092835,
                28.254047053828977
              ],
              [
                -177.39533313068117,
                28.25478677175627
              ],
              [
                -177.39589130556018,
                28.253825568707764
              ],
              [
                -177.39659951226483,
                28.252437692410993
              ],
              [
                -177.39730769802182,
                28.250671783479092
              ],
              [
                -177.39983970333188,
                28.246210878224097
              ],
              [
                -177.4058049552799,
                28.24369680671956
              ],
              [
                -177.4109547774896,
                28.244812081368075
              ],
              [
                -177.4121564071283,
                28.239367940593414
              ],
              [
                -177.41108352352234,
                28.236910424923373
              ],
              [
                -177.4132722060785,
                28.232978282108906
              ],
              [
                -177.41003151898204,
                28.231550955966494
              ],
              [
                -177.40378712994865,
                28.22460309572689
              ],
              [
                -177.39370280910583,
                28.21584908542377
              ],
              [
                -177.35928710192644,
                28.205941735769805
              ],
              [
                -177.35216075588318,
                28.240502159501588
              ],
              [
                -177.38408003073164,
                28.271966745955396
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -169.55463806168666,
                16.71139149395563
              ],
              [
                -169.55232411577532,
                16.712521882483355
              ],
              [
                -169.5510937467768,
                16.713570056201736
              ],
              [
                -169.5496917025081,
                16.71453601686283
              ],
              [
                -169.53953457527226,
                16.710507810884017
              ],
              [
                -169.48159886055055,
                16.736935221726245
              ],
              [
                -169.44271755867067,
                16.76175230586039
              ],
              [
                -169.44097103782303,
                16.775558705544892
              ],
              [
                -169.45918860145213,
                16.783591432008368
              ],
              [
                -169.4629436982207,
                16.783930405341508
              ],
              [
                -169.4656688184321,
                16.784063934754027
              ],
              [
                -169.46965994544627,
                16.78392012969496
              ],
              [
                -169.48558174943258,
                16.782307501789152
              ],
              [
                -169.49392183082495,
                16.777192109247096
              ],
              [
                -169.49716193931494,
                16.774973310265622
              ],
              [
                -169.49866397636328,
                16.774130981647016
              ],
              [
                -169.50162513511572,
                16.77256958214026
              ],
              [
                -169.50321300285253,
                16.771994326457524
              ],
              [
                -169.503835275344,
                16.771768332677386
              ],
              [
                -169.5046721264117,
                16.771449886883136
              ],
              [
                -169.50557334678564,
                16.771234164492633
              ],
              [
                -169.50954301612768,
                16.77020691376527
              ],
              [
                -169.51093776481542,
                16.76965219606471
              ],
              [
                -169.51340539710912,
                16.769179657487733
              ],
              [
                -169.5141778733054,
                16.76893311515531
              ],
              [
                -169.51576975482135,
                16.76860569205788
              ],
              [
                -169.5181730140987,
                16.767475700331733
              ],
              [
                -169.5188596596065,
                16.76710588339932
              ],
              [
                -169.51926735537677,
                16.766674429402542
              ],
              [
                -169.52111271517902,
                16.765544426200574
              ],
              [
                -169.52441719668536,
                16.762421473344403
              ],
              [
                -169.5258760722225,
                16.761188950390302
              ],
              [
                -169.52705624418905,
                16.759771268054248
              ],
              [
                -169.52763560133627,
                16.759463074844167
              ],
              [
                -169.5277858050411,
                16.758743955412537
              ],
              [
                -169.52815058546713,
                16.75849739955316
              ],
              [
                -169.52909472304037,
                16.758024833262986
              ],
              [
                -169.52907326536825,
                16.757572812235022
              ],
              [
                -169.5310259135311,
                16.755497611008185
              ],
              [
                -169.53149798231772,
                16.754778476590396
              ],
              [
                -169.53276398497275,
                16.75327855891763
              ],
              [
                -169.53390124159506,
                16.752333399244648
              ],
              [
                -169.53699114638022,
                16.747443150331236
              ],
              [
                -169.54738554297182,
                16.735235682296054
              ],
              [
                -169.55300745306704,
                16.726728270530746
              ],
              [
                -169.55641557015736,
                16.71868702659566
              ],
              [
                -169.55793906487781,
                16.71535779566639
              ],
              [
                -169.55801415559606,
                16.711617461469398
              ],
              [
                -169.5562868241246,
                16.711000936570777
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -173.95251612568347,
                26.075772092116654
              ],
              [
                -173.95740847492664,
                26.07800780504632
              ],
              [
                -173.97957650091058,
                26.082324922978
              ],
              [
                -173.98446885015375,
                26.08155402073899
              ],
              [
                -173.9864429559887,
                26.08032056659594
              ],
              [
                -173.98918953801996,
                26.07800780504632
              ],
              [
                -173.99185028936273,
                26.077082687632863
              ],
              [
                -173.9930519190014,
                26.076620126184768
              ],
              [
                -173.99502602483636,
                26.07623465691528
              ],
              [
                -173.9952835169018,
                26.075617903444346
              ],
              [
                -173.99828759099847,
                26.075617903444346
              ],
              [
                -173.99923172857171,
                26.075001146724496
              ],
              [
                -174.00060501958734,
                26.073613432226256
              ],
              [
                -174.00154915716058,
                26.073921814647218
              ],
              [
                -174.00300827886468,
                26.072996664947823
              ],
              [
                -174.00489655401117,
                26.072534087357038
              ],
              [
                -174.00721398260004,
                26.069527288476102
              ],
              [
                -174.01013222600824,
                26.06821660839347
              ],
              [
                -174.01270714666254,
                26.066905913642916
              ],
              [
                -174.01408043767816,
                26.063282151826357
              ],
              [
                -174.01605454351312,
                26.062973741388983
              ],
              [
                -174.01768532659418,
                26.055340324348798
              ],
              [
                -174.01965943242914,
                26.047166619502917
              ],
              [
                -174.02317849065668,
                26.03899234471047
              ],
              [
                -174.02223435308343,
                26.036678767251036
              ],
              [
                -174.0245517816723,
                26.035213477920767
              ],
              [
                -174.02326432134515,
                26.028812262522493
              ],
              [
                -174.01545372869379,
                26.02973776104708
              ],
              [
                -174.01150551702386,
                26.021330881440733
              ],
              [
                -174.00343743230707,
                26.017397180491873
              ],
              [
                -174.00438565644583,
                26.004346341871305
              ],
              [
                -174.00627393159232,
                25.99956348653918
              ],
              [
                -174.00790471467337,
                25.999177763913703
              ],
              [
                -174.00541562470755,
                25.993931810477758
              ],
              [
                -173.99957913789115,
                25.995860497056224
              ],
              [
                -173.99125356110892,
                25.99285173216586
              ],
              [
                -173.98164052399954,
                25.989457135700302
              ],
              [
                -173.97245664033255,
                25.980738745549377
              ],
              [
                -173.95932454499564,
                25.970785102749563
              ],
              [
                -173.95314473542533,
                25.970630776074408
              ],
              [
                -173.94765157136283,
                25.967312703585637
              ],
              [
                -173.9404417935308,
                25.956586201171714
              ],
              [
                -173.93769521149954,
                25.954348174519485
              ],
              [
                -173.9378668728765,
                25.950412231328983
              ],
              [
                -173.93795270356497,
                25.948791510590898
              ],
              [
                -173.93615025910697,
                25.94740230363002
              ],
              [
                -173.93512029084525,
                25.94740230363002
              ],
              [
                -173.9008738461431,
                25.96576938216815
              ],
              [
                -173.89847058686576,
                25.965074880925304
              ],
              [
                -173.89555234345755,
                25.965923715220946
              ],
              [
                -173.8916899624761,
                25.969010333760785
              ],
              [
                -173.8924624386724,
                25.972559844960585
              ],
              [
                -173.89048833283744,
                25.98035296113572
              ],
              [
                -173.890230840772,
                25.983439201000976
              ],
              [
                -173.88568181428275,
                25.982204714776792
              ],
              [
                -173.88566779316972,
                25.985218487359305
              ],
              [
                -173.88626860798905,
                25.987918839906428
              ],
              [
                -173.88669776143144,
                25.992393573254585
              ],
              [
                -173.888242713824,
                25.995325202720107
              ],
              [
                -173.8868694228084,
                25.998179613760147
              ],
              [
                -173.888242713824,
                25.999182498472997
              ],
              [
                -173.88918685139726,
                26.000571093941527
              ],
              [
                -173.89184760274003,
                26.001496815134995
              ],
              [
                -173.89184760274003,
                26.004428217451178
              ],
              [
                -173.8930492323787,
                26.00573961059081
              ],
              [
                -173.89468001545976,
                26.009519426532044
              ],
              [
                -173.89837073506425,
                26.010985036713915
              ],
              [
                -173.89991568745683,
                26.013530526707996
              ],
              [
                -173.90703963460038,
                26.020858144309084
              ],
              [
                -173.9073829573543,
                26.026951288460648
              ],
              [
                -173.90944289387772,
                26.026797035550146
              ],
              [
                -173.92266081990311,
                26.038982390620845
              ],
              [
                -173.93502043904374,
                26.054096641300273
              ],
              [
                -173.93914031209061,
                26.06088199746956
              ],
              [
                -173.9442901533992,
                26.062424069070833
              ],
              [
                -173.9472083968074,
                26.065045544207617
              ],
              [
                -173.95184325398515,
                26.069517336979725
              ],
              [
                -173.95321654500077,
                26.07398895900917
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -170.62192734420057,
                25.442101790333826
              ],
              [
                -170.6209402912831,
                25.439466529747
              ],
              [
                -170.61639126479383,
                25.438187632505972
              ],
              [
                -170.61137016951795,
                25.43764506593788
              ],
              [
                -170.6062632435536,
                25.43822638716732
              ],
              [
                -170.6048041218495,
                25.436482415062976
              ],
              [
                -170.60364540755506,
                25.434660906131757
              ],
              [
                -170.60308750807997,
                25.43369200718173
              ],
              [
                -170.6007700794911,
                25.433498226456727
              ],
              [
                -170.5985384815907,
                25.43427334748679
              ],
              [
                -170.59703644454237,
                25.43543601968149
              ],
              [
                -170.5945044392323,
                25.436056106930653
              ],
              [
                -170.59098538100477,
                25.43074650652658
              ],
              [
                -170.59025582015272,
                25.429971362807713
              ],
              [
                -170.58849629103895,
                25.429545031636955
              ],
              [
                -170.5868655079579,
                25.42977757609891
              ],
              [
                -170.58626469313856,
                25.430397692470148
              ],
              [
                -170.5863076084828,
                25.431017805650146
              ],
              [
                -170.58690842330213,
                25.43210299603608
              ],
              [
                -170.5860930317616,
                25.432994395113035
              ],
              [
                -170.58433350264784,
                25.43400205569352
              ],
              [
                -170.58330353438612,
                25.433188176648393
              ],
              [
                -170.5815010899281,
                25.43132786104343
              ],
              [
                -170.5795698994374,
                25.428963668518794
              ],
              [
                -170.57523544966932,
                25.428149755441513
              ],
              [
                -170.5700426930165,
                25.42419638516153
              ],
              [
                -170.5679398411488,
                25.426211845037223
              ],
              [
                -170.5657940739369,
                25.426599429610988
              ],
              [
                -170.5617600315785,
                25.429002426147278
              ],
              [
                -170.5615454548573,
                25.43175418590646
              ],
              [
                -170.56575115859266,
                25.432916882411615
              ],
              [
                -170.57034310042616,
                25.43497095215009
              ],
              [
                -170.57321842849012,
                25.438730196630196
              ],
              [
                -170.57540711104627,
                25.440086596248797
              ],
              [
                -170.57690914809461,
                25.442334310558532
              ],
              [
                -170.57708080947157,
                25.443225633927778
              ],
              [
                -170.5771237248158,
                25.44423320892335
              ],
              [
                -170.57763870894667,
                25.445783307839793
              ],
              [
                -170.57944115340467,
                25.44516327066765
              ],
              [
                -170.58265980422254,
                25.44465948811448
              ],
              [
                -170.58467682540174,
                25.44380692822329
              ],
              [
                -170.58635052382704,
                25.447837158168667
              ],
              [
                -170.58673676192518,
                25.449077201782924
              ],
              [
                -170.58849629103895,
                25.449929724359134
              ],
              [
                -170.5866509312367,
                25.45182850294612
              ],
              [
                -170.58587845504042,
                25.453920999761742
              ],
              [
                -170.58467682540174,
                25.455819715393897
              ],
              [
                -170.58570679366346,
                25.456594692758713
              ],
              [
                -170.58935459792372,
                25.456788436320238
              ],
              [
                -170.59016998946424,
                25.45601346020291
              ],
              [
                -170.58961208998915,
                25.455199729909303
              ],
              [
                -170.59218701064344,
                25.45434724465364
              ],
              [
                -170.59454735457655,
                25.45469598935162
              ],
              [
                -170.59669312178846,
                25.455935962316715
              ],
              [
                -170.6005555027699,
                25.458222128982243
              ],
              [
                -170.60690697371717,
                25.463065558953225
              ],
              [
                -170.613000952599,
                25.465390336091843
              ],
              [
                -170.61857994734999,
                25.465700302983013
              ],
              [
                -170.620382391808,
                25.46399547519903
              ],
              [
                -170.62321480452772,
                25.46345302492907
              ],
              [
                -170.62407311141249,
                25.44725588332813
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    not_DL_outer_reef = 
    /* color: #0000ff */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-170.56150072244645, 25.408182796251236],
          [-170.58244341043473, 25.417485873201567],
          [-170.6001245322609, 25.411749060572483],
          [-170.58776491312028, 25.37809793741552],
          [-170.58561835588844, 25.364913817286464],
          [-170.57042711404802, 25.356072309944942],
          [-170.52648180154802, 25.32923284801424],
          [-170.50691225275955, 25.32442414718507],
          [-170.48699968484883, 25.32737093042614],
          [-170.46991870851755, 25.366383280062212],
          [-170.49438112405778, 25.399344208492433],
          [-170.50296419290544, 25.435159741810324],
          [-170.5312883201027, 25.457480922788026],
          [-170.54364793924333, 25.44151549937528],
          [-170.53781145242692, 25.428183524346892],
          [-170.5455362143898, 25.41965648788534],
          [-170.56235902933122, 25.41841614142272]]]),
    not_DL_shallow_lagoon = 
    /* color: #999900 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-177.4310500712857, 28.21722313127527],
           [-177.43156505541657, 28.203306178253293],
           [-177.41851879076813, 28.19135430433159],
           [-177.39783359484528, 28.186588311002673],
           [-177.38770557360505, 28.189765663497028],
           [-177.3809249492154, 28.216920608100818],
           [-177.38581729845856, 28.225617807443367],
           [-177.3930270762906, 28.227735279154103],
           [-177.4025542827115, 28.22149617955609],
           [-177.40637371080072, 28.22289530071747],
           [-177.40770412402009, 28.225390932982908],
           [-177.40942073778962, 28.223727172205514],
           [-177.4109656901822, 28.22455905583567],
           [-177.41396976427887, 28.226071554917674],
           [-177.4149997325406, 28.22516405804022],
           [-177.42366863207673, 28.22569343215636],
           [-177.4289043040738, 28.221307110239405]]],
         [[[-177.41173784860962, 28.266008897470282],
           [-177.4243760407788, 28.23722014845908],
           [-177.41143673085955, 28.235500395419553],
           [-177.40959098570826, 28.233724690187074],
           [-177.402553755867, 28.241475635467733],
           [-177.38598864206665, 28.247864288082507],
           [-177.38298456796997, 28.24960328027776],
           [-177.3799804938733, 28.25141785059401],
           [-177.37491648325317, 28.253459205288582],
           [-177.37199848591712, 28.253005386946942],
           [-177.3675350440442, 28.267671998791645],
           [-177.36427347788208, 28.28399925125879],
           [-177.39517252573364, 28.283243415194388]]],
         [[[-178.37319011968884, 28.448887577928982],
           [-178.386449253587, 28.41012456759929],
           [-178.36387578251765, 28.4036696657697],
           [-178.35705224278377, 28.40472663568716],
           [-178.35499230626033, 28.40567034991711],
           [-178.35374776127742, 28.4070670315499],
           [-178.35288945439265, 28.407859734555412],
           [-178.35211697819636, 28.40872792627909],
           [-178.35189068041848, 28.40940894922727],
           [-178.3516975613694, 28.410126141107856],
           [-178.35161173068093, 28.41082445485188],
           [-178.3515902730088, 28.411598256596207],
           [-178.35193359576272, 28.412650525583565],
           [-178.35223400317238, 28.413348822684075],
           [-178.35253441058205, 28.41417922405372],
           [-178.35255586825417, 28.414896383633018],
           [-178.3519121380906, 28.41570790045771],
           [-178.34667646609353, 28.425162556729678],
           [-178.33388769351052, 28.443201434034624],
           [-178.34289991580056, 28.456407866453173]]],
         [[[-178.32508201879773, 28.41046841840205],
           [-178.33160515112195, 28.408581067021693],
           [-178.33370800298962, 28.40725990104673],
           [-178.33516712469373, 28.406995665874454],
           [-178.3365833310536, 28.40673143004309],
           [-178.33825702947888, 28.406014215178523],
           [-178.33958740515027, 28.405334743985744],
           [-178.34014530462537, 28.405561234867545],
           [-178.34113235754285, 28.405259246917552],
           [-178.34291325286756, 28.405334743985744],
           [-178.3447586126698, 28.404844012080748],
           [-178.34488735870252, 28.40442877561647],
           [-178.3455310888661, 28.403711545163183],
           [-178.34570275024305, 28.40306980853673],
           [-178.3462177343739, 28.402088321472124],
           [-178.3481060095204, 28.400804824669496],
           [-178.35072384551893, 28.400767074528204],
           [-178.35166798309217, 28.39933255919275],
           [-178.35368500427137, 28.399106054996157],
           [-178.3552728720082, 28.39899280271633],
           [-178.3566461630238, 28.39842653950159],
           [-178.35784779266248, 28.397482760753014],
           [-178.35947857574354, 28.39601044912248],
           [-178.36098061279188, 28.394651374078837],
           [-178.3704647315434, 28.384212417597492],
           [-178.3035597098759, 28.370808174873666]]]]),
    not_RS_plateau = 
    /* color: #009999 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-170.54717063881827, 25.43132434548951],
          [-170.54983139019603, 25.429580274327705],
          [-170.55137634242263, 25.427254805957226],
          [-170.55137634242277, 25.4253943989523],
          [-170.55257797193246, 25.424386666500908],
          [-170.55395126280052, 25.423301406746145],
          [-170.55377960144224, 25.42198357819331],
          [-170.55412292415917, 25.42074325580643],
          [-170.5559253684238, 25.41958044197885],
          [-170.55738448997113, 25.41958044197895],
          [-170.55824279676366, 25.419270356397377],
          [-170.55978774899032, 25.418960270018346],
          [-170.56124687053776, 25.418572660922973],
          [-170.56124687053799, 25.416402026959464],
          [-170.56056022510396, 25.416091933203187],
          [-170.56073188646263, 25.414308878628876],
          [-170.5596160876324, 25.413223528153086],
          [-170.5598309378983, 25.411072048089096],
          [-170.56083965738085, 25.40801933931945],
          [-170.5611939492852, 25.405892138582175],
          [-170.56169293535442, 25.40426608115145],
          [-170.56198531843873, 25.403104177095724],
          [-170.56208857954823, 25.40194174335747],
          [-170.56226894468085, 25.400856571172646],
          [-170.56188704747052, 25.400236458159704],
          [-170.56152442422245, 25.39969380206129],
          [-170.56009856164286, 25.399112340578117],
          [-170.5594267950601, 25.398399997875103],
          [-170.5587550325238, 25.397920255062104],
          [-170.55818399347223, 25.396960765366018],
          [-170.55729106235876, 25.394993286622928],
          [-170.5562694026887, 25.394886685403968],
          [-170.55561537761577, 25.393596667275702],
          [-170.55513302557975, 25.392539267511502],
          [-170.55494080468898, 25.391665086640963],
          [-170.55481386187864, 25.39076966258655],
          [-170.5549891305421, 25.389909302054097],
          [-170.55527983215964, 25.388750595764208],
          [-170.55514137878149, 25.387436807153318],
          [-170.55572277061586, 25.386670228432514],
          [-170.5565422171653, 25.386145121307568],
          [-170.5574944446565, 25.385637705144966],
          [-170.5586263904786, 25.384777958845003],
          [-170.5592472456378, 25.38421340663208],
          [-170.55969642822652, 25.383454973610167],
          [-170.5604231146113, 25.38255845131379],
          [-170.56041735008031, 25.38161840101131],
          [-170.56057746553168, 25.380746392935038],
          [-170.56038270172454, 25.379932938761428],
          [-170.55990733958555, 25.37908151254792],
          [-170.55938577327544, 25.378541880727266],
          [-170.55851431596375, 25.3777728299135],
          [-170.55762973010656, 25.377397960684274],
          [-170.5563148447735, 25.376417000722643],
          [-170.5554291293359, 25.375591130601318],
          [-170.5545160114629, 25.375645466556524],
          [-170.55380557194843, 25.37614187366003],
          [-170.5530713352095, 25.376514279503915],
          [-170.55237533944486, 25.376561137567077],
          [-170.55167000311127, 25.37626709643408],
          [-170.55094599345688, 25.375756548969406],
          [-170.55018464672756, 25.37504563533312],
          [-170.5496919399061, 25.374631943658507],
          [-170.54922153107333, 25.37419230144532],
          [-170.5485382388686, 25.373545654325312],
          [-170.54777252158667, 25.372562549305357],
          [-170.54735692511608, 25.37183715472743],
          [-170.54686909967668, 25.37108432782074],
          [-170.54616646115844, 25.37070347873114],
          [-170.54554962324787, 25.37016750692419],
          [-170.54517424051144, 25.370801727314497],
          [-170.54493844779833, 25.371294639775268],
          [-170.5441235247563, 25.371504928978794],
          [-170.54352363243754, 25.371770395066786],
          [-170.54292464800042, 25.371991109491493],
          [-170.5421559891803, 25.372044921883603],
          [-170.54139112433714, 25.37199744542639],
          [-170.54054801448046, 25.37174738311291],
          [-170.53989174411686, 25.3716350147556],
          [-170.53943749698425, 25.37172048787453],
          [-170.53870064416375, 25.37150366445884],
          [-170.5381710629673, 25.371302664823123],
          [-170.53754103789643, 25.371210866860718],
          [-170.53696761508255, 25.371415032326794],
          [-170.53650740671247, 25.371125379022914],
          [-170.53610197065893, 25.370701159561435],
          [-170.53554857986353, 25.37055068143655],
          [-170.5347851076804, 25.370327259175973],
          [-170.5342881138354, 25.370578386829518],
          [-170.53449574511583, 25.371235766326475],
          [-170.5349110086437, 25.37169746555459],
          [-170.53514071780953, 25.37215556669747],
          [-170.53465595882756, 25.373226892575715],
          [-170.53428723382913, 25.373585865055233],
          [-170.53372141972258, 25.373760947372254],
          [-170.53319058303418, 25.373878451692853],
          [-170.53247220262114, 25.373958343872822],
          [-170.53146454526893, 25.37427321300827],
          [-170.5304791689212, 25.374049856076397],
          [-170.5297100526105, 25.373215328966396],
          [-170.52851511780656, 25.37286457995709],
          [-170.52603924673357, 25.374334454850786],
          [-170.5245932545741, 25.37479611718069],
          [-170.52297558823958, 25.375141441370314],
          [-170.52154259240552, 25.375075999475072],
          [-170.52048276381888, 25.375198376313634],
          [-170.52277033230484, 25.377608463230764],
          [-170.52383710404987, 25.378522150669145],
          [-170.52438890374296, 25.379435833680898],
          [-170.52497754193075, 25.380448936263143],
          [-170.52544884847967, 25.381483823414772],
          [-170.52622057384642, 25.382169739188335],
          [-170.52681990430324, 25.38330892723598],
          [-170.5275036260107, 25.385742383651294],
          [-170.5290348253878, 25.387487709276655],
          [-170.5302227354269, 25.388690228649406],
          [-170.53109659083972, 25.38997090734132],
          [-170.5318806157729, 25.39138275428911],
          [-170.5323642908639, 25.39213548742699],
          [-170.53230169805212, 25.393485885036636],
          [-170.5320906932385, 25.394325768746665],
          [-170.53244119240685, 25.39561786157448],
          [-170.5326272328283, 25.396651322199013],
          [-170.53205517632807, 25.397632767805987],
          [-170.53176937858632, 25.39874280228189],
          [-170.5314552814416, 25.399954959521114],
          [-170.53228626213624, 25.400828609749553],
          [-170.5334333217748, 25.401955669107654],
          [-170.53426421484335, 25.403737010386564],
          [-170.5355245260152, 25.405518693202634],
          [-170.53650029030518, 25.40714384633221],
          [-170.53707859112174, 25.40814583292662],
          [-170.53849283490513, 25.409839761005312],
          [-170.53952741308123, 25.41096063628122],
          [-170.54077646083834, 25.411810128003324],
          [-170.54130045951217, 25.41242371478153],
          [-170.54131850582485, 25.413030668181936],
          [-170.54109713384082, 25.413934462446885],
          [-170.5408260723712, 25.4146566943559],
          [-170.540283972047, 25.415480963645646],
          [-170.53944906035076, 25.41636029567809],
          [-170.53917192445377, 25.417317086970023],
          [-170.53913266236768, 25.418145329301193],
          [-170.53939748251796, 25.41894904529544],
          [-170.54061378901798, 25.41985873225483],
          [-170.54158729183214, 25.42028268593948],
          [-170.54164605718287, 25.421130584545548],
          [-170.54176362250345, 25.421973646440183],
          [-170.54199878561388, 25.42272952015366],
          [-170.54264081675214, 25.423621089388877],
          [-170.54229414036365, 25.42470657329497],
          [-170.54220164431226, 25.425714776688423],
          [-170.54201669806028, 25.426878508950264],
          [-170.54199015708411, 25.427578129819047],
          [-170.54193708683425, 25.428124699811963],
          [-170.54156028613718, 25.428846030552172],
          [-170.5413981082095, 25.429761137404064],
          [-170.54331326679474, 25.43183789740008],
          [-170.5454001445838, 25.432131808363437]]]),
    gradual_reef_slope = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-171.0790572046785, 25.854478384558874],
           [-171.084550368741, 25.083310691834104],
           [-170.03810261483474, 25.063408608386965],
           [-170.0683150171785, 25.852006697099384]]],
         [[[-174.46870831788434, 26.47656621755535],
           [-174.50166730225934, 25.48403631800407],
           [-173.34810284913434, 25.503869512306185],
           [-173.33711652100934, 26.520810912272115]]]]),
    steep_slope = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-179.5463281908895, 29.271216909487254],
          [179.83843743411046, 28.076010056289288],
          [-174.5805078783895, 24.451307168012036],
          [-168.1205469408895, 21.702508944676243],
          [-170.2299219408895, 16.3877727492622],
          [-169.0433985033895, 15.881201909553383],
          [-166.2089258471395, 22.96259860288609],
          [-161.7265039721395, 21.947281728146223],
          [-160.2543360033895, 23.608446782108963],
          [-167.38160548584972, 24.810826989087744],
          [-171.46851954834972, 24.85070964850898],
          [-171.00709376709972, 26.51399137830625],
          [-172.10572657959972, 26.592611192864478],
          [-173.33619532959972, 24.810826989087744],
          [-175.66529689209972, 25.68525324259878],
          [-174.12721095459972, 28.19226902675772]]]),
    outer = 
    /* color: #ef3dff */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[118.17062403776815, -17.45084971526682],
          [119.02755763151815, -18.14124675533064],
          [122.71896388151815, -13.726673468011827],
          [123.55392481901815, -14.472542073271828],
          [124.03732325651815, -14.046629732342849],
          [123.26828028776815, -13.213838336950676],
          [124.80636622526815, -11.475275595307592],
          [129.60423123885968, -10.12830564343977],
          [129.59585259552577, -9.368874063395277],
          [123.61984278776815, -10.936433881827663],
          [121.48849513151815, -13.27800259234443]]]),
    inner = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[120.98677765293615, -16.891338232004127],
          [122.23921905918615, -17.918686136314374],
          [124.61226593418615, -16.386076635784576],
          [126.15035187168615, -14.841317375944321],
          [127.16109405918615, -14.288389915330946],
          [129.90767609043615, -14.862555957219627],
          [131.24800812168615, -12.643069637710298],
          [132.98384796543615, -12.385662394017446],
          [135.88423859043615, -12.793104504917128],
          [134.82955109043615, -15.286885279551102],
          [140.32271515293615, -18.357182292973924],
          [140.91597687168615, -15.625732585548311],
          [138.93843780918615, -15.01116738037152],
          [137.46626984043615, -14.458668781396298],
          [138.27925812168615, -10.62016932130365],
          [134.87349640293615, -11.267357463993088],
          [133.62105499668615, -11.008652152384679],
          [133.00582062168615, -10.4257413762333],
          [129.97359405918615, -10.90079085372523],
          [129.68794952793615, -12.149482321501976],
          [128.54537140293615, -13.926120826322153],
          [126.45796905918615, -13.092905792744665],
          [125.55709015293615, -13.285443251877613],
          [122.94234405918615, -15.223290002478876]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
///////////////////////////////
// Global coral atlas project - Timor Sea
// Contact: mitchell.lyons@gmail.com
// Region coordinator: Paul Tudman (tuddy117@gmail.com)
// Description:
// - Developing a process to combine OBIA and supervised classification
// - This script loads the raw classification data (from *_classification script)
// - Then applied some cleanup and object-based relational rules
///////////////////////////////

// Table of contents
// 1. Setting constants
// 2. Data loads & vis
// 3. OBIA clean up rules
// 4. Export

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals');
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis');
var param_module = require('users/mitchest/global_reefs:Modules/reef_params');

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove;         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.timor;  //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// 1. Setting constants

// These will get written to the asset metadata 

var vars = {
  
  // analysis type
  geomorphic: true, // map geomorphic zonation (when set to true) or benthic habitat (when set to false)

  // analysis parameters
  image_data_scale: sensor_params.pixel,
  small_object_geo: ee.Number(400).int(), // smallest object szie in pixels (geomorphic)
  small_object_benthic: ee.Number(130).int(), // smallest object szie in pixels (benthic)
  smooth_radius: ee.Number(3), // radius in pixels for initial smooth 
  dist_to_land: 4000, //distance to land in meters to disallow reef crest, and convert to terrestrial reef flat
  wave_height: 0.4, //cut off height for waves in metres, Hs95 threshold
  geo_depth_cutoff: 1000,
  shallowlag_depth_cutoff: 400,
  benthic_depth_cutoff: 1000,
  
  //############
  // Clean-up stage selection
  cleanup_stage: 3, // set to 1, 2 or 3
  
  /*
  - GEOMORPHIC 1: The first pass does a small object filter, just to generally clean noise and reduce the amount of cleaning needed
  -            2: The second pass runs the OBIA cleanup rules
  -            3: The third pass is the MANUAL cleanup stage, which includes AT LEAST the no_reef masking
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY

  - BENTHIC 1: This is the main benthic stge - it does noise removal, no data reclaim and OBIA rules - review those if needed
            2: The second mas is the MANUAL stage - it's optional, but shuold include ALL region specific stuff
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY
  */
  
  // DON'T TOUCH --->
  obia_2nd_pass: null,
  obia_clean: null, // run object-based relationship rules + small object clean up
  fast_clean: null, // run a faster (but less precise) version of the OBIA clean; only applies to geomorphic (`obia_clean: true` also)
  manual_clean: false, // apply manual touch ups
  // --------------<
  //############
  
  smooth_output: false, // run smoother over final output (includes noise removal) (should be false for second pass)
  
  // results/layers to show
  export_small_area: false,
  show_eg_area: false, // constrain the map add to the corresponding example_area polygon geomtery (you can change that)
                              // - you can either set this, or have it false and just navigate to the area you want to see (keeping in mind ALL tiles in the zoom area will calcualte)
  reproject_display: true,
  //reproject_res: ee.Number(sensor_params.pixel).pow(2),
  
  // export options
  do_export: false, // export the results?
  geomorph_output_name: region_params.sname + '_geo_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  benthic_output_name: region_params.sname + '_benthic_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  asset_output: region_params.asset // asset path

};


// Clean up stage auto-parameterisation (DON'T TOUCH) --->

if (vars.geomorphic) {
  var temp_outname = vars.geomorph_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.obia_2nd_pass = true;
    vars.obia_clean = true;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '2';
  } else if (vars.cleanup_stage == 3) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = false;
    vars.smooth_output = false;
    vars.do_export = false;
    vars.geomorph_output_name = temp_outname + '3';
  }
}

if (!vars.geomorphic) {
  var temp_outname = vars.benthic_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = true,
    vars.obia_clean = true, 
    vars.fast_clean = false, 
    vars.manual_clean = false;
    vars.benthic_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false,
    vars.obia_clean = false, 
    vars.fast_clean = false,
    vars.smooth_output = false,
    vars.do_export = false;
    vars.benthic_output_name = temp_outname + '2';
  }
}
// -----------------------------------------<

/*
############################
MANUAL ADDITION
- review everything in there
- first review the reef_boundary object - as it is required for all cleanup stages
############################
*/

// This can be hand drawn or imported from elsewhere, or could just be a big box
// Reef_boundary defines export extent and can be used to clip out unwanted areas
var reef_boundary = ee.FeatureCollection([ee.Feature(inner),ee.Feature(outer)]).geometry();
Map.addLayer(reef_boundary, {}, "Manual reef outline", false);



// ############################
// This is the section to add/remove manual cleanups
// You MUST review it for each region
// ############################

if (vars.manual_clean && vars.geomorphic) {
  
  print("Doing GEOMORPHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.pixels).select('depth');
  var depth_cont = depth.lt(900);
  Map.addLayer(depth_cont, {}, "depth contour", false);
  
// update these values based on inspection of the layer
  //Map.addLayer(waves.lt(vars.wave_height), {}, vars.wave_height + "m Hs95 threshold", false)
  
  // merged "Rivermouth" and "not reef" extents. Eventually to be moved over to _datagen script, although CR happy to rerun clean up script/assess result and iterate
  
  var inner_extent = ee.Image().byte().paint(ee.Feature(inner, {zone: 1}), "zone").clip(inner);
  var outer_extent = ee.Image().byte().paint(ee.Feature(outer, {zone: 1}), "zone").clip(outer);
  var notreefcrest = ee.Image().byte().paint(ee.Feature(not_reef_crest, {zone: 1}), "zone").clip(not_reef_crest);
  var notdeepwater = ee.Image().byte().paint(ee.Feature(not_deep_water, {zone: 1}), "zone").clip(not_deep_water);
  var backreefslope = ee.Image().byte().paint(ee.Feature(back_reef_slope, {zone: 1}), "zone").clip(back_reef_slope);
  var reefflat = ee.Image().byte().paint(ee.Feature(reef_flat, {zone: 1}), "zone").clip(reef_flat);
  var notdeeplagoon = ee.Image().byte().paint(ee.Feature(not_deep_lagoon, {zone: 1}), "zone").clip(not_deep_lagoon);
  var notreefslope = ee.Image().byte().paint(ee.Feature(not_reef_slope, {zone: 1}), "zone").clip(not_reef_slope);
  var notDLouterreef = ee.Image().byte().paint(ee.Feature(not_DL_outer_reef, {zone: 1}), "zone").clip(not_DL_outer_reef);
  var notDLshallowlagoon = ee.Image().byte().paint(ee.Feature(not_DL_shallow_lagoon, {zone: 1}), "zone").clip(not_DL_shallow_lagoon);
  var notRSplateau = ee.Image().byte().paint(ee.Feature(not_RS_plateau, {zone: 1}), "zone").clip(not_RS_plateau);

  // define the manually edited map - uses the output from the second pass of cleaning
  var man_geo = ee.Image(region_params.geo_map_clean2);
  
  // "NOT REEF" CLEAN
  /*// remove
  man_geo = man_geo.where({
    test: not_reef.eq(1),
    value: ee.Image(0)
  });*/
  
  /*// WAVE clean ############# ---> (to be integrated into RF classifier when feasible)
  // remove
  man_geo = man_geo.where({
    test: waves.lte(vars.wave_height)
               .and(man_geo.eq(22)),
    value: ee.Image(21)
  })*/
  
  //Deep Water clean
  // Deep water -> Reef slope
  man_geo = man_geo.where({
    test: notdeepwater.eq(1)
                     .and(man_geo.eq(2)),
    value: ee.Image(22)
  });
  
  // Reef crest -> Inner reef flat
  man_geo = man_geo.where({
    test: notreefcrest.eq(1)
                     .and(man_geo.eq(15)),
    value: ee.Image(13)
  });
  
 // Deep water/shelter slope -> Back reef slope
  man_geo = man_geo.where({
    test: backreefslope.eq(1)
                     .and(man_geo.eq(2)).or(man_geo.eq(21)),
    value: ee.Image(24)
  });
  
  // Shallow/deep lagoon -> Inner reef flat (French Frigate Shoals)
  man_geo = man_geo.where({
    test: reefflat.eq(1)
                     .and(man_geo.eq(11)).or(man_geo.eq(12)),
    value: ee.Image(13)
  });
  
  // Deep water -> Deep lagoon
  man_geo = man_geo.where({
    test: outer_extent.eq(1)
                     .and(man_geo.eq(2)),
    value: ee.Image(12)
  });
  
  // Sheltered slope -> Reef slope
  man_geo = man_geo.where({
    test: outer_extent.eq(1)
                     .and(man_geo.eq(21)),
    value: ee.Image(22)
  });
  
  // Deep lagoon -> Reef slope (around the reef edge)
  man_geo = man_geo.where({
    test: notdeeplagoon.eq(1)
                     .and(man_geo.eq(12)),
    value: ee.Image(22)
  });
  
  // Reef slope -> Inner reef flat (insided the reef)
  man_geo = man_geo.where({
    test: notreefslope.eq(1)
                     .and(man_geo.eq(22)),
    value: ee.Image(13)
  });
  
  // Deep lagoon -> Outer reef flat (insided the reef)
  man_geo = man_geo.where({
    test: notDLouterreef.eq(1)
                     .and(man_geo.eq(12)),
    value: ee.Image(14)
  });
  
  // Deep lagoon -> Shallow lagoon (insided the reef)
  man_geo = man_geo.where({
    test: notDLshallowlagoon.eq(1)
                     .and(man_geo.eq(12)),
    value: ee.Image(11)
  });
  
  // Reef slope -> Plateau (Corona reef)
  man_geo = man_geo.where({
    test: notRSplateau.eq(1)
                     .and(man_geo.eq(22)),
    value: ee.Image(23)
  });
  

  //Shallow Water clean
  
  // Inner reef flat -> Outer reef flat
  man_geo = man_geo.where({
    test: inner_extent.eq(1)
                     .and(man_geo.eq(13)),
    value: ee.Image(14)
  });
  
  // Reef crest -> Outer reef flat
  man_geo = man_geo.where({
    test: inner_extent.eq(1)
                     .and(man_geo.eq(15)),
    value: ee.Image(14)
  });
  
  // Sheltered reef slope -> Reef slope
  man_geo = man_geo.where({
    test: inner_extent.eq(1)
                     .and(man_geo.eq(21)),
    value: ee.Image(22)
  });
  
  // Deep lagoon -> Reef slope
  man_geo = man_geo.where({
    test: inner_extent.eq(1)
                     .and(man_geo.eq(12)),
    value: ee.Image(22)
  });
  
  // Shallow lagoon -> Outer reef flat
  man_geo = man_geo.where({
    test: inner_extent.eq(1)
                     .and(man_geo.eq(11)),
    value: ee.Image(14)
  });
  
  /*// LAND mask clean ############# ---> to be moved to first stage clean up
  var land_mask = mod_land.select('water_mask').mean().eq(0)

  var land_mask_buff = ee.Image(1)
    .cumulativeCost({
      source: land_mask, 
      maxDistance: 2000,
      geodeticDistance: false,
    }).lt(2000).unmask(0)
  
  Map.addLayer(land_mask_buff, {}, "Land mask", false)
  
  */
  
  
  // Add the manual layer to the map
  var image = ee.Image(region_params.image);
  Map.addLayer(image, {bands: ['b3','b2','b1'], min:0, max:4000}, sensor_params.sname + ' low tide', true);
  
  var geo_clean1 = ee.Image(region_params.geo_map_clean1);
  Map.addLayer(geo_clean1, map_palettes.geo, 'Geo clean stage 1', false);
  var geo_clean2 = ee.Image(region_params.geo_map_clean2);
  Map.addLayer(geo_clean2, map_palettes.geo, 'Geo clean stage 2', false);
  Map.addLayer(man_geo, map_palettes.geo, 'Geo clean stage 3 - MANUAL', true);
  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_geo,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: reef_boundary,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
} 

if (vars.manual_clean && !vars.geomorphic) {
  
  print("Doing BENTHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.pixels).select('depth');
  var depth_cont = depth.lt(900);
  Map.addLayer(depth_cont, {}, "depth contour", false);
  
  // define the final geomorphic map (the manually edited geo map - stage 3)
  var geo_map = ee.Image(region_params.geo_map_clean3);
  
  var man_benthic = ee.Image(region_params.benthic_map_clean1);
  
  // Generic benthic rules
    // Coral in benthic && Deep/shallow lagoon in geo == sand
    man_benthic = man_benthic.where({
      test: man_benthic.eq(15)
                     .and(geo_map.eq(11).or(geo_map.eq(12))),
      value: ee.Image(11)
    });
    
    // BMA in benthic && inner/outer RF in geo == rubble 
    man_benthic = man_benthic.where({
      test: man_benthic.eq(18)
                     .and(geo_map.eq(13).or(geo_map.eq(14))),
      value: ee.Image(12)
    });
    
    
    // manual polygon guided rules
    // West Hawaii
    
    // East and West copied here to run in benthic clean, originally defined under manual cleanup for geo - sort out later PT
    var west_extent = ee.Image().byte().paint(ee.Feature(west, {zone: 1}), "zone").clip(west);
    var east_extent = ee.Image().byte().paint(ee.Feature(east, {zone: 1}), "zone").clip(east);
    var steepslope = ee.Image().byte().paint(ee.Feature(steep_slope, {zone: 1}), "zone").clip(steep_slope);
    
    // Sand or BMA on Reef slope == coral/algae (on the steeper reef slope areas)
    man_benthic = man_benthic.where({
     test: steepslope.eq(1)
                      .and(geo_map.eq(22))
                      .and(man_benthic.eq(11).or(man_benthic.eq(18))),
     value: ee.Image(15)
     });
    
    // BMA on Reef Crest == coral/algae
    man_benthic = man_benthic.where({
      test: west_extent.eq(1)
                       .and(geo_map.eq(15))
                       .and(man_benthic.eq(18)),
      value: ee.Image(15)
    });
    
    // East and West Hawaii
    // BMA on DW/DL/SRS/RS/plateau/BRS == sand
    man_benthic = man_benthic.where({
      test: man_benthic.eq(18)
                     .and(geo_map.eq(2).or(geo_map.eq(12)).or(geo_map.eq(21)).or(geo_map.eq(22)).or(geo_map.eq(23)).or(geo_map.eq(24))),
      value: ee.Image(11)
    });
    
    // East Hawaii
    // Sand on RS and plateau == rock
    man_benthic = man_benthic.where({
      test: east_extent.eq(1)
                       .and(man_benthic.eq(11))
                       .and(geo_map.eq(14).or(geo_map.eq(22)).or(geo_map.eq(23))),
      value: ee.Image(13)
    });
  
  
  // Add the manual layer to the map
  //var image = ee.Image(region_params.image);
  //Map.addLayer(image, {bands: ['b3','b2','b1'], min:200, max:1200}, 'Dove low tide', false);
  
  var benthic_clean1 = ee.Image(region_params.benthic_map_clean1);
  Map.addLayer(geo_map, map_palettes.geo, 'Geo clean stage 3 - MANUAL', false);
  Map.addLayer(benthic_clean1, map_palettes.benthic, 'Benthic clean stage 1', false);
  Map.addLayer(man_benthic, map_palettes.benthic, 'Benthic clean stage 2 - MANUAL', true);
  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_benthic,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: reef_boundary,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
}

// ############################
// END OF MANUAL SECTION
// ############################


// 2. Data loads & vis

// load input data

// define raw geo/benthic outputs
// Run check to see if the region has been split into multiple areas

// geo
if (ee.List(region_params.geo_map).length().getInfo() > 1) {
  var geo_map_raw = ee.Image(region_params.geo_map[0]).unmask(0, false)
               .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
               .selfMask();
} else {
  var geo_map_raw = ee.Image(region_params.geo_map);
}

// benthic
if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
    var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
             .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
             .selfMask();
} else {
    var benthic_map = ee.Image(region_params.benthic_map);
}

// set the geo map for further processing
if (vars.geomorphic && vars.obia_2nd_pass) {
  // if it's 2nd pass, you want to make sure you're loading the latest geo clean map
  var geo_map = ee.Image(region_params.geo_map_clean1);
} else if (vars.geomorphic) {
  var geo_map = geo_map_raw;
}

var depth = ee.Image(region_params.pixels).select('depth');
var low_tide_image = ee.Image(region_params.image);

var display_pal = (vars.geomorphic) ? map_palettes.geo : map_palettes.benthic;
//Map.centerObject(eg_area, 11)
Map.addLayer(depth, {min:0, max:2500}, 'Depth data', false);
Map.addLayer(low_tide_image, {bands: ['b3','b2','b1'], min:0, max:3000}, sensor_params.sname + ' low tide', false);

// load for display purposes
if (vars.geomorphic) {
  Map.addLayer(geo_map_raw, display_pal, 'Geomorphic map RAW', false);
  if (vars.cleanup_stage == 2) Map.addLayer(ee.Image(region_params.geo_map_clean1), display_pal, 'Geomorphic map - stage 1 clean', false);
}
if (!vars.geomorphic) {
  // Use the manually cleaned geomorphic map as input for the benthic clean
  var geo_map = ee.Image(region_params.geo_map_clean3);
  if (!vars.manual_clean) Map.addLayer(geo_map, map_palettes.geo, 'Final geo map (manual clean - stage 3)', false);
  Map.addLayer(benthic_map, display_pal, 'Benthic map RAW', false);
}

// 3. Object-based re-classificaiton and cleaning

/*

// if we want to retain the land/waves flags, need to add them in before makign the mask

######## Not that straight forwards - the land and bright masks are a LOT of not land and not breakign waves... =(

// add in land, for geomorphic clean up rules
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-2).and(globcover.select('landcover').neq(210)),
    value: ee.Image(1)
  })
  
  // change -3 to reef rim, hope that clouds have been handleded by masking
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-3),
    value: ee.Image(15)
  })
  
  // remask
  geo_map = geo_map.updateMask(geo_map.gt(0))

*/


/* OUTPUT EXTENT
  - to the mapping extent just so it doesn't balloon out
  - to the 'reef boundary' extent for noise/deep removal
*/  
var class_extent_mask = geo_map.gt(0);

/*

########
Initial small object clean
 - this was originally at the end, but we needed to massively reduce the number of objects to 
   iterate through in the OBIA cleaning, so this happens first now
 - future collabs with google might fix this, but need to change the parallel serialisation of vector procesing
 
 - includes a possible special case for:
      - geomorphic to clean up turbid areas over size threshold; fix shallow vs. deep lagoon
      - benthic to allow breaking waves (temporal class) to grow into surrounding class
########

*/

if (vars.geomorphic && !vars.obia_2nd_pass) {
  
  // make a smooth map with masked area as a value
  var smooth_map = geo_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 2
                      });
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = geo_map.where({
    test: geo_map.connectedPixelCount(vars.small_object_geo, false).lt(vars.small_object_geo), 
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask);
  
  // shallow lagoon > 5m == deep lagoon
  clean_map = clean_map.where({
    test: clean_map.eq(11)
                   .and(depth.gt(vars.shallowlag_depth_cutoff)),
    value: ee.Image(12)
  });
  
  /*// deep lagoon == deep (to hard to differentiate deep water vs. deep lagoon effectively over large areas)
  clean_map = clean_map.where({
    test: clean_map.eq(12),
    value: ee.Image(2)
  })*/
  
  // deep water in depth data == deep (s2 + ls8 data should be good enough for this)
  clean_map = clean_map.where({
    test: depth.gt(vars.geo_depth_cutoff),
    value: ee.Image(2)
  });
  
  
  // LAND mask cleaning
  Map.addLayer(land_dist.lte(vars.dist_to_land), {}, "Land mask (dist to land)", false);
  
  // reef crest close to land -> TRF
  clean_map = clean_map.where({
    test: land_dist.lte(vars.dist_to_land)
                   .and(clean_map.eq(15)),
    value: ee.Image(16)
  });
  
  // TRF far from land -> ORF
  clean_map = clean_map.where({
    test: land_dist.gt(vars.dist_to_land)
                   .and(clean_map.eq(16)),
    value: ee.Image(14)
  });
  
  
  
  /*//CLEAN UP SMALL (but slightly larger) TURBID AREAS
  var smooth_noturbid = clean_map
                          .updateMask(clean_map.neq(3))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(1.5),
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          })
  
  clean_map = clean_map.where({
    test: clean_map.eq(3).connectedPixelCount(vars.small_object_geo.multiply(10), false).lt(vars.small_object_geo.multiply(10)), 
    value: smooth_noturbid
  }).updateMask(class_extent_mask)*/
}


if (!vars.geomorphic && vars.cleanup_stage == 1) {
  
  // make a smooth map with masked area as a value, and without temporal class (basically breaking waves)
  var smooth_map = benthic_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 1
                      });
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = benthic_map.where({
    test: benthic_map.connectedPixelCount(vars.small_object_benthic, false).lt(vars.small_object_benthic),
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask);
  
  
  /*// CLEAN UP ALL TEMPORAL AREAS
  var smooth_notemp = benthic_map
                          .updateMask(benthic_map.neq(2))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(2),
                            kernelType: 'circle', units: 'pixels', iterations: 3
                          })
  
  
  clean_map = clean_map1.where({
    test: benthic_map.eq(2), 
    value: smooth_notemp
  }).updateMask(clean_map1.gte(0))
  
  // this catches any left over unmasked temporal, and assigned it back to temporal
  clean_map = clean_map.where({
    test: clean_map.unmask(99).eq(99).and(clean_map1.eq(2)),
    value: ee.Image(2)
  })*/
  
}



if (vars.geomorphic && vars.obia_2nd_pass) {
  var clean_map = geo_map;
}

if (vars.obia_clean) {
  
  if (vars.geomorphic && !vars.fast_clean) { // SHOULD TRY TO PUT THIS OUT TO A MODULE TO KEEP THE RULES THE SAME EVERYWEHRE?
    
    // #########
    // THE PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_properties = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5));
      // reduce the classes in the buffer zone
      var diff_classes = ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.frequencyHistogram(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        }).get('classification')
      );
      // calculate the percentages
      var diff_sum = diff_classes.toArray().reduce(ee.Reducer.sum(), [0]).get([0]);
      var diff_percs = diff_classes.map(function(k,v){return(ee.Number(v).divide(diff_sum).multiply(100).toUint8())});
      
      /* NOW, we can try to do the class logic right here (see /users/mitchest/global_reefs/obia_dev),
         or we can return the neighbour % and do image logic via (painted) rasters */
      
      return(f.set(diff_percs));
    };
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours = function() {
      // reduce map to vectors
      var map_fc = clean_map
            .updateMask(segment_id).updateMask(clean_map.eq(classn)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            });
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_properties));
    };
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels');
    //Map.addLayer(segment_id.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))))
    Map.addLayer(clean_map.updateMask(segment_id).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    //var classn = ee.Number(15) // one class
    var classn = clean_map.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)), // shallow L 
      value: ee.Image(99) // 99 ensures it's ignored in logic
    });
    
    // Minimum size of object to reclass based on neighbourhood
    var max_size = ee.Number(1000).divide(vars.image_data_scale).pow(2); // the first number is the square dimension of the desired min size;
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours();
    
    // #########
    // REEF RIM
    // #########
    
    var focus_class = ee.Number(15); //RR
    
    // start the object-based neighbourhood rules
    // paint out to rasters (only paint the layers needed)
    var objsize = ee.Image(30000).paint(map_fc_neighbours, 'count').rename('count');
    //var nb24 = ee.Image().byte().paint(map_fc_neighbours, '24').unmask(0).rename('nb24') //OCL
    var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22'); //SL ex
    var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21'); //Sl sh
    var nb16 = ee.Image().byte().paint(map_fc_neighbours, '16').unmask(0).rename('nb16'); //TRF
    var nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15'); //RR
    var nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14'); //ORF
    var nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13'); //IRF
    //var nb3 = ee.Image().byte().paint(map_fc_neighbours, '3').unmask(0).rename('nb3') //Turbid
    
    // RR surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    });
    
    // RR surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    });
    
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    });
    
    // RR with decent border to TRF --> TRF (often dark, probably seagrass)
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(40)),
      value: ee.Image(16)
    });
    
    /*// RR surrounded by OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb24.gt(75)),
      value: ee.Image(24)
    })*/
    
    /* with 2nd/3rd pass method, we don't really need this
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb13.add(nb14).gt(75))
              .and(nb21.add(nb22).lte(0)), // to not get rid of complex reef rims (if touching slope, it's probably RR)
      value: ee.Image(13) // could try assigning to a place-holder, then deal with at the end?
    })*/
    
    /*// small RR objects touching OCL + stuff --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(objsize.lte(max_size))
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb24.gt(1)),
      value: ee.Image(14)
    })*/
    
    // ####
    // ORF
    // ####
    
    focus_class = ee.Number(14); // ORF
    
    //classn = ee.Number(14)
    //map_fc_neighbours = reduce_neighbours()
    //var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22') //SL ex
    //var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21') //Sl sh
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    //var nb1 = ee.Image().byte().paint(map_fc_neighbours, '1').unmask(0).rename('nb1') //Land
    
    // ORF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    });
    
    // ORF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    });
    
    // ORF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    });
    
    // ORF touching slope and RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb21.gt(0).or(nb22.gt(0)))
              .and(nb15.gt(0)),
      value: ee.Image(15)
    });
    
    /*// ORF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // IRF
    // ####
    
    focus_class = ee.Number(13); // IRF
    
    //classn = ee.Number(13)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    
    // IRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    });
    
    // IRF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    });
    
    // IRF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    });
    
    /*// IRF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // TRF
    // ####
    
    focus_class = ee.Number(16); // TRF
    
    //classn = ee.Number(16)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    
    // TRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    });
    
    // TRF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    });
    
    // TRF surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    });
    
    /*// TRF not touching land --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.lt(10)),
      value: ee.Image(13)
    })*/
    
    
    // ####
    // LAGOONS
    // ####
    
    var nb11 = ee.Image().byte().paint(map_fc_neighbours, '11').unmask(0).rename('nb11'); // shallow lag
    //var nb12 = ee.Image().byte().paint(map_fc_neighbours, '12').unmask(0).rename('nb12') //deep lag
    
    // DL touching SL --> SL
    /* 
    This is a stop-gap until we have better depth product - below are the rules we want,
    but too much band-aiding is required to make it work, so for the moment just err on the side
    of shallow lagoon when it's mixed.
    */
    /*clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(0)),
      value: ee.Image(11)
    })*/
    
    /*// SL sourrounded by DL --> DL
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(nb12.gt(75)),
      value: ee.Image(12)
    })*/
    
    /*// DL sourrounded by SL --> SL
    clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(75)),
      value: ee.Image(11)
    })*/
    
    /*// DL/SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    })*/
    
    // SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    });
    
    /*// DL/SL touching OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(nb24.gt(0)),
      value: ee.Image(24)
    })*/
    
    
    /*// ####
    // Turbid
    // ####
    
    focus_class = ee.Number(3) // turbid
    
    // Turb surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // Turb surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // Turb surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })*/
  
  } else if (vars.geomorphic && vars.fast_clean) {
    print("Executing the fast version OBIA");
    
    /* fast version of the geo clean up
      - blanket version assigns the underlying most common in neighbourhood
      - mode OBIA version iterates through objects+buffers but take the mode instead of doing the class percs, to see if that speeds things up
    */
    
    
    //############
    //# blanket version
    //############
    // make a very smooth map to capture the broader neighbourhood
    var smooth_map = clean_map
                        .focal_mode({
                          radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        });
    
    
    // first make a make size threshold, so we're not vectorising huge objects when we don't have t
    // - the unmask(99) captures small no data values/ data gaps
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt().multiply(2)).select('labels').pow(2).log().int();
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
    
    
    // replace small objects with smooth underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: smooth_map
    }).selfMask();
    //############
    //############
    
    
    /*    
    //############
    //# mode OBIA version
    //############
    
    // #########
    // THE FASTER PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    //                 - BUT, just assign the mode of the neighbours, so save resouces even further??
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_mode = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
      // reduce the classes in the buffer zone
      var diff_mode = ee.Number(ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.mode(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        })).get('classification'))
      
      return(f.set('mode',diff_mode))
    }
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours_mode = function() {
      // reduce map to vectors
      var map_fc = clean_map.unmask(0)
            .updateMask(classn.gt(0)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            })
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_mode))
    }
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    var classn = segment_id.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)) // shallow L 
              .and(clean_map.unmask(0).neq(0)), // no data values (want to reclaim the small gaps 
      value: ee.Image(0) // 99 ensures it's ignored in logic
    })
    
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours_mode()
    
    //print(map_fc_neighbours.limit(10))
    
    var mode_map = ee.Image().byte().paint(map_fc_neighbours, 'mode').unmask(0).rename('mode') // paint out the mode values to an image
    //Map.addLayer(mode_map, display_pal, "mode map", false)
    
    // replace small objects with mode underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: mode_map
    }).selfMask()
    
    //############
    //############
    */
    
  } else {
    
    if (vars.cleanup_stage == 1) {
      // BENTHIC CLEAN-UP RULES
      
      // reclaim shallow no data to surrounding class
      var smooth_map = clean_map
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          });
      
      var clean_map = clean_map.unmask(0).where({
        test: geo_map.gt(2).and(clean_map.eq(0)), 
        value: smooth_map
      }).selfMask();
      
      // cut benthic off to < 10 - 15 m
      clean_map = clean_map.where({
        test: depth.gt(vars.benthic_depth_cutoff),
        value: ee.Image(0)
      });
      
      // Deep (or land or missing) in geo == masked from benthic
      clean_map = clean_map.where({
        test: geo_map.unmask(0).lte(2),
        value: ee.Image(0)
      });
      
      // Deep lagoon in geo == masked from benthic
      clean_map = clean_map.where({
        test: geo_map.eq(12),
        value: ee.Image(0)
      })
      
      
      /*// turbid in geo == turbid (temporal - class num 2)
      // ############## ---> need to decide here whether to push geo turbid through regardless of benthic class
      clean_map = clean_map.where({
        test: geo_map.eq(3),
        value: ee.Image(2)
      })*/
      
      /*
      // Ignore in benthic + ORF in geo == rock
      clean_map = clean_map.where({
        test: clean_map.eq(0)
                       .and(geo_map.eq(14)),
        value: ee.Image(13)
      })
      
      // Ignore in benthic + IRF in geo == sand
      clean_map = clean_map.where({
        test: clean_map.eq(0)
                       .and(geo_map.eq(13)),
        value: ee.Image(11)
      })
      
      // Ignore in benthic + TRF in geo == sand
      clean_map = clean_map.where({
        test: clean_map.eq(0)
                       .and(geo_map.eq(16)),
        value: ee.Image(11)
      })
      
      // Ignore in benthic + RR in geo == rock
      */
      
      /*// seagrass in benthic + ORF/RR/slope in geo == coral/algae
      clean_map = clean_map.where({
        test: clean_map.eq(14)
                       .and(geo_map.eq(14).or(geo_map.eq(15)).or(geo_map.eq(21)).or(geo_map.eq(22))),
        value: ee.Image(15)
      })*/
      
      // ####--> CR: "Seagrass neighbouring deep water or no data not shallow a rock or coral algae class"
      
      /*// rock in benthic + TRF in geo == sand
      clean_map = clean_map.where({
        test: clean_map.eq(13)
                       .and(geo_map.eq(16)),
        value: ee.Image(11)
      })*/
    }
  }
}

// final smooth
if (!vars.manual_clean) {
  if (vars.smooth_output) {
    // smooth the output lightly to make nice edges, and get rid of noise
    var noise_smooth = clean_map.unmask(99) // unmasking to a value allows us to include masked areas in the smooth, then re-mask after
                          .focal_mode({
                            radius: 2, // relates to smoothness required
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          });
    clean_map = clean_map.updateMask(noise_smooth.neq(99)).updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too;
  } else {
    // just clip to the classified extent and move on
    if (vars.geomorphic) {
      clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
    } else {
      clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
    }
  }
}

// 4. Export data

var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;

if (vars.do_export) {
  print("For export, the image data scale must be set to:", vars.image_data_scale);
  
  if (vars.export_small_area) {
    var export_convhull = export_small;
  } else {
    //var export_convhull = clean_map.gt(2).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: region_extent, crs: "EPSG:4326"}).geometry().convexHull({maxError: 100})
    var export_convhull = reef_boundary;
  }
  Map.addLayer(export_convhull, {}, "Export footprint", false);
  
  Export.image.toAsset({
    image: clean_map.set(vars),
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: export_convhull,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  /*Export.image.toCloudStorage({
    image: clean_map,//.set(vars),
    description: 'swp_geo_clean',
    bucket: 'mitchest_unet_bucket',
    fileNamePrefix: 'swp_geo_clean',
    region: export_convhull,
    scale: 25,
    crs: 'EPSG:4326',
    maxPixels: 1e13
  })*/
  
} else {
  if (!vars.manual_clean) {
    if (vars.show_eg_area) {
      if (vars.reproject_display) {
        Map.addLayer(clean_map.clip(eg_area).reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name, false);
      } else {
        Map.addLayer(clean_map.clip(eg_area), display_pal, output_name, false);
      }
    } else {
      if (vars.reproject_display) {
        Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name, true);
      } else {
        Map.addLayer(clean_map, display_pal, output_name, false);
      }
    }
  }
}

//Generate title
var title = ui.Label({
  value: 'Classes',
  style: {fontWeight: 'bold', fontSize: '12px'}
});

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false);
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false);
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
var legend = (vars.geomorphic) ? geo_legend : benthic_legend;
pkg_vis.add_lgds([title, legend]);//, mask_legend])
// generate the legend