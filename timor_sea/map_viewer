/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var depth_pal = {"opacity":1,"bands":["depth"],"max":5,"palette":["e4e1ff","7f89ff","3a52ff","0007ff","000258"]},
    geo = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo"),
    benthic = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic"),
    pixels = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_pixels"),
    geo_train = ee.FeatureCollection("projects/coral_atlas/nth_cari/training/nth_cari_geo_training"),
    benthic_baha = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_baha"),
    benthic_cari = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_cari"),
    geo_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo-clean3"),
    benthic_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic-clean"),
    noreefmask = /* color: #43ff06 */ee.Geometry.MultiPolygon(
        [[[[131.6209457353908, -3.406481422012466],
           [133.1590316728908, -4.809083468243518],
           [133.5105941728908, -5.946613263722921],
           [133.3348129228908, -7.561251250106858],
           [135.0486801103908, -8.083685947505646],
           [137.4656722978908, -9.126485887114153],
           [139.4871566728908, -9.126485887114153],
           [140.6297347978908, -10.122987529626664],
           [141.4207504228908, -9.256628997070125],
           [138.8719222978908, -5.028000774800192],
           [136.7625472978908, -3.669650510301542],
           [134.3895004228908, -2.748255943166204],
           [132.6756332353908, -2.2214099000035943],
           [131.4451644853908, -2.7921499004007084]]],
         [[[141.87033616291993, -12.322342158508562],
           [141.38693772541993, -12.31160870913667],
           [140.98044358479493, -12.408193911600465],
           [140.02463303791993, -16.555696187106946],
           [139.94772874104493, -16.82930338054062],
           [139.81589280354493, -17.165508352277218],
           [139.55222092854493, -17.270448151091728],
           [139.23361741291993, -17.804705429557373],
           [140.05759202229493, -18.2643530633977],
           [141.79343186604493, -17.783783943240014],
           [142.19992600666993, -16.228964356283022],
           [142.37570725666993, -14.61924807543451],
           [142.19992600666993, -13.639096476172245]]],
         [[[138.71135482380458, -16.83845691188403],
           [138.75255355427333, -16.655665825749768],
           [138.80748519489833, -16.450311104026607],
           [139.27169338115556, -15.385947563950195],
           [137.38753810771806, -14.308083138940345],
           [136.92061916240556, -14.350661266929022],
           [136.73934474834306, -14.334695416205314],
           [136.54159084209306, -14.355982964306866],
           [136.27791896709306, -14.286791046766936],
           [135.78902736553056, -13.956507637569947],
           [135.61324611553056, -13.945845389409525],
           [135.97030177959306, -14.340017492835333],
           [135.97030177959306, -14.46239028916728],
           [135.83297267803056, -14.515574868991727],
           [135.82198634990556, -14.435793220576134],
           [135.86593166240556, -14.340017492835333],
           [135.86043849834306, -14.260173098109222],
           [135.62423244365556, -14.0471168037852],
           [134.93758693584306, -14.488984173754968],
           [134.93758693584306, -14.929972707558079],
           [135.23421779521806, -15.301189678534303],
           [136.14608302959306, -15.967715349068722],
           [137.25570217021806, -16.521467753479172],
           [138.20052638896806, -17.173380832935678],
           [138.59603420146806, -17.01586651052815]]],
         [[[131.80896871058246, -11.409242183294396],
           [131.72107808558246, -11.360776516346826],
           [131.60572164026996, -11.398472748759268],
           [131.61121480433246, -11.554589420428641],
           [131.42994039026996, -11.678344341697118],
           [131.30909078089496, -11.780535038034875],
           [131.40796773401996, -11.909563670867934],
           [131.40247456995746, -12.108362583283638],
           [131.28162496058246, -12.21039119219242],
           [131.37500874964496, -12.92882778460479],
           [133.27564351526996, -12.408965417287066],
           [132.90760152308246, -11.812797904627478],
           [132.63294331995746, -11.511531386698817],
           [132.50660054651996, -11.403857517064493],
           [132.32532613245746, -11.398472748759268],
           [132.28138081995746, -11.479233534676084],
           [132.14954488245746, -11.554589420428641],
           [131.96277730433246, -11.586878606255771]]],
         [[[127.45376052791276, -14.799816052354238],
           [127.77236404353776, -15.917459688032123],
           [129.40932693416275, -15.780066718630698],
           [130.30471267635025, -15.430883201431055],
           [130.41457595760025, -14.220161873827406],
           [129.50271072322525, -14.374529553077549],
           [129.35988845760025, -14.486246612475183],
           [129.19509353572525, -14.156254682747303],
           [128.58535232478775, -13.60164702238546],
           [127.90969314510026, -13.521546942734147],
           [127.54714431697526, -13.975086891512651],
           [127.26149978572526, -14.278727603505995]]],
         [[[122.88407281834407, -17.27846585302748],
           [122.99393609959407, -17.435756599174923],
           [123.53775934178157, -17.917265418877427],
           [124.27384332615657, -17.666204294146702],
           [125.25162652928157, -16.889909506548676],
           [125.68558649021907, -15.819937549585868],
           [125.42191461521907, -15.338426665970553],
           [125.18570856053157, -15.221849254283823],
           [124.97147516209407, -15.285444967401968],
           [124.87259820896907, -15.401986966723438],
           [124.70231012303157, -15.656033265226334],
           [124.49356988865657, -15.804081626600253],
           [124.36722711521907, -15.952021787900824],
           [124.27384332615657, -16.06818398975981],
           [124.12552789646907, -16.310849007831646],
           [124.05960992771907, -16.374103686184345],
           [123.60367731053157, -16.674282090438965],
           [123.47733453709407, -16.616389316286742],
           [123.18619684178157, -16.690067991188318],
           [122.99393609959407, -16.784755975366085],
           [122.79618219334407, -17.20501743540183]]]]),
    BondariesWCMCForTS = 
    /* color: #00ffff */
    /* shown: false */
    /* locked: true */
    ee.Geometry.Polygon(
        [[[120.81295245249498, -15.710944939289138],
          [118.17703031620081, -17.018187576419784],
          [118.17730013080954, -18.357613658838176],
          [121.82380103134199, -17.814098861229244],
          [122.35114723251613, -18.690227335302147],
          [129.60021288473618, -16.174830712916336],
          [131.5333624511488, -13.968833033509409],
          [135.35582426069445, -15.79469984559125],
          [139.26587438905185, -18.523319607439653],
          [141.4627006376456, -17.730221020335744],
          [142.47352627284252, -15.456796370700127],
          [141.85891615108517, -11.5699236235876],
          [141.1999114932958, -10.923423213139072],
          [140.45285912159986, -11.741895690831287],
          [140.7162885597949, -13.542500185968972],
          [139.5737709997888, -14.990134298188329],
          [137.68451175925972, -14.777670552308297],
          [137.55306157938875, -9.582757602026703],
          [139.72963166577773, -10.390613349151087],
          [142.03488129730908, -9.929617008366487],
          [139.17922887016678, -5.138977424296733],
          [135.97152581433744, -3.166622064583541],
          [131.18166672289072, -2.0691195516024536],
          [133.90606860165573, -9.02701564692288],
          [131.35755272644263, -9.799159317678633],
          [130.17118554235384, -9.929055200888198],
          [129.11659494279073, -9.01895206365125],
          [127.66662815285021, -9.929169282479512],
          [126.48036178665788, -11.22500182717263],
          [125.33790187741248, -10.707460042365716],
          [123.66819734315233, -10.578080993296727],
          [120.85649657570211, -13.243724247024405]]]),
    rivermouth = /* color: #c20707 */ee.Geometry.MultiPoint(),
    low_rrs = ee.Image("projects/coral_atlas/workflow/mapping/timor_sea/timor_sea_low_tide_normalized_sr_feb2018_feb2020/20200403T212607Z/timor_sea_low_tide_normalized_sr_feb2018_feb2020"),
    centre_map = /* color: #d63000 */ee.Geometry.Point([134.3895004228908, -10.96544281366157]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// little viewing script for looking at reefs and classifications for each region. 
//From this region Timor Sea onwards the map_viewer script is going to be used from the very beginning
//in the workflow 

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals');
var param_module = require('users/mitchest/global_reefs:Modules/reef_params');

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.timor          //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// choogse where to centre (link this dynamically to map app?)

Map.centerObject(centre_map, 5)
//splitting North Cari regions

// geo
if (ee.List(region_params.geo_map).length().getInfo() > 1) {
  var geo_map_raw = ee.Image(region_params.geo_map[0]).unmask(0, false)
               .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
               .selfMask();
} else {
  var geo_map_raw = ee.Image(region_params.geo_map);
}

// benthic
if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
    var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
             .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
             .selfMask();
} else {
    var benthic_map = ee.Image(region_params.benthic_map);
}


Map.addLayer(low_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Dove low tide mosaic", false)
//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)


// Hawaii classification
Map.addLayer(geo_map_raw, display_pal, 'Geomorphic map RAW', false);
Map.addLayer(benthic_map, display_pal, 'Benthic map RAW', false);
//Map.addLayer(ee.ImageCollection([hawaii_geo_west, hawaii_geo_east]).mosaic(), map_palettes.geo, "Geo RAW", false)
//Map.addLayer(geo_clean_p2, map_palettes.geo, "Geo Clean Pass 2", false)
//Map.addLayer(geo_clean_man, map_palettes.geo, "Geo Clean Manual (FINAL)", true)
//Map.addLayer(ee.ImageCollection([hawaii_benthic_west, hawaii_benthic_east]).mosaic(), map_palettes.benthic, "Benthic RAW", false)
//Map.addLayer(benthic_clean, map_palettes.benthic, "Benthic Clean (FINAL)", true)

//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)

/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/

// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)

// WCMC

//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)
//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)
/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/
// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)
// WCMC


// #############
// example confidence layers

/*
// depth and nir combos
var depth_nir_flag = fiji_dove_ocean.select('b4').multiply(fiji_high_depth_ocean).gt(250000)
//Map.addLayer(depth_nir_flag, {}, "NIR flag", false)
var conf_flag = fiji_high_depth_ocean.eq(-1)
                        .or(fiji_high_depth_ocean.gt(1000))
                        .add(depth_nir_flag.eq(1))
                        .selfMask()
Map.addLayer(conf_flag, {min:1,max:2,palette:["#f7f7f7","#bababa"]}, "Confidence flag", false)

//straight depth missing/-1
var depth_flag = fiji_high_depth_ocean.gt(0).selfMask()
//Map.addLayer(depth_flag, {min:0,max:1,palette:["#ffff00"]}, "Valid depth retrievals", false)

//Map.addLayer(fiji_geo_clean.gt(0).updateMask(fiji_high_depth_ocean.lte(0)), {min:0,max:1,palette:["#ff0000"]}, "Unmapped area via original algorithm", false)
*/


/*

////////// UI SET UP //////////


//Generate title
var title = ui.Label({
  value: 'Coral Atlas map classes',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false)
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false)
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
pkg_vis.add_lgds([title, geo_legend, benthic_legend])//, mask_legend])
// generate the legend




///////// LINK TO DATA EXPORT /////////
// hopefully eventually we can link this to a download link in the app?

// // map to export 
// var export_map = gbr_geo_map10
// // extent
// var export_convhull = export_map.gt(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: export_map.geometry().bounds()}).geometry().convexHull({maxError: 100})
// // export
// Export.image.toDrive({
//     image: export_map,
//     description: 'gbr_sent2_geo_map',
//     folder: 'GBR Mapping',
//     region: export_convhull,
//     scale: 10,
//     maxPixels: 1e13
// })

*/