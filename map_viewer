/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var Cairns = /* color: #d63000 */ee.Geometry.Point([145.80785085646403, -16.343697740921982]),
    Capricorn = /* color: #98ff00 */ee.Geometry.Point([151.913537635627, -23.452680584823657]),
    gbr_geo_map10 = ee.Image("users/mitchest/gbr_reefs/gbr_geo_map10"),
    gbr_geo_map30 = ee.Image("users/mitchest/gbr_reefs/gbr_geo_map30"),
    cancook_geo_map5 = ee.Image("users/mitchest/gbr_reefs/cairns_cook_dove_geo"),
    cancook_geo_map5_seg = ee.Image("users/mitchest/gbr_reefs/cairns_cook_dove_geo-seg");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// little viewing script for looking at reefs across different regions

// imports
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// choose where to centre (link this dynamically to map app?)
var centre_map = Cairns
Map.centerObject(centre_map, 11)

// add the data layers
// GBR
Map.addLayer(gbr_geo_map10, map_palettes.geo, "Sentinel-2 GBR-geo10 (rough - no Dove data)", false)
Map.addLayer(gbr_geo_map30, map_palettes.geo, "Sentinel-2 GBR-geo30 (rough - no Dove data)", false)
//Carins to Cooktown
Map.addLayer(gbr_geo_map30, map_palettes.geo, "Dove v1 Carins-Cook geo-5m", false)
Map.addLayer(gbr_geo_map30, map_palettes.geo, "Dove v1 Carins-Cook geo-5m (segmentation)", false)

// add training point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that



////////// UI SET UP //////////

//Generate title
var title = ui.Label({
  value: 'Prototype Coral Atlas mapping algorithms',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var map_legend = pkg_vis.discrete_legend(map_palettes.geo_names, map_palettes.geo_cols, 'Geomorphic Zone', false)
pkg_vis.add_lgds([title, map_legend])


///////// LINK TO DATA EXPORT /////////
// hopefully eventually we can link this to a download link in the app?

// // map to export 
// var export_map = gbr_geo_map10
// // extent
// var export_convhull = export_map.gt(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: export_map.geometry().bounds()}).geometry().convexHull({maxError: 100})
// // export
// Export.image.toDrive({
//     image: export_map,
//     description: 'gbr_sent2_geo_map',
//     folder: 'GBR Mapping',
//     region: export_convhull,
//     scale: 10,
//     maxPixels: 1e13
// })

