/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var Cairns = /* color: #d63000 */ee.Geometry.Point([145.80785085646403, -16.343697740921982]),
    Capricorn = /* color: #98ff00 */ee.Geometry.Point([151.913537635627, -23.452680584823657]),
    gbr_geo_map10 = ee.Image("users/mitchest/gbr_reefs/gbr_geo_map10"),
    gbr_geo_map30 = ee.Image("users/mitchest/gbr_reefs/gbr_geo_map30"),
    cancook_dove_htv2_geo = ee.Image("users/mitchest/gbr_reefs/cancook_dove_htv2_geo"),
    cancook_dove_ltv2_geo = ee.Image("users/mitchest/gbr_reefs/cancook_dove_ltv2_geo"),
    cancook_dove_ht_pixels = ee.Image("users/mitchest/gbr_reefs/cancook_dove_htv2_pixels"),
    cancook_dove_ht_segmentation = ee.Image("users/mitchest/gbr_reefs/cancook_dove_htv2_segmentation"),
    gbr_sentinel = ee.Image("users/mitchest/gbr_reefs/gbr_sentinel2x"),
    cancook_dove_htv2_benthic = ee.Image("users/mitchest/gbr_reefs/cancook_dove_htv2_benthic"),
    cancook_dove_ltv2_benthic = ee.Image("users/mitchest/gbr_reefs/cancook_dove_ltv2_benthic");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// little viewing script for looking at reefs across different regions

// imports
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// choose where to centre (link this dynamically to map app?)
var centre_map = Cairns
Map.centerObject(centre_map, 11)

// add some background data
Map.addLayer(gbr_sentinel, {bands: ['B4','B3','B2'], min: 360, max: 2000}, "Sentinel-2 mosaic", false)
Map.addLayer(cancook_dove_ht_pixels, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Dove H-tide pixel mosaic", false)
Map.addLayer(cancook_dove_ht_segmentation, {bands: ['b3','b2','b1'], min: 66, max: 1380}, "Dove H-tide segmentation mosaic", false)

// add the map data layers
// GBR
Map.addLayer(gbr_geo_map10, map_palettes.geo, "Sentinel-2 GBR-geo10 (rough - no Dove data)", false)
Map.addLayer(gbr_geo_map30, map_palettes.geo, "Sentinel-2 GBR-geo30 (rough - no Dove data)", false)
//Carins to Cooktown
Map.addLayer(cancook_dove_htv2_geo, map_palettes.geo, "Dove Carins-Cook Geo - raw H-tide", false)
Map.addLayer(cancook_dove_ltv2_geo, map_palettes.geo, "Dove Carins-Cook Geo - raw L-tide", false)
Map.addLayer(cancook_dove_htv2_benthic, map_palettes.benthic, "Dove Carins-Cook Benthic - raw H-tide", false)
Map.addLayer(cancook_dove_ltv2_benthic, map_palettes.benthic, "Dove Carins-Cook Benthic - raw L-tide", false)


// add training point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that



////////// UI SET UP //////////

//Generate title
var title = ui.Label({
  value: 'Prototype Coral Atlas mapping algorithms',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var map_legend = pkg_vis.discrete_legend(cat(map_palettes.geo_names,map_palettes.benthic_names), cat(map_palettes.geo_cols,map_palettes.benthic_cols), 'Geomorphic Zone', false)
pkg_vis.add_lgds([title, map_legend])
// generate the legend
/*var map_legend2 = pkg_vis.discrete_legend(map_palettes.benthic_names, map_palettes.benthic_cols, 'Benthic Habitat', false)
pkg_vis.add_lgds([title, map_legend2])*/


///////// LINK TO DATA EXPORT /////////
// hopefully eventually we can link this to a download link in the app?

// // map to export 
// var export_map = gbr_geo_map10
// // extent
// var export_convhull = export_map.gt(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: export_map.geometry().bounds()}).geometry().convexHull({maxError: 100})
// // export
// Export.image.toDrive({
//     image: export_map,
//     description: 'gbr_sent2_geo_map',
//     folder: 'GBR Mapping',
//     region: export_convhull,
//     scale: 10,
//     maxPixels: 1e13
// })

