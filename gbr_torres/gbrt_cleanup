/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var mid_mask = /* color: #d63000 */ee.Geometry.MultiPolygon(
        [[[[144.41219348373704, -10.011386752205201],
           [144.4478990501433, -10.073590268600991],
           [144.5302965110808, -10.04925118675529],
           [144.56188220444017, -10.046546731140419],
           [144.56050891342454, -10.088463248078138],
           [144.59758777084642, -10.165521300568068],
           [144.63192004623704, -10.223640527098967],
           [144.57149524154954, -10.289856450575503],
           [144.57698840561204, -10.41549330134456],
           [144.63878650131517, -10.414142635639534],
           [144.6676256126433, -10.297963570016499],
           [144.73491687240892, -10.18985156903455],
           [144.74041003647142, -10.12091099960455],
           [144.70882434311204, -10.10739150114622],
           [144.69371814194017, -10.119559075370285],
           [144.67723864975267, -10.122262918144695],
           [144.5522691673308, -9.970812813113367],
           [144.46025866928392, -9.955934435304856]]],
         [[[144.50111407699876, -10.153355471311844],
           [144.55020923080735, -10.158762563684547],
           [144.54608935776048, -10.145920570092942],
           [144.49459094467454, -10.087111187403355],
           [144.47158832016282, -10.106377515827695],
           [144.46334857406907, -10.119221093422095]]],
         [[[144.49697935953589, -10.400714304349886],
           [144.51792204752417, -10.438532360238627],
           [144.52890837564917, -10.43954528071771],
           [144.54058134928198, -10.42772766991543],
           [144.54264128580542, -10.411857601260712],
           [144.53508818521948, -10.400038940232648],
           [144.52822173014135, -10.3929475288063],
           [144.51689207926245, -10.388219831749574],
           [144.5031591691062, -10.393960597439781]]],
         [[[144.52884327894276, -10.087400450016817],
           [144.52403676038807, -10.097540757565099],
           [144.54085957532948, -10.13302931522481],
           [144.55974232679432, -10.147223639155227],
           [144.5690120411498, -10.14891339771921],
           [144.5751918507201, -10.145871825882118],
           [144.57210194593495, -10.138098788821342],
           [144.56729542738026, -10.125593942283455],
           [144.56145894056385, -10.117482429817004],
           [144.55733906751698, -10.11376458477511],
           [144.54463612562245, -10.103962787068026],
           [144.53879963880604, -10.092470643720011]]],
         [[[144.6799052906615, -9.966030086086349],
           [144.64831959730213, -9.948108057438748],
           [144.61501729017323, -9.968735212438332],
           [144.62566029554432, -10.017423642485685],
           [144.64831959730213, -10.065090649982885],
           [144.67818867689198, -10.064414571347726],
           [144.68574177747792, -10.037708333638514],
           [144.69501149183338, -10.017761731074044],
           [144.69260823255604, -10.01235227137929],
           [144.68368184095448, -10.00863321553113],
           [144.68333851820057, -10.003223603702901],
           [144.68402516370838, -9.999166335707368],
           [144.68299519544667, -9.994770904882127],
           [144.67681538587635, -9.991727879497882],
           [144.67715870863026, -9.982936757361081]]],
         [[[144.72419392591542, -10.081992155422],
           [144.8275340748412, -10.007618920177837],
           [144.82581746107167, -9.923759575672952],
           [144.8004115772826, -9.87573365665814],
           [144.74067341810292, -9.869983604364796],
           [144.74925648695057, -9.916995787039129],
           [144.71114766126698, -10.059343936458026]]],
         [[[144.86295547327973, -9.75682865571957],
           [144.87668838343598, -9.820433666157312],
           [144.92475356898285, -9.809608142277893],
           [144.91376724085785, -9.760888913639423],
           [144.89042129359223, -9.750061449247589]]],
         [[[144.83617629847504, -9.349201261669576],
           [144.85334243617035, -9.408140891740574],
           [144.89248123011566, -9.43794561951469],
           [144.9213203414438, -9.448783063823079],
           [144.92475356898285, -9.458265547764219],
           [144.87119521937348, -9.501610712620412],
           [144.8718818648813, -9.541564675728656],
           [144.96320571742035, -9.561878455562677],
           [145.01264419398285, -9.487388684124676],
           [144.99685134730316, -9.374268764759966]]],
         [[[145.4798294179676, -9.980527756148442],
           [145.50454865624886, -9.991347645147181],
           [145.51004182031136, -9.999462325698708],
           [145.49493561913948, -10.008929196895599],
           [145.48806916406136, -10.015014896908042],
           [145.48600922753792, -10.025157476563649],
           [145.47708283593636, -10.029890571803769],
           [145.4681564443348, -10.024481314457557],
           [145.46952973535042, -9.996081233418403],
           [145.46746979882698, -9.981204009749245],
           [145.40155183007698, -9.926422924975089],
           [145.33769379785042, -9.99810989300741],
           [145.35554658105355, -10.112370527559166],
           [145.46540986230355, -10.230644933580713],
           [145.55192719628792, -10.004872000170417],
           [145.70848237206917, -9.98323276212311],
           [145.7428146474598, -9.997433674551264],
           [145.7538009755848, -10.008929196895599],
           [145.76066743066292, -10.025157476563649],
           [145.77920685937386, -10.024481314457557],
           [145.7977462880848, -10.023805150940927],
           [145.79087983300667, -10.035975878354511],
           [145.77920685937386, -10.103582684666872],
           [145.7483078115223, -10.13670483733491],
           [145.74006806542855, -10.171175279012244],
           [145.71122895410042, -10.265105207459078],
           [145.66179047753792, -10.279969265662524],
           [145.65698395898323, -10.2867254246221],
           [145.65080414941292, -10.29010344988808],
           [145.64050446679573, -10.277266761615168],
           [145.63157807519417, -10.208345115054094],
           [145.6171585195301, -10.201587285547303],
           [145.60342560937386, -10.19955990872035],
           [145.5999923818348, -10.211048206673269],
           [145.55742036035042, -10.318477433511934],
           [145.59175263574105, -10.381971831915703],
           [145.70092927148323, -10.379270204645747],
           [145.75860749413948, -10.319152973399675],
           [145.79087983300667, -10.2299692045006],
           [145.85405121972542, -10.127917660607583],
           [145.8808303945301, -9.977146467077333],
           [145.77234040429573, -9.891926424497084],
           [145.6714035146473, -9.891249986278885],
           [145.5896926992176, -9.925746557897654],
           [145.53064118554573, -9.886574248966669],
           [145.4523635976551, -9.887250696808552],
           [145.41116486718636, -9.921747688932806]]],
         [[[145.61094598603512, -10.093771445907477],
           [145.60133294892574, -10.166097200847693],
           [145.62742547822262, -10.174883329223768],
           [145.6535180075195, -10.16136610855906],
           [145.65763788056637, -10.103235555527514]]]]),
    gbr30 = ee.Image("users/mitchest/gbr_reefs/gbr_depth30"),
    coast_mask = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[152.40788313456125, -23.963473164379604],
           [151.78578230448312, -23.734875952572068],
           [151.61686750956125, -23.659426040601588],
           [151.49739119120187, -23.751217682342208],
           [151.28315779276437, -23.442895264259235],
           [150.965927568155, -23.23231888877121],
           [150.88490339823312, -23.159106610283914],
           [150.93571516581125, -23.11364436186474],
           [150.878036943155, -22.882157384839335],
           [150.91099592753, -22.756842704742475],
           [150.746201005655, -22.359891086979502],
           [150.43995710917062, -21.99109557750766],
           [150.17079207010812, -21.677501267075304],
           [149.94694563456125, -21.35938637432312],
           [149.36329695292062, -21.06877461116278],
           [149.28639265604562, -20.872578349337513],
           [149.252060380655, -20.826377171325277],
           [149.23146101542062, -20.819959219306146],
           [149.28913923807687, -20.74163821252569],
           [149.2026219040925, -20.714665850284483],
           [149.09001204081125, -20.68897342123898],
           [149.00624128885812, -20.596444677235308],
           [148.96229597635812, -20.457546270569356],
           [148.91011091776437, -20.41121882810542],
           [148.86479231424875, -20.403496231386026],
           [148.84419294901437, -20.376464094504513],
           [148.83046003885812, -20.30821907343396],
           [148.79475447245187, -20.25927015176228],
           [148.7631687790925, -20.210305790047798],
           [148.64918562479562, -20.126515256115443],
           [148.63270613260812, -20.096855527876638],
           [148.51185652323312, -19.98590420835141],
           [148.22346540995187, -19.84258405384247],
           [147.8183445603425, -19.649995914706373],
           [147.5844707599216, -19.358736922817823],
           [147.34002495914035, -19.16427433534352],
           [146.8209209552341, -19.03839946825227],
           [146.47622491031223, -18.848758451060995],
           [146.52017022281223, -18.730448903214473],
           [146.45699883609348, -18.66931148138417],
           [146.43365288882785, -18.37111483811531],
           [146.2135670294399, -17.91492282588311],
           [146.16000867983053, -17.44650935355132],
           [146.09683729311178, -17.249886404627944],
           [146.01443983217428, -17.180362708433677],
           [145.99796033998678, -17.158057123649893],
           [145.98972059389303, -16.978202739088903],
           [145.9773609747524, -16.909891581288242],
           [145.94552393871982, -16.812127768177145],
           [145.58984156567294, -16.454223131358535],
           [145.53079005200107, -16.376501656406166],
           [145.5651223273917, -16.302078201632423],
           [145.54177638012607, -16.1649502508645],
           [145.4607522102042, -15.866633429889763],
           [145.3838479133292, -15.722596463384184],
           [145.3948342414542, -15.64194404889157],
           [145.38110133129794, -15.468632397131833],
           [145.39208765942294, -15.268680902345768],
           [145.3508889289542, -15.0632343908151],
           [145.35912867504794, -15.010183622473244],
           [145.39208765942294, -14.921294092105851],
           [145.32479639965732, -14.87484463157031],
           [145.29321070629794, -14.785899211815414],
           [145.32479639965732, -14.754029286150333],
           [145.3453957648917, -14.715513563846603],
           [145.38377701336924, -14.670124513737782],
           [145.2656739860255, -14.578437359917992],
           [145.01161514813487, -14.513302998989953],
           [145.007495275088, -14.53989077270554],
           [144.98826920086924, -14.551854227334104],
           [144.97316299969737, -14.538561459965388],
           [144.95531021649424, -14.546537216408714],
           [144.90587173993174, -14.523938492083982],
           [144.84956680829112, -14.38031632377249],
           [144.81660782391612, -14.356370293134113],
           [144.78354124599866, -14.395561726038908],
           [144.7258630233424, -14.414183371007729],
           [144.57480101162366, -14.141354879884483],
           [144.50201658779554, -14.141354879884483],
           [144.45395140224866, -14.104064933793492],
           [144.5322289901393, -14.064104652597797],
           [144.34408812099866, -14.057443926329128],
           [144.25070433193616, -14.101401132663767],
           [143.9334741073268, -14.109392442696928],
           [143.84970335537366, -14.069433093955137],
           [143.86068968349866, -14.022805026127942],
           [143.78241209560804, -13.94951320760229],
           [143.7480798202174, -13.956177064494202],
           [143.7480798202174, -13.928187572220367],
           [143.77279905849866, -13.918856987529741],
           [143.76181273037366, -13.888196701938005],
           [143.7192407088893, -13.881530885297112],
           [143.69589476162366, -13.861532285764765],
           [143.72198729092054, -13.846865551148179],
           [143.7137475448268, -13.729498432377909],
           [143.7041345077174, -13.664120784813555],
           [143.7082543807643, -13.581372058490363],
           [143.6986413436549, -13.482569656402271],
           [143.6766686874049, -13.347651831468184],
           [143.6601891952174, -13.28617906895975],
           [143.62311033779554, -13.218006277269708],
           [143.59152464443616, -13.115042651016832],
           [143.58053831631116, -12.904970551079654],
           [143.57916502529554, -12.817946173372786],
           [143.51462034756116, -12.704099700480006],
           [143.43634275967054, -12.536585856954423],
           [143.32647947842054, -12.372987251909215],
           [143.25644163662366, -12.273705269733918],
           [143.2303491073268, -12.261627874645574],
           [143.21798948818616, -12.225392371546508],
           [143.2138696151393, -12.12605483630215],
           [143.28802732998304, -11.994442795514331],
           [143.33451061177516, -12.020125951460109],
           [143.2878187172439, -11.930117815757773],
           [143.15460948872828, -11.875023457517653],
           [143.06671886372828, -11.806475906355198],
           [143.06397228169703, -11.747323061288748],
           [142.95136241841578, -11.618218300181253],
           [142.89643077779078, -11.598040259845517],
           [142.8923109047439, -11.580551445006147],
           [142.9472425453689, -11.584587422507898],
           [142.97882823872828, -11.544225028164304],
           [142.95548229146266, -11.456753272763196],
           [142.91703014302516, -11.359829887574868],
           [142.85083099077906, -11.2582814475326],
           [142.84945769976343, -11.115478505059567],
           [142.721944710976, -10.887705144106944],
           [142.66426648831975, -10.75551600357391],
           [142.7054652187885, -10.631367319406692],
           [142.63130750394475, -10.570623987227037],
           [142.3099574062885, -10.47611049200771],
           [142.04765882230413, -10.570623987227037],
           [141.2442835781635, -10.39777745386569],
           [140.865255257851, -11.898709518363704],
           [141.315694710976, -13.105340253772662],
           [142.809835335976, -12.805553934998935],
           [143.523946664101, -14.598647275517763],
           [144.490743539101, -14.683683891030867],
           [145.7576592051215, -18.320469552763473],
           [146.1202080332465, -19.069742779751788],
           [148.4163506113715, -20.434572777213738],
           [149.201873072309, -22.03711604810243],
           [149.41335988871526, -22.58595940746644],
           [150.50649953715276, -22.78108738553528],
           [150.51199270121526, -23.215948379918697],
           [150.9322197519965, -23.777647030491945],
           [151.289275416059, -24.214247495485353],
           [151.86331106059026, -24.34193492759875],
           [153.33547902934026, -24.30689626042506],
           [152.99490285746526, -23.91330207660261],
           [152.50051809184026, -23.91079123713386]]],
         [[[146.65064309451492, -9.362529100516193],
           [147.10657571170242, -9.04802912634942],
           [146.52704690310867, -8.662664159960446],
           [146.20020364138992, -8.866252331095765]]]]),
    reef_clean_boundary = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[141.3205652715127, -10.390693242918486],
          [141.32331185354394, -10.431213715405752],
          [142.05390267385644, -10.582443381481959],
          [142.3038416387002, -10.482532072251589],
          [142.6224451543252, -10.577043599439705],
          [142.69110970510644, -10.628337685540828],
          [142.65265755666894, -10.76058257537003],
          [142.7103357793252, -10.757884277355954],
          [142.8092127324502, -10.774073703076793],
          [142.96027474416894, -10.687720071284284],
          [142.9630213262002, -10.541942701923508],
          [143.0179529668252, -10.231261915077043],
          [143.3132105351846, -10.031860237334174],
          [143.40796782382245, -10.042400113527544],
          [143.56795876356423, -10.024656205207023],
          [143.71283822073144, -10.031184089215703],
          [143.9023523808877, -9.81745107076062],
          [144.10834603323144, -9.625244025438596],
          [144.25666146291894, -9.543996777102729],
          [144.42694954885644, -9.72271492456675],
          [144.59723763479394, -9.435637000732912],
          [143.9243250371377, -8.915042505153066],
          [143.3695154668252, -8.868911777554976],
          [143.35028939260644, -8.958454339553723],
          [143.1442957402627, -9.020849762199163],
          [142.60871224416894, -9.297428926422377],
          [142.43976059929582, -9.217494184177259],
          [142.2598963262002, -9.148319834831558],
          [142.11982064260644, -9.159166252284027],
          [141.43317513479394, -9.454602431558385],
          [141.32880501760644, -9.709178991949296],
          [141.3645105840127, -10.142053448379542],
          [141.30683236135644, -10.19341894767065]]]),
    reef_clean = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[141.5321029773644, -10.339894338635533],
           [141.52283326300892, -10.346649211889593],
           [141.52077332648548, -10.358469890183258],
           [141.53416291388783, -10.378732872805783],
           [141.55647889289173, -10.377382048100579],
           [141.5712417713097, -10.35813216270126],
           [141.57467499884876, -10.345298248867119],
           [141.56780854377064, -10.3378678483217],
           [141.54068604621204, -10.3378678483217]]],
         [[[141.90323487433704, -10.6035632928399],
           [141.90872803839954, -10.608962607487097],
           [141.91490784796986, -10.604913130433697],
           [141.90941468390736, -10.599513744340593]]],
         [[[142.12364808234486, -10.52458745646671],
           [142.15454713019642, -10.521211968969595],
           [142.1923126331261, -10.502983698563872],
           [142.21840516242298, -10.494206740342968],
           [142.23763123664173, -10.490155752535037],
           [142.27333680304798, -10.473276066037679],
           [142.27059022101673, -10.467874372131234],
           [142.2190918079308, -10.471250441852062],
           [142.1813263050011, -10.475976877692055],
           [142.15042725714954, -10.496232214353034],
           [142.12227479132923, -10.509735035285752]]],
         [[[142.12914124640736, -10.469224804430732],
           [142.12433472785267, -10.479352859155822],
           [142.14493409308704, -10.475976877692055],
           [142.19505921515736, -10.465848712655838],
           [142.2520507923058, -10.453019228868214],
           [142.2582306018761, -10.444916123880018],
           [142.1971191516808, -10.448292443308357],
           [142.1703399768761, -10.453694478076173]]],
         [[[142.09755555304798, -10.446266656053286],
           [142.14081422004017, -10.448292443308357],
           [142.17102662238392, -10.438838656489258],
           [142.22252503546986, -10.434111655292183],
           [142.26097718390736, -10.417904249013878],
           [142.23831788214954, -10.401695999773471],
           [142.22939149054798, -10.398994543033409],
           [142.17308655890736, -10.40642349280502],
           [142.09412232550892, -10.436812807629272]]],
         [[[142.04468384894642, -10.36995240799194],
           [142.0549835315636, -10.366575240562904],
           [142.06459656867298, -10.36049624743347],
           [142.06322327765736, -10.350364330212344],
           [142.05361024054798, -10.347662430339975],
           [142.0433105579308, -10.353066206814223]]],
         [[[142.10854188117298, -10.337530098664862],
           [142.0762695423058, -10.350364330212344],
           [142.0817627063683, -10.363198036719265],
           [142.10854188117298, -10.3557680601398],
           [142.11266175421986, -10.346986951736545]]],
         [[[142.1154083362511, -10.349688857425628],
           [142.11815491828236, -10.358469890183258],
           [142.11815491828236, -10.375355800107748],
           [142.12776795539173, -10.390214647224719],
           [142.1373809925011, -10.38886387212201],
           [142.14493409308704, -10.379408282971092],
           [142.13875428351673, -10.35914534405562],
           [142.1257080188683, -10.348337907489354]]],
         [[[142.19986573371204, -10.356443519833583],
           [142.17377320441517, -10.359820796472382],
           [142.1641601673058, -10.367250676962243],
           [142.26509705695423, -10.363873480400612],
           [142.2410644641808, -10.361171696938808],
           [142.21291199836048, -10.357794434855405]]],
         [[[142.20535889777454, -10.345635990167914],
           [142.21153870734486, -10.35171527142246],
           [142.22870484504017, -10.355092598990874],
           [142.23488465461048, -10.352390739845683],
           [142.23145142707142, -10.346311471679158]]],
         [[[142.0659698596886, -10.325370869235247],
           [142.08450928839954, -10.33077502927734],
           [142.1202148548058, -10.323344285274684],
           [142.16690674933704, -10.32807296086757],
           [142.11609498175892, -10.314562270596408],
           [142.08862916144642, -10.313211169666213]]],
         [[[142.11366203326924, -10.300500500502938],
           [142.198806076238, -10.319416149402434],
           [142.27296379108174, -10.327522508130523],
           [142.3210289766286, -10.315362891715234],
           [142.32446220416767, -10.28698862770312],
           [142.30592277545674, -10.28698862770312],
           [142.26403739948017, -10.288339841021067],
           [142.20841911334736, -10.270097973476531],
           [142.1507408906911, -10.255233451360407],
           [142.1603539278005, -10.24577384666516],
           [142.12052848834736, -10.221447853167188],
           [142.10885551471455, -10.216717582464364],
           [142.1232750703786, -10.237665389366],
           [142.0628502656911, -10.21401453903062],
           [142.0243981172536, -10.21401453903062],
           [142.00311210651142, -10.228205260583838],
           [142.0079186250661, -10.253882096554673],
           [142.0456841279958, -10.268746682141947],
           [142.0738365938161, -10.286313018875253],
           [142.09237602252705, -10.298473756481677]]],
         [[[142.30660942096455, -10.216717582464364],
           [142.3251488496755, -10.22009635443609],
           [142.34368827838642, -10.210635702427505],
           [142.34643486041767, -10.196444196903622],
           [142.3478081514333, -10.16805928990541],
           [142.3375084688161, -10.146431000755307],
           [142.3258354951833, -10.130884765196727],
           [142.27227714557392, -10.113985828178286],
           [142.2276451875661, -10.11466180273969],
           [142.20635917682392, -10.124801250386886],
           [142.209792404363, -10.166031699951345]]],
         [[[142.06079032916767, -10.051113987998802],
           [142.09100273151142, -10.04502896611428],
           [142.10267570514424, -10.03353472360183],
           [142.0848229219411, -10.031506285498992],
           [142.0566704561208, -10.04232447519355]]],
         [[[142.10267570514424, -10.019335390198837],
           [142.1164086153005, -10.027449371185897],
           [142.1335747529958, -10.03083013664164],
           [142.14181449908955, -10.02542089498055],
           [142.15760734576924, -10.02271624029129],
           [142.1562340547536, -10.015954504860456],
           [142.12602165240986, -10.012573584287585],
           [142.10816886920674, -10.015278323564283]]],
         [[[142.34025505084736, -10.103846039096256],
           [142.3430016328786, -10.11195789595883],
           [142.3594811250661, -10.123449342539956],
           [142.36566093463642, -10.116689717887406],
           [142.34574821490986, -10.101818042896722]]],
         [[[141.40955513675522, -9.83333243266418],
           [141.42397469241928, -9.83333243266418],
           [141.43908089359115, -9.825890213110606],
           [141.43496102054428, -9.81777123719623],
           [141.42191475589584, -9.81777123719623],
           [141.41092842777084, -9.825890213110606]]],
         [[[141.55443733890365, -9.623533434059738],
           [141.56679695804428, -9.622856450722926],
           [141.5784699316771, -9.614055543962829],
           [141.58121651370834, -9.601869295058046],
           [141.57229012210678, -9.60322334437771],
           [141.56130379398178, -9.606608443988218],
           [141.5571839209349, -9.614055543962829]]],
         [[[141.53177803714584, -9.540254335795257],
           [141.5455109473021, -9.547702891079162],
           [141.5736634131224, -9.539577186333965],
           [141.59288948734115, -9.532805617766186],
           [141.60456246097397, -9.517230500167178],
           [141.60456246097397, -9.50233189735054],
           [141.58739632327865, -9.497591296776246],
           [141.57091683109115, -9.495559590725863],
           [141.5510041113646, -9.505040782489692],
           [141.53246468265365, -9.524679558086225]]],
         [[[142.03322640373796, -9.320915534743031],
           [142.0634388060817, -9.307363681981009],
           [142.1018909545192, -9.307363681981009],
           [142.09227791740983, -9.296521821492139],
           [142.04970589592546, -9.276192428181616],
           [142.0304798217067, -9.285679625164303],
           [141.9975208373317, -9.329046393930767]]],
         [[[142.23235360100358, -9.55595579660385],
           [142.2605060668239, -9.569497878575254],
           [142.32230416252702, -9.583039420958723],
           [142.3429035277614, -9.574914560320348],
           [142.33054390862077, -9.560018477808278],
           [142.26393929436296, -9.542413175779567],
           [142.23029366448014, -9.543767462089432]]],
         [[[142.15338936760514, -9.505845413737445],
           [142.15819588615983, -9.513971921353038],
           [142.16849556877702, -9.514649121603881],
           [142.18497506096452, -9.513971921353038],
           [142.18703499748796, -9.507199845080974],
           [142.16094246819108, -9.504490977032608]]],
         [[[142.16849556877702, -9.605381784262642],
           [142.1513294310817, -9.608089849393311],
           [142.1403431029567, -9.614859917412769],
           [142.13759652092546, -9.630430559437388],
           [142.17055550530046, -9.630430559437388],
           [142.19252816155046, -9.626368721995965],
           [142.2007679076442, -9.616213914758136],
           [142.19802132561296, -9.608089849393311],
           [142.1842884154567, -9.605381784262642]]],
         [[[142.31751397800582, -9.68752749642002],
           [142.32438043308395, -9.69226544116691],
           [142.34223321628707, -9.68685064170984],
           [142.36145929050582, -9.68752749642002],
           [142.37381890964645, -9.684143209221215],
           [142.37669421176938, -9.679489724529693],
           [142.37038568210738, -9.673990142993512],
           [142.35321954441207, -9.670605719412052],
           [142.32742742252483, -9.681224234112273]]],
         [[[142.0477165449331, -9.986058984424382],
           [142.06213610059717, -9.996202468443284],
           [142.1349205244253, -10.00905042712577],
           [142.19843523389795, -10.022574044853162],
           [142.22590105421045, -10.012431384402953],
           [142.24581377393702, -9.97997274221599],
           [142.24341051465967, -9.94987798511707],
           [142.22075121290186, -9.917413115865273],
           [142.1730293501089, -9.91166379308045],
           [142.14419023878077, -9.915722149043667],
           [142.12050096876123, -9.919442264533451],
           [142.0751823652456, -9.946158215670414],
           [142.03947679883936, -9.965432925445736]]],
         [[[142.2612632978628, -9.912001991329525],
           [142.2719063032339, -9.926882368779086],
           [142.29147694665645, -9.929588196129659],
           [142.29482445446843, -9.92011873887008],
           [142.29748514310776, -9.910649254881323],
           [142.31928484327295, -9.892047698166392],
           [142.33713762647608, -9.878856906694082],
           [142.35464763913845, -9.86634253488103],
           [142.3766197431753, -9.855856313383256],
           [142.39515978416455, -9.851628540919451],
           [142.4095787275503, -9.838604815417328],
           [142.4367012251089, -9.795979608477264],
           [142.43206620038893, -9.780923972584832],
           [142.42914812452295, -9.767898106107515],
           [142.41678850538233, -9.743536329075777],
           [142.39962236768702, -9.731016390334911],
           [142.39103929883936, -9.738122359125637],
           [142.35739366895655, -9.7668830676352],
           [142.37370105307764, -9.778217730135653],
           [142.38932268506983, -9.785491614158198],
           [142.36220078104972, -9.802915620747408],
           [142.34537737256983, -9.803422500154827],
           [142.31447832471827, -9.839957906658466],
           [142.2894157636831, -9.856532824337384],
           [142.27636949903467, -9.875474567252857],
           [142.26400987989405, -9.90253230853708]]],
         [[[142.61470949699873, -9.802407570215113],
           [142.62054598381513, -9.806805577516277],
           [142.63256228020185, -9.809512014545813],
           [142.6404587035417, -9.80714388335357],
           [142.64526522209638, -9.801730948529643],
           [142.6462951903581, -9.79665624189352],
           [142.6404587035417, -9.793949699950907],
           [142.6294723754167, -9.795302973681347],
           [142.61573946526045, -9.795979608477264]]],
         [[[142.61985933830732, -9.775341626961106],
           [142.6346222167253, -9.777709985027862],
           [142.64526522209638, -9.777371649193972],
           [142.65316164543623, -9.771958229036944],
           [142.65419161369795, -9.765868026067508],
           [142.64698183586592, -9.760454418775256],
           [142.63942873527998, -9.756732512717726],
           [142.62741243889326, -9.754702364617005],
           [142.62123262932295, -9.757409226002721],
           [142.6188293700456, -9.76823645157705]]],
         [[[142.71427309563154, -9.832177556355646],
           [142.70843660881513, -9.831162714552907],
           [142.70500338127607, -9.832515836264307],
           [142.7122131591081, -9.839957906658466],
           [142.7177063231706, -9.839281361730647],
           [142.71942293694013, -9.83386895243729]]],
         [[[142.76336824944013, -9.889680159184348],
           [142.76233828117842, -9.894415220088517],
           [142.76336824944013, -9.902194100525229],
           [142.7668014769792, -9.907267184103572],
           [142.77710115959638, -9.910987395535832],
           [142.78705751945967, -9.906928980971976],
           [142.7836242919206, -9.894415220088517],
           [142.77332460930342, -9.892047698166392]]],
         [[[142.44545045762368, -10.043538621331338],
           [142.4468237486393, -10.048102419511855],
           [142.4545485106022, -10.050468808026473],
           [142.4607283201725, -10.0459050432415],
           [142.46141496568032, -10.03863669231219],
           [142.45643678574868, -10.036946354744881],
           [142.44836870103188, -10.043200559645255]]],
         [[[142.48299754885142, -10.10969637639127],
           [142.48385585573618, -10.113245274356544],
           [142.48849071291392, -10.113583262594318],
           [142.49089397219126, -10.11189331784933],
           [142.49123729494517, -10.108682398344486],
           [142.48986400392954, -10.108006411202602],
           [142.48574413088267, -10.108006411202602]]],
         [[[142.5010219934315, -10.153632347574275],
           [142.49947704103892, -10.15718075918297],
           [142.50325359133188, -10.16427746427481],
           [142.5097767236561, -10.166642997624278],
           [142.51578487184946, -10.16512229962417],
           [142.51801646974985, -10.16106706958018],
           [142.517501485619, -10.155322072297295],
           [142.51320995119517, -10.153125428416995],
           [142.50411189821665, -10.152618508456538]]],
         [[[142.50016368654673, -10.184046025741802],
           [142.50531352785532, -10.192324802994214],
           [142.5116649988026, -10.19823808365633],
           [142.51664317873423, -10.199251777890895],
           [142.5207630517811, -10.196717536255077],
           [142.52436794069712, -10.190635274077259],
           [142.5236812951893, -10.185228721367181],
           [142.51664317873423, -10.18218749518426],
           [142.51132167604868, -10.18066687121964],
           [142.5020519616932, -10.182356452955126]]],
         [[[142.51801646974985, -10.179822076996546],
           [142.51921809938852, -10.182018537323893],
           [142.52196468141977, -10.181342704987607],
           [142.52196468141977, -10.179315199389066],
           [142.51938976076548, -10.178639361326638]]],
         [[[142.47218254624897, -10.248369783454509],
           [142.47072342454487, -10.253184042410375],
           [142.47235420762593, -10.258336063046187],
           [142.47690323411518, -10.262136680270988],
           [142.4819672447353, -10.263150170489663],
           [142.4856579643398, -10.2617988494768],
           [142.48883369981343, -10.25918064859534],
           [142.49089363633686, -10.253944181873411],
           [142.49321106492573, -10.249298856668558],
           [142.49278191148335, -10.245075774658192],
           [142.4911511284023, -10.241612805427637],
           [142.48514298020893, -10.240937099704627],
           [142.4787056785732, -10.24271082415668],
           [142.47235420762593, -10.24701839937177]]],
         [[[142.48548630296284, -10.2335887070248],
           [142.4848854881435, -10.235446937343326],
           [142.48651627122456, -10.236798370740045],
           [142.48874786912495, -10.236882835136218],
           [142.4896920066982, -10.235446937343326],
           [142.48831871568257, -10.233081915049558]]],
         [[[142.3563397847118, -10.364492204099127],
           [142.35496649369617, -10.368882543855866],
           [142.3614896260204, -10.372597398650463],
           [142.36595282182117, -10.368207110976043],
           [142.362862917036, -10.364154483107459]]],
         [[[142.4332440815868, -10.459714953656256],
           [142.4339307270946, -10.463428726018376],
           [142.4394238911571, -10.46748006334858],
           [142.44835028275867, -10.468492889412424],
           [142.45144018754382, -10.464779177674412],
           [142.4504102192821, -10.459039717542717],
           [142.4449170552196, -10.457014000388483],
           [142.43633398637195, -10.458702098935065]]],
         [[[142.4438870869579, -10.492799721813407],
           [142.4438870869579, -10.496850674996967],
           [142.44766363725086, -10.499551280972518],
           [142.45247015580554, -10.49820098093323],
           [142.45315680131336, -10.494825205037273],
           [142.44869360551257, -10.492799721813407]]],
         [[[142.6872741290141, -10.718879864697787],
           [142.68933406553754, -10.71449451292372],
           [142.68384090147504, -10.707073003712255],
           [142.67800441465863, -10.710446439530651]]],
         [[[142.70100703917035, -10.686494232373235],
           [142.69929042540082, -10.698639249886115],
           [142.70684352598676, -10.711795803339966],
           [142.71611324034222, -10.72495178533623],
           [142.72709956846722, -10.731023584101598],
           [142.75731197081097, -10.73574600995243],
           [142.7758513995219, -10.733722122193697],
           [142.78237453184613, -10.725626435663118],
           [142.78409114561566, -10.716181194200363],
           [142.76864162168988, -10.70741034898427],
           [142.75216212950238, -10.702012779571827],
           [142.73877254210004, -10.69492832388833],
           [142.72297969542035, -10.683795273597678],
           [142.71851649961957, -10.68210841218237],
           [142.71130672178754, -10.684470015540445]]],
         [[[142.7154265948344, -10.67266181517629],
           [142.73842921934613, -10.690542625550885],
           [142.75044551573285, -10.696615114060895],
           [142.7593719073344, -10.698639249886115],
           [142.75692496401024, -10.690605797751658],
           [142.75104500430493, -10.683247017647995],
           [142.7379125750649, -10.670553388980409],
           [142.72126214175216, -10.660684947625167]]],
         [[[142.74941554747113, -10.660515759176175],
           [142.75422206602582, -10.66422710551402],
           [142.76005855284222, -10.66523928302297],
           [142.7638351031352, -10.660853156168008],
           [142.75971523008832, -10.655117356450898],
           [142.75216212950238, -10.65343033597171]]],
         [[[142.77791133604535, -10.671312277350697],
           [142.77413478575238, -10.675023491956138],
           [142.7703582354594, -10.681433664993124],
           [142.77276149473676, -10.686494232373235],
           [142.77859798155316, -10.691554715408524],
           [142.78512111387738, -10.694253605193191],
           [142.79473415098676, -10.69459096472833],
           [142.80022731504926, -10.691892077944349],
           [142.78924098692426, -10.672324431281472],
           [142.78409114561566, -10.670300120050687]]],
         [[[142.81224361143597, -10.663552318637432],
           [142.81258693418988, -10.669625346645708],
           [142.81739345274457, -10.68075891630511],
           [142.82254329405316, -10.686494232373235],
           [142.83112636290082, -10.687168968318696],
           [142.8465758868266, -10.684132644756447],
           [142.86030879698285, -10.674011347011447],
           [142.8692351885844, -10.665576674777663],
           [142.874385029893, -10.654105145284746],
           [142.8736983843852, -10.640946094107587],
           [142.87129512510785, -10.631835649065787],
           [142.863398701768, -10.622387492897415],
           [142.84863582335004, -10.619687966023728],
           [142.81567683897504, -10.661865344899406]]],
         [[[142.86133876524457, -10.573117378496846],
           [142.85447231016644, -10.581554604142344],
           [142.8627120562602, -10.589991597691176],
           [142.874385029893, -10.6004531470911],
           [142.8791915484477, -10.614626288861206],
           [142.90837398252972, -10.641283512772599],
           [142.91661372862347, -10.638246731348115],
           [142.92657008848676, -10.630485930370332],
           [142.93171992979535, -10.625086995916933],
           [142.93652644835004, -10.623737247389313],
           [142.94133296690472, -10.615976077633604],
           [142.94167628965863, -10.608889620102808],
           [142.9461394854594, -10.604165223869723],
           [142.93652644835004, -10.589654122407701],
           [142.92760005674847, -10.578517229638278],
           [142.91043391905316, -10.570417417300312],
           [142.89189449034222, -10.567717432360949],
           [142.87301173887738, -10.570417417300312]]],
         [[[142.82555743804716, -10.33773328410092],
           [142.83173724761747, -10.341786253388271],
           [142.83791705718778, -10.34313723152566],
           [142.84615680328153, -10.339084279675165],
           [142.84821673980497, -10.332329243702807],
           [142.8386037026956, -10.328951671261594],
           [142.83036395660184, -10.333004753835466]]],
         [[[142.82143756500028, -10.262743939755023],
           [142.83723041167997, -10.266122221376193],
           [142.85302325835966, -10.264095256732002],
           [142.8605763589456, -10.258689954203914],
           [142.85233661285184, -10.255311593253223],
           [142.83448382964872, -10.249230452727081],
           [142.8166310464456, -10.253960238780927]]],
         [[[142.8111378823831, -10.217471490944812],
           [142.82006427398466, -10.226931939487395],
           [142.8605763589456, -10.224904724229326],
           [142.8660695230081, -10.220174504984328],
           [142.8667561685159, -10.212065393917827],
           [142.84821673980497, -10.202604503034104],
           [142.8331105386331, -10.19787395213828],
           [142.82143756500028, -10.19787395213828],
           [142.8118245278909, -10.205983424925433]]],
         [[[142.67243548980497, -10.163406391135123],
           [142.67037555328153, -10.169489172374098],
           [142.6744954263284, -10.174220144367945],
           [142.68204852691434, -10.17557183777684],
           [142.6799885903909, -10.166109863760079]]],
         [[[142.80907794585966, -10.145833261922855],
           [142.8118245278909, -10.154619947201244],
           [142.83036395660184, -10.159351139321789],
           [142.8557698403909, -10.162730519405518],
           [142.90177508941434, -10.178951046256818],
           [142.92786761871122, -10.178951046256818],
           [142.93404742828153, -10.170165029807022],
           [142.93542071929716, -10.159351139321789],
           [142.92924090972684, -10.149888685105072],
           [142.92443439117216, -10.145833261922855],
           [142.88735553375028, -10.147185075358797],
           [142.8111378823831, -10.13704633549995]]],
         [[[142.8221242105081, -10.019701953711472],
           [142.8228108560159, -10.029168234409124],
           [142.83105060210966, -10.037958104546032],
           [142.84203693023466, -10.04877607856692],
           [142.86538287750028, -10.064326282033642],
           [142.88941547027372, -10.063650201797673],
           [142.90795489898466, -10.063650201797673],
           [142.91482135406278, -10.058917600508217],
           [142.91138812652372, -10.048099965790302],
           [142.8942219888284, -10.031872835246112],
           [142.87087604156278, -10.021054296449892],
           [142.84135028472684, -10.012263967862896],
           [142.8283040200784, -10.014968709720385]]],
         [[[142.8111378823831, -10.097452477325582],
           [142.8118245278909, -10.104212506684329],
           [142.82418414703153, -10.108268456083861],
           [142.83723041167997, -10.106916478637018],
           [142.8173176919534, -10.095424440816577]]],
         [[[143.0308644448831, -10.121787917629515],
           [143.03567096343778, -10.128547434900229],
           [143.04665729156278, -10.132603076889547],
           [143.05764361968778, -10.129899321262561],
           [143.06176349273466, -10.124491741626708],
           [143.05077716460966, -10.118408105601537],
           [143.03773089996122, -10.118408105601537]]],
         [[[142.90795489898466, -10.021054296449892],
           [142.9100148355081, -10.033901271053121],
           [142.9484669839456, -10.050128299878645],
           [142.9594533120706, -10.046071618978505],
           [142.95739337554716, -10.037958104546032],
           [142.94778033843778, -10.03457741349864],
           [142.9319874917581, -10.031872835246112],
           [142.91482135406278, -10.023082799981776]]],
         [[[142.90246173492216, -9.986567796753988],
           [142.9210011636331, -10.002120985179255],
           [142.94572040191434, -10.008206812812013],
           [142.9759328042581, -9.994006371000385],
           [142.99721881500028, -9.969661313949306],
           [143.01026507964872, -9.93449302229098],
           [143.0088917886331, -9.904732283143236],
           [143.00202533355497, -9.879027653905812],
           [142.98485919585966, -9.870233503624158],
           [142.9539601480081, -9.870909985063513],
           [142.92237445464872, -9.880380579244703],
           [142.90932819000028, -9.897968102034065],
           [142.9107014810159, -9.930434898921954],
           [142.90108844390653, -9.975071483928065]]],
         [[[142.90589496246122, -9.8397904019029],
           [142.89490863433622, -9.843849644427605],
           [142.89284869781278, -9.855350560526512],
           [142.90040179839872, -9.870909985063513],
           [142.92374774566434, -9.866174585807597],
           [142.95670673003934, -9.856703583121956],
           [142.95670673003934, -9.851291459438617],
           [142.92924090972684, -9.841820029401614],
           [142.91207477203153, -9.841143488287777]]],
         [[[143.02193805328153, -9.994006371000385],
           [143.02468463531278, -10.00279719388083],
           [143.03429767242216, -10.006854416527403],
           [143.0418507730081, -10.004825811539577],
           [143.0425374185159, -9.997387484862953],
           [143.03017779937528, -9.992653915609782]]],
         [[[143.0700032388284, -10.046071618978505],
           [143.0583302651956, -10.046071618978505],
           [143.05215045562528, -10.051480515534415],
           [143.06725665679716, -10.064326282033642],
           [143.08167621246122, -10.06770666197308],
           [143.10021564117216, -10.061621952595257],
           [143.10708209625028, -10.05553712855864],
           [143.11051532378934, -10.060945866696578],
           [143.1242482339456, -10.060945866696578],
           [143.12699481597684, -10.04945218992973],
           [143.11806842437528, -10.04877607856692],
           [143.10433551421903, -10.050804408413573],
           [143.0809895669534, -10.045395500547562]]],
         [[[143.14965411773466, -10.103536510142723],
           [143.14896747222684, -10.111648374817337],
           [143.15926715484403, -10.112324354297543],
           [143.16476031890653, -10.107592468071307],
           [143.16613360992216, -10.101508511991117],
           [143.1578938638284, -10.100832509765299]]],
         [[[143.10502215972684, -9.991977685805088],
           [143.10982867828153, -9.996711264903817],
           [143.12150165191434, -10.000768563553653],
           [143.13248798003934, -9.998739920560487],
           [143.13866778960966, -9.99333014400824],
           [143.14484759917997, -9.989272752525775],
           [143.14759418121122, -9.982510320935706],
           [143.13935443511747, -9.9798053089583],
           [143.12768146148466, -9.98048156405964],
           [143.1084553872659, -9.985891554297275]]],
         [[[143.16682025542997, -10.054861029924206],
           [143.16613360992216, -10.061621952595257],
           [143.1688801919534, -10.068382733712248],
           [143.17780658355497, -10.066354514245752],
           [143.18329974761747, -10.061621952595257],
           [143.17643329253934, -10.05553712855864]]],
         [[[143.16544696441434, -9.864145108144534],
           [143.16544696441434, -9.872262943772743],
           [143.1736867105081, -9.877674723003382],
           [143.1853596841409, -9.872939421042428],
           [143.17780658355497, -9.866851075583758]]],
         [[[143.2073323403909, -9.893233092342042],
           [143.2128255044534, -9.898644526417003],
           [143.21900531402372, -9.895938820524918],
           [143.2121388589456, -9.891203781580087]]],
         [[[143.4153859292581, -10.037958104546032],
           [143.43358203521512, -10.043029074909713],
           [143.45074817291044, -10.035253554532273],
           [143.45692798248075, -10.023758965005188],
           [143.45006152740262, -10.009897300245813],
           [143.4212224160745, -10.009221106328638],
           [143.41401263824247, -10.024097046987967]]],
         [[[143.46379443755887, -10.026463610993533],
           [143.4651677285745, -10.032548981926753],
           [143.47443744292997, -10.033563199300927],
           [143.48954364410184, -10.028154003273901],
           [143.51700946441434, -10.025111290820602],
           [143.51906940093778, -10.01429252636965],
           [143.4977833901956, -10.000092350629801],
           [143.49126025787137, -10.001782880300642],
           [143.48405048003934, -10.017673429029928],
           [143.46825763335966, -10.016997251316727]]],
         [[[143.51220294585966, -9.995696932327435],
           [143.536578861387, -10.021054296449892],
           [143.54481860748075, -10.016321072194005],
           [143.54996844878934, -9.994682596586097],
           [143.53863879791044, -9.98893463428424],
           [143.51254626861356, -9.992315800883219]]],
         [[[143.54447528472684, -10.02206854980232],
           [143.55408832183622, -10.021730465704051],
           [143.55683490386747, -10.020040039924808],
           [143.5647313272073, -10.017335340349526],
           [143.5853306924417, -10.016321072194005],
           [143.60558673492216, -10.006854416527403],
           [143.62034961334012, -10.00719251612664],
           [143.6406056558206, -9.996711264903817],
           [143.63923236480497, -9.987920277451078],
           [143.6409489785745, -9.976762143622931],
           [143.64369556060575, -9.966279912107828],
           [143.65090533843778, -9.954444729585843],
           [143.65433856597684, -9.946328927836184],
           [143.63373920074247, -9.945314438439423],
           [143.59906360259794, -9.959178854111636],
           [143.56164142242216, -9.989610870415872],
           [143.55614825835966, -9.997387484862953],
           [143.55099841705106, -10.007530615373826],
           [143.54584857574247, -10.019363867145653]]],
         [[[143.6771345995761, -10.009221106328638],
           [143.68949421871673, -10.009221106328638],
           [143.70116719234954, -10.002459089705983],
           [143.70631703365814, -9.990963338461556],
           [143.71970662106048, -9.98048156405964],
           [143.71936329830658, -9.975409616569015],
           [143.70700367916595, -9.978452794542228],
           [143.67747792233, -10.002120985179255]]],
         [[[143.65344532955658, -9.984539065167986],
           [143.65859517086517, -9.994682596586097],
           [143.666491594205, -9.99704937505924],
           [143.6764479540683, -9.994682596586097],
           [143.69189747799408, -9.978790923672902],
           [143.7404823721456, -9.949036390583522],
           [143.75103844075443, -9.949374011323052],
           [143.75906280557186, -9.937030325265498],
           [143.79111775387298, -9.916569264510922],
           [143.78940114010345, -9.911834523238007],
           [143.7863112353183, -9.900673791204232],
           [143.78253468502533, -9.882071728093448],
           [143.77704152096283, -9.881733499019301],
           [143.7650252245761, -9.906085102635645],
           [143.7423659228183, -9.909467126960541],
           [143.72382649410736, -9.925700358058005],
           [143.67747792233, -9.948357897179513],
           [143.65790852535736, -9.966279912107828]]],
         [[[143.80656727779876, -9.890527341874252],
           [143.81034382809173, -9.898306314399715],
           [143.8141203783847, -9.903041250934514],
           [143.81721028316986, -9.901688418893876],
           [143.82236012447845, -9.897629889320044],
           [143.82373341549408, -9.893909526477211],
           [143.8196135424472, -9.881057039827583],
           [143.81618031490814, -9.874292371411546],
           [143.81068715084564, -9.874968844510775],
           [143.80759724606048, -9.880718809710023]]],
         [[[143.83780964840423, -9.875645316219666],
           [143.8299132250644, -9.880380579244703],
           [143.83437642086517, -9.88815979193891]]],
         [[[143.8302565478183, -9.872939421042428],
           [143.83437642086517, -9.871248225262018],
           [143.83883961666595, -9.86820405096828],
           [143.83780964840423, -9.864821602087883],
           [143.83437642086517, -9.865159848538697],
           [143.8299132250644, -9.869557020795117]]],
         [[[143.90304097164642, -9.807314667649345],
           [143.90029438961517, -9.797841978605101],
           [143.9013243578769, -9.782617447551072],
           [143.9136839770175, -9.776527439760969],
           [143.9239836596347, -9.772805713420551],
           [143.93599995602142, -9.777880784466959],
           [143.9401198290683, -9.776189102723796],
           [143.9397765063144, -9.76976063362417],
           [143.9346266650058, -9.764685438709407],
           [143.9346266650058, -9.751827932084591],
           [143.9298201464511, -9.746414096690794],
           [143.91437062252533, -9.736939673345805],
           [143.86733540524017, -9.764008740207718],
           [143.84879597652923, -9.765362135835673],
           [143.842272844205, -9.768407255880561],
           [143.8463927172519, -9.776189102723796],
           [143.85051259029876, -9.789722315577558],
           [143.86081227291595, -9.800548488798349],
           [143.87317189205658, -9.809682797621248],
           [143.90098103512298, -9.817125381624901]]],
         [[[143.99189298103443, -9.67379367049237],
           [143.99807279060474, -9.688007885578878],
           [144.000819372636, -9.69545318662176],
           [144.01661221931568, -9.689361588966504],
           [144.01455228279224, -9.670409244932937],
           [144.0131789917766, -9.654840448762348],
           [144.00974576423755, -9.639270932864335],
           [144.01523892830005, -9.615576812843711],
           [144.01043240974536, -9.606775716654447],
           [144.000819372636, -9.611514796896074],
           [143.989833044511, -9.62843954138525],
           [143.978846716386, -9.648748115150477]]],
         [[[144.02210538337818, -9.629793484325345],
           [144.0351516480266, -9.626408616798093],
           [144.0406448120891, -9.6162538107589],
           [144.0392715210735, -9.606775716654447],
           [144.02759854744068, -9.608806759169713],
           [144.02004544685474, -9.616930807318806]]],
         [[[144.0179855103313, -9.65856348727776],
           [144.02141873787036, -9.663978742526725],
           [144.02553861091724, -9.661609579076567],
           [144.02073209236255, -9.65314814492171]]],
         [[[144.0286285157024, -9.674808991515556],
           [144.02725522468677, -9.680223985161483],
           [144.03034512947193, -9.685638891512479],
           [144.03721158455005, -9.68259301743418],
           [144.03274838874927, -9.670747689022043]]],
         [[[144.1275054688274, -9.604406151651423],
           [144.14638822029224, -9.588834312128883],
           [144.15291135261646, -9.579016915329559],
           [144.1611510987102, -9.581048124175494],
           [144.16870419929614, -9.573261757613592],
           [144.16458432624927, -9.569537780074143],
           [144.15840451667896, -9.553625780202823],
           [144.1611510987102, -9.5461773544193],
           [144.1556579346477, -9.535004410452675],
           [144.15188138435474, -9.52721699062686],
           [144.12681882331958, -9.528232751116153],
           [144.11926572273364, -9.536358726191452],
           [144.10896604011646, -9.557011374420956],
           [144.11514584968677, -9.578001306349297],
           [144.1172057862102, -9.606098699774513]]],
         [[[144.18037717292896, -9.545838785740841],
           [144.18106381843677, -9.558027046118946],
           [144.18484036872974, -9.558365602677926],
           [144.19239346931568, -9.55498002193116],
           [144.19033353279224, -9.544823077686871],
           [144.18381040046802, -9.543468795571966]]],
         [[[144.18484036872974, -9.56649085900742],
           [144.18964688728443, -9.56649085900742],
           [144.19479672859302, -9.56649085900742],
           [144.19548337410083, -9.561751149738193],
           [144.18930356453052, -9.560058380419584],
           [144.1834670777141, -9.562089702591011]]],
         [[[144.19136350105396, -9.578001306349297],
           [144.19719998787036, -9.580371055910595],
           [144.19273679206958, -9.570891958447076],
           [144.1886169190227, -9.571907588685264]]],
         [[[144.12328570531702, -9.353754203915347],
           [144.12122576879358, -9.360868045379187],
           [144.12946551488733, -9.365949271574411],
           [144.1390785519967, -9.368320485032504],
           [144.14560168432092, -9.366288017345225],
           [144.14319842504358, -9.361206796103728],
           [144.1274055783639, -9.353076687614793]]],
         [[[144.1943535153756, -9.404902866988616],
           [144.20774310277795, -9.4093060412948],
           [144.22525256322717, -9.41777352656281],
           [144.23692553685999, -9.422515227663538],
           [144.24482196019983, -9.416418742863081],
           [144.2427620236764, -9.409644744688347],
           [144.24550860570764, -9.401854482710638],
           [144.2382988278756, -9.393047888415294],
           [144.23349230932092, -9.391354286911094],
           [144.22593920873499, -9.382886155221387],
           [144.21392291234827, -9.386612158655216],
           [144.2049965207467, -9.39169300787437],
           [144.19744342016077, -9.398806071577111]]],
         [[[144.24550860570764, -9.429966340666327],
           [144.25134509252405, -9.430643706597394],
           [144.2544349973092, -9.426918177518894],
           [144.26816790746545, -9.437755968550249],
           [144.26713793920374, -9.42285391810779],
           [144.26164477514124, -9.419805692149438],
           [144.25065844701624, -9.422515227663538],
           [144.24413531469202, -9.425563429699297]]],
         [[[143.84056590978344, -9.386814145281834],
           [143.83404277745922, -9.386136693485664],
           [143.83129619542797, -9.388507768978839],
           [143.83404277745922, -9.391556270773426],
           [143.83987926427562, -9.39223371197377],
           [143.8439991373225, -9.391217549676467]]],
         [[[143.85395549718578, -9.35903753688945],
           [143.85292552892406, -9.364796284631156],
           [143.86185192052562, -9.369199968500633],
           [143.87043498937328, -9.370893678197382],
           [143.87455486242015, -9.366828761047008],
           [143.8769581216975, -9.36310254520154],
           [143.86185192052562, -9.355988749460362]]],
         [[[143.7729313272639, -9.435925866607901],
           [143.7722446817561, -9.441344663139652],
           [143.7839176553889, -9.441344663139652],
           [143.7942173380061, -9.43728057372767],
           [143.79765056554515, -9.432877756126127],
           [143.79009746495922, -9.429152251173866],
           [143.77533458654125, -9.432877756126127]]],
         [[[143.85189556066234, -9.455907256413832],
           [143.84743236486156, -9.461664390755136],
           [143.8597919840022, -9.491125862043894],
           [143.8608219522639, -9.50636356085712],
           [143.8611652750178, -9.51652164980969],
           [143.8827946085139, -9.532773964051865],
           [143.89618419591625, -9.527356611923475],
           [143.8937809366389, -9.51956901763898],
           [143.89137767736156, -9.508395202784772],
           [143.88245128576, -9.500268562702486],
           [143.8766147989436, -9.478935215121354],
           [143.88107799474437, -9.466405487827833],
           [143.87283824865062, -9.459971125953818],
           [143.85258220617015, -9.450827351980381]]],
         [[[143.83610271398265, -9.489094117654762],
           [143.83850597326, -9.499252719125769],
           [143.84743236486156, -9.497559639800887],
           [143.84777568761547, -9.49349621527418],
           [143.84193920079906, -9.488078240944107]]],
         [[[143.82048152867992, -9.621132340968474],
           [143.83249782506664, -9.620455352821939],
           [143.84932064000805, -9.609961863224166],
           [143.8579037088557, -9.594051758426763],
           [143.87163661901195, -9.576786757345529],
           [143.89257930700023, -9.56730755986153],
           [143.9131786722346, -9.561213650446922],
           [143.91970180455883, -9.55850521121469],
           [143.91523860875805, -9.548686938310436],
           [143.91146205846508, -9.539545533248107],
           [143.90390895787914, -9.533451127020948],
           [143.8953261014204, -9.533451274692803],
           [143.88674304043943, -9.541577111439365],
           [143.8805630106135, -9.546316967953821],
           [143.8688900369807, -9.556473867641667],
           [143.853097190301, -9.572047191661756],
           [143.8359310526057, -9.581526256881295],
           [143.8246014017268, -9.596759914143561],
           [143.8194515604182, -9.614700898842027]]],
         [[[143.7535335916682, -9.582541855315666],
           [143.75147365514476, -9.592697672454184],
           [143.75456355992992, -9.600483592914516],
           [143.76760982457836, -9.605222761237838],
           [143.78374599401195, -9.598791016728475],
           [143.79095577184398, -9.596082877243141],
           [143.79885219518383, -9.598452500476512],
           [143.8084652322932, -9.60826933441768],
           [143.82116817418773, -9.590666533354671],
           [143.83284114782055, -9.560875096722134],
           [143.83490108434398, -9.551395455668438],
           [143.83284114782055, -9.542931267418014],
           [143.81533168737133, -9.558843767297883],
           [143.79335903112133, -9.554781072068687],
           [143.79026912633617, -9.559859433526135],
           [143.79610561315258, -9.568661747120629],
           [143.79438899938305, -9.577463832758381],
           [143.7912990945979, -9.5713701054518],
           [143.787179221551, -9.575771141695084],
           [143.78340267125805, -9.56967738402424],
           [143.77790950719555, -9.569000293092394],
           [143.76898311559398, -9.578817979533866],
           [143.75765346471508, -9.577463832758381]]],
         [[[143.76211666051586, -9.62214782064578],
           [143.76657985631664, -9.631625483787747],
           [143.7645199197932, -9.638733556562887],
           [143.76108669225414, -9.647195352688835],
           [143.76211666051586, -9.663102954191784],
           [143.7693264383479, -9.67325634927995],
           [143.77996944371898, -9.673594790502818],
           [143.79061244909008, -9.671902580980943],
           [143.7967922586604, -9.67088725117916],
           [143.80194209996898, -9.661410691882331],
           [143.8033153909846, -9.650918475699243],
           [143.81189845983226, -9.638056603701513],
           [143.8081219095393, -9.627225173257363],
           [143.80503200475414, -9.625871220021748],
           [143.80640529576976, -9.616393395472496],
           [143.80400203649242, -9.61165438356529],
           [143.79988216344555, -9.607253813070997],
           [143.79576229039867, -9.602853185366337],
           [143.7923290628596, -9.600483592914516],
           [143.7758495706721, -9.610977376444787]]],
         [[[143.82666133825023, -9.690177992754416],
           [143.831124534051, -9.69051641692469],
           [143.8352444070979, -9.68747058710522],
           [143.8352444070979, -9.68036354338322],
           [143.83867763463695, -9.677317621461084],
           [143.85138057653148, -9.669533473340639],
           [143.84554408971508, -9.665472107127206],
           [143.83421443883617, -9.672241023566793],
           [143.82631801549633, -9.660395330412285],
           [143.82185481969555, -9.660395330412285],
           [143.82357143346508, -9.669533473340639],
           [143.8136150736018, -9.673933231384934]]],
         [[[143.7967922586604, -9.681040411170747],
           [143.79370235387523, -9.686793732280274],
           [143.7978222269221, -9.696607993608566],
           [143.80537532750805, -9.699653740456268],
           [143.81189845983226, -9.69999215506456],
           [143.81567501012523, -9.697623245632174],
           [143.81533168737133, -9.69051641692469],
           [143.8036587137385, -9.679009803716216]]],
         [[[143.84451412145336, -9.756502592872836],
           [143.8472607034846, -9.75954779393261],
           [143.864083518426, -9.753119003500158],
           [143.86545680944164, -9.7477051890681],
           [143.8572170633479, -9.728417761283808],
           [143.853097190301, -9.709129220301424],
           [143.8685467142268, -9.699315325506321],
           [143.8682033914729, -9.693562219095254],
           [143.86477016393383, -9.689501143389883],
           [143.8527538675471, -9.687809014005836],
           [143.83387111608226, -9.69999215506456]]],
         [[[143.88330959264476, -9.736877296611224],
           [143.88708614293773, -9.736877296611224],
           [143.88914607946117, -9.730109685486418],
           [143.88193630162914, -9.732816746390355]]],
         [[[143.78923915807445, -9.728756146809632],
           [143.79576229039867, -9.731801601121898],
           [143.7974789041682, -9.724357108252223],
           [143.7912990945979, -9.71420525994758],
           [143.78786586705883, -9.716912449617174]]],
         [[[143.8022854227229, -9.719958011813935],
           [143.79850887242992, -9.733831888573839],
           [143.79473232213695, -9.745336617617204],
           [143.79610561315258, -9.751427195933196],
           [143.80091213170726, -9.758871084991474],
           [143.80434535924633, -9.75548751966809],
           [143.80709194127758, -9.744998248894177],
           [143.80640529576976, -9.734508648315456],
           [143.80537532750805, -9.719958011813935]]],
         [[[143.80743526403148, -9.758871084991474],
           [143.80537532750805, -9.763269668533184],
           [143.8029720682307, -9.770713292916922],
           [143.80674861852367, -9.77714174360527],
           [143.809151877801, -9.782555079369537],
           [143.8088085550471, -9.788306651996924],
           [143.81086849157055, -9.794058125019097],
           [143.81498836461742, -9.79744129789286],
           [143.82151149694164, -9.796426349652323],
           [143.8242580789729, -9.774773381491348],
           [143.81189845983226, -9.75548751966809]]],
         [[[143.78408931676586, -9.771051635524058],
           [143.7926723856135, -9.775788395891302],
           [143.7971355814143, -9.773758363993622],
           [143.79576229039867, -9.764961415963871],
           [143.7926723856135, -9.760901207690619],
           [143.7858059305354, -9.7615779125073],
           [143.78305934850414, -9.765299764418458]]],
         [[[143.74975704137523, -9.808267219216887],
           [143.75731014196117, -9.80759060949014],
           [143.77722286168773, -9.804884156771793],
           [143.78477596227367, -9.801839371054967],
           [143.79026912633617, -9.795411398307438],
           [143.79404567662914, -9.794058125019097],
           [143.79850887242992, -9.784246728713915],
           [143.79576229039867, -9.779171754847704],
           [143.78855251256664, -9.779848422507198],
           [143.77928279821117, -9.78052508878922],
           [143.74941371862133, -9.802177681959659]]],
         [[[143.7974789041682, -9.81604813176908],
           [143.80606197301586, -9.81604813176908],
           [143.81155513707836, -9.811988548020436],
           [143.81224178258617, -9.80759060949014],
           [143.80674861852367, -9.802515992519234],
           [143.8022854227229, -9.804545848628408],
           [143.798165549676, -9.811650247128982]]],
         [[[143.82357143346508, -9.859347257944574],
           [143.83146785680492, -9.855626462279073],
           [143.8300945657893, -9.852243884336817],
           [143.82734798375805, -9.85190562463491],
           [143.8256313699885, -9.854949949465723]]],
         [[[143.7703564066096, -9.871185873789411],
           [143.7809994119807, -9.873891783380454],
           [143.78237270299633, -9.87084763352685],
           [143.77104305211742, -9.868818184655556]]],
         [[[143.666329612176, -9.917859692555936],
           [143.6704494852229, -9.922932533747261],
           [143.68074916784008, -9.912110377603941],
           [143.69001888219555, -9.911433980980553],
           [143.6934521097346, -9.903655319549662],
           [143.7040951151057, -9.892156091030424],
           [143.7428905862971, -9.860700264139307],
           [143.7367107767268, -9.858670752764832],
           [143.72160457555492, -9.86002376173609],
           [143.70066188756664, -9.8765976707284],
           [143.67765926305492, -9.899596814293599],
           [143.66667293492992, -9.910757582961894]]],
         [[[143.7312176126643, -9.798794557384019],
           [143.7150814432307, -9.800486123985173],
           [143.70512508336742, -9.80657569231025],
           [143.7095882791682, -9.810635342381998],
           [143.7209179300471, -9.810973644309751],
           [143.7312176126643, -9.811311945892083],
           [143.73018764440258, -9.80353092212709]]],
         [[[143.70169185582836, -9.802515992519234],
           [143.70718501989086, -9.797779613283126],
           [143.70787166539867, -9.790674917660413],
           [143.70752834264476, -9.784246728713915],
           [143.70855831090648, -9.778833420501421],
           [143.69688533727367, -9.78052508878922],
           [143.6982586282893, -9.80116274821025]]],
         [[[143.6429836649104, -9.828226584343524],
           [143.6433269876643, -9.834315642505748],
           [143.65294002477367, -9.838036678388516],
           [143.6598064798518, -9.83634530363594],
           [143.66907619420726, -9.834653920226376],
           [143.69997524205883, -9.833639086025874],
           [143.7037517923518, -9.832285968911966],
           [143.68864559117992, -9.823490572708852],
           [143.6759426492854, -9.82518201321866],
           [143.66735958043773, -9.830594564731472],
           [143.64813350621898, -9.827211730415542]]],
         [[[143.63577388707836, -9.805560772022897],
           [143.64195369664867, -9.824167149950382],
           [143.65294002477367, -9.82315228356932],
           [143.6649563211604, -9.82518201321866],
           [143.67216609899242, -9.820445958003951],
           [143.67937587682445, -9.81638642816871],
           [143.6876156229182, -9.81638642816871],
           [143.68967555944164, -9.812665148766964],
           [143.68452571813305, -9.80014781135503],
           [143.68933223668773, -9.779171754847704],
           [143.6766292947932, -9.774773381491348],
           [143.66220973912914, -9.779510088849621],
           [143.6549999612971, -9.785600041988165],
           [143.6539699930354, -9.792028204741342]]],
         [[[143.60968135778148, -9.83296252816125],
           [143.6000683206721, -9.83871322586527],
           [143.60865138951976, -9.828903151898851],
           [143.6052181619807, -9.82518201321866],
           [143.59079860631664, -9.836007027646538],
           [143.59079860631664, -9.843449019405199],
           [143.58770870153148, -9.851229104190693],
           [143.5887386697932, -9.856641228897114],
           [143.59526180211742, -9.858670752764832],
           [143.60968135778148, -9.857655992392473],
           [143.62272762242992, -9.850214320923518],
           [143.63371395055492, -9.843110750690068],
           [143.61895107213695, -9.831271127442001]]],
         [[[143.56298946325023, -9.831947688768112],
           [143.57122920934398, -9.838374952300075],
           [143.57946895543773, -9.83499219760077],
           [143.59251522008617, -9.829241435157474],
           [143.6055614847346, -9.819431080211887],
           [143.6055614847346, -9.814018346114205],
           [143.59697841588695, -9.80657569231025],
           [143.58633541051586, -9.80759060949014],
           [143.56539272252758, -9.81638642816871],
           [143.56298946325023, -9.826535159400343]]],
         [[[143.6220409769221, -9.819092786923092],
           [143.61826442662914, -9.82078424990984],
           [143.62375759069164, -9.82518201321866],
           [143.6265041727229, -9.819092786923092]]],
         [[[143.6814358133479, -9.860700264139307],
           [143.68933223668773, -9.857994246196933],
           [143.6986019510432, -9.85190562463491],
           [143.70203517858226, -9.847846481164469],
           [143.69688533727367, -9.846493422246635],
           [143.67937587682445, -9.857317738241013]]],
         [[[143.3799984354182, -9.958440219934968],
           [143.38240169469555, -9.97331848342582],
           [143.391671409051, -9.978052333933062],
           [143.40540431920726, -9.976699812236662],
           [143.4122707742854, -9.970275257493238],
           [143.41673397008617, -9.95810206969512],
           [143.41467403356273, -9.951338991330998],
           [143.4081509012385, -9.944237608304508],
           [143.39888118688305, -9.94220861337699],
           [143.38995479528148, -9.945252101044437],
           [143.38377498571117, -9.955058701770248]]],
         [[[143.44179653112133, -9.978728592674914],
           [143.4404232401057, -9.970275257493238],
           [143.43630336705883, -9.962497995478252],
           [143.43046688024242, -9.964188720391093],
           [143.42703365270336, -9.968584564140928],
           [143.42772029821117, -9.976023549282292],
           [143.43321346227367, -9.977714204035543]]],
         [[[143.59011196080883, -9.96080726180189],
           [143.55955623571117, -9.972980348614561],
           [143.54856990758617, -9.977714204035543],
           [143.54136012975414, -9.977714204035543],
           [143.53277706090648, -9.974671019161685],
           [143.54685329381664, -9.984814858144585],
           [143.567452659051, -9.983124240261672],
           [143.57534908239086, -9.977037943187325]]],
         [[[143.47990535680492, -9.897229329723224],
           [143.48265193883617, -9.90061144531201],
           [143.48780178014476, -9.901287864248722],
           [143.49398158971508, -9.896214688253496],
           [143.49844478551586, -9.891141433890141],
           [143.49741481725414, -9.88031822950223],
           [143.49123500768383, -9.873891783380454],
           [143.48127864782055, -9.878288839022929],
           [143.4788753885432, -9.88606810119723]]],
         [[[143.38652156774242, -9.87084763352685],
           [143.38652156774242, -9.876935905082624],
           [143.39338802282055, -9.884376972899704],
           [143.4023144144221, -9.886744550080605],
           [143.40883754674633, -9.884038746196431],
           [143.4126140970393, -9.877950606059358],
           [143.4133007425471, -9.869156427002613],
           [143.40883754674633, -9.863068011616178],
           [143.38755153600414, -9.867126967709822]]],
         [[[143.2976009744807, -9.875244729835172],
           [143.3030941385432, -9.877950606059358],
           [143.31064723912914, -9.877274139089211],
           [143.31717037145336, -9.875921200977011],
           [143.32266353551586, -9.87186235327214],
           [143.32232021276195, -9.865773987901415],
           [143.3199169534846, -9.860700264139307],
           [143.3144237894221, -9.857994246196933],
           [143.3079006570979, -9.858332499654395],
           [143.29897426549633, -9.86780345553016]]],
         [[[143.2752849954768, -9.96080726180189],
           [143.2749416727229, -9.96689386201993],
           [143.2804348367854, -9.968246424418167],
           [143.2862713236018, -9.968584564140928],
           [143.29382442418773, -9.969598981204648],
           [143.3027508157893, -9.965541294010672],
           [143.31030391637523, -9.961145409238181],
           [143.31270717565258, -9.953029774056768],
           [143.30961727086742, -9.946604753131544],
           [143.29966091100414, -9.943223112415255],
           [143.2924511331721, -9.9445757729011],
           [143.2804348367854, -9.955735008205867]]],
         [[[143.4035711916307, -9.818639686140642],
           [143.40254122336898, -9.823714056114733],
           [143.4032278688768, -9.829126631648126],
           [143.40631777366195, -9.83453911859648],
           [143.41661745627914, -9.835892226486653],
           [143.42142397483383, -9.830479761691892],
           [143.42176729758773, -9.823714056114733],
           [143.41799074729477, -9.818301392043159],
           [143.40734774192367, -9.817286507676748]]],
         [[[143.50347811301742, -9.83250944637488],
           [143.5024481447557, -9.838598425645621],
           [143.50588137229477, -9.844010757457433],
           [143.51412111838852, -9.845363826550678],
           [143.52064425071273, -9.84198114342165],
           [143.51515108665023, -9.827435211307705],
           [143.50931459983383, -9.828788348272063]]],
         [[[143.53231722434555, -9.828788348272063],
           [143.54330355247055, -9.833862562574021],
           [143.54811007102523, -9.8331860051668],
           [143.54914003928695, -9.828788348272063],
           [143.54776674827133, -9.821007735143294],
           [143.54433352073227, -9.818977979892436],
           [143.53369051536117, -9.820669443465807]]],
         [[[143.2501059206346, -9.769245094813373],
           [143.25182253440414, -9.774996897719612],
           [143.25937563499008, -9.780410268409472],
           [143.27001864036117, -9.777703594082022],
           [143.2772284181932, -9.774658559125278],
           [143.28169161399398, -9.767891714973182],
           [143.28478151877914, -9.764169892037804],
           [143.28546816428695, -9.760448027498027],
           [143.28134829124008, -9.758756257139636],
           [143.27516848166977, -9.759432966314034],
           [143.26418215354477, -9.76180143759799],
           [143.25285250266586, -9.766538329629562]]],
         [[[143.31739718040023, -9.764846590211949],
           [143.32186037620102, -9.770936811873312],
           [143.3266668947557, -9.770936811873312],
           [143.33113009055648, -9.768568405581258],
           [143.32975679954086, -9.764169892037804],
           [143.32357698997055, -9.760786380538605],
           [143.31980043967758, -9.762816491563536]]],
         [[[143.35516268332992, -9.724580658277468],
           [143.36305910666977, -9.724919047687802],
           [143.36923891624008, -9.722888706088535],
           [143.37301546653305, -9.718489590335336],
           [143.37507540305648, -9.714767216437561],
           [143.37335878928695, -9.708337564014704],
           [143.36717897971664, -9.707660751314231],
           [143.36099917014633, -9.711044801137744],
           [143.3534460695604, -9.718151194419493]]],
         [[[143.42348391135727, -9.693447368806776],
           [143.42623049338852, -9.695816307741149],
           [143.4306936891893, -9.695139469753064],
           [143.4358435304979, -9.695477888917857],
           [143.4420233400682, -9.692432104141595],
           [143.44408327659164, -9.687355734731586],
           [143.44065004905258, -9.680925556597492],
           [143.43344027122055, -9.682279288543151],
           [143.4248572023729, -9.689386291711159]]],
         [[[143.29473787864242, -9.619663487862386],
           [143.29645449241195, -9.623386914610805],
           [143.3040075929979, -9.625417857363813],
           [143.31190401633773, -9.623048422965164],
           [143.31774050315414, -9.619663487862386],
           [143.3211737306932, -9.616278518865249],
           [143.32426363547836, -9.611201001842728],
           [143.3259802492479, -9.607138933360456],
           [143.32495028098617, -9.602738304162626],
           [143.3204870851854, -9.601722766225944],
           [143.31156069358383, -9.604092350007637],
           [143.30606752952133, -9.606461917206948],
           [143.29714113791977, -9.61086249799821],
           [143.29473787864242, -9.61492452177855]]],
         [[[143.39395815452133, -9.755711048845244],
           [143.39567476829086, -9.760786380538605],
           [143.40254122336898, -9.767553369153188],
           [143.41524416526352, -9.766876676481365],
           [143.42863375266586, -9.762139789263614],
           [143.44408327659164, -9.762139789263614],
           [143.45678621848617, -9.75401925443462],
           [143.46159273704086, -9.745898521752762],
           [143.46262270530258, -9.741161336381763],
           [143.4633093508104, -9.72627260190394],
           [143.4578161867479, -9.722550314623383],
           [143.45060640891586, -9.72661098960161],
           [143.4420233400682, -9.735070570679511],
           [143.43824678977523, -9.744883416263898],
           [143.41661745627914, -9.742514824778905],
           [143.4032278688768, -9.744883416263898],
           [143.39464480002914, -9.750974002856303]]],
         [[[142.9634314211229, -9.82777349606779],
           [143.0183630617479, -9.826420354951624],
           [143.04720217307602, -9.78988345494579],
           [143.07604128440414, -9.750635639852716],
           [143.1501989992479, -9.684309876229454],
           [143.16393190940414, -9.632864542984613],
           [143.15843874534164, -9.59224426535427],
           [143.1666784914354, -9.544847790993055],
           [143.17629152854477, -9.523178633326108],
           [143.17903811057602, -9.489317823101716],
           [143.20787722190414, -9.454099032028756],
           [143.22023684104477, -9.398554387545495],
           [143.23534304221664, -9.37145620103726],
           [143.2325964601854, -9.345710964460409],
           [143.21886355002914, -9.332160074857914],
           [143.2600622804979, -9.300991031202457],
           [143.2271032961229, -9.249488270004063],
           [143.17491823752914, -9.245421940866478],
           [143.09801394065414, -9.269819210341181],
           [143.08016115745102, -9.303701493202059],
           [143.0458288820604, -9.355196273407595],
           [143.06505495627914, -9.386360465763033],
           [143.06642824729477, -9.456808297965415],
           [143.08702761252914, -9.475772561708355],
           [143.07466799338852, -9.513697944325177],
           [143.09114748557602, -9.544847790993055],
           [143.07192141135727, -9.57193230002434],
           [143.09114748557602, -9.59901465017556],
           [143.09114748557602, -9.63015667630379],
           [143.0513220461229, -9.691078413141657],
           [143.01698977073227, -9.718151194419493],
           [143.00463015159164, -9.747928723463271],
           [142.97029787620102, -9.773643541277146],
           [142.96617800315414, -9.80070962291005]]],
         [[[142.96755129416977, -9.743868307686345],
           [142.97853762229477, -9.73777759137639],
           [142.9860907228807, -9.72153513817339],
           [142.9908972414354, -9.712736813223723],
           [142.99913698752914, -9.704615077238154],
           [142.99227053245102, -9.701230962458668],
           [142.9805975588182, -9.708675969852019],
           [142.96549135764633, -9.734393812076533]]],
         [[[142.9872082804426, -9.243687868808646],
           [142.9872082804426, -9.261308375752908],
           [143.01330080973946, -9.271473651014194],
           [143.02909365641915, -9.261308375752908],
           [143.04488650309884, -9.25791988529662],
           [143.07166567790352, -9.250465091326884],
           [143.07715884196602, -9.235555029577572],
           [143.0586194132551, -9.22809976204374],
           [143.02772036540352, -9.238265996852903],
           [142.99750796305977, -9.232844041445132]]],
         [[[142.74894228923165, -9.434077804648872],
           [142.76542178141915, -9.43678722808884],
           [142.7784680460676, -9.431368359919595],
           [142.77709475505196, -9.421207752677656],
           [142.75306216227852, -9.427304152921145]]],
         [[[143.0146741007551, -9.21589989344186],
           [143.03390017497384, -9.214544326458421],
           [143.06342593180977, -9.209799801049],
           [143.0860852335676, -9.199632746416714],
           [143.07715884196602, -9.18472053781662],
           [143.0476330851301, -9.18878756607866],
           [143.0105542277082, -9.200310559153031]]],
         [[[143.20132713330747, -9.129076756059796],
           [143.2033870698309, -9.141279612138673],
           [143.22398643506529, -9.152465196186503],
           [143.23703269971372, -9.160261001284146],
           [143.24870567334654, -9.160261001284146],
           [143.25694541944029, -9.15924416683778],
           [143.26724510205747, -9.154498900954659],
           [143.27205162061216, -9.145008179219381],
           [143.27823143018247, -9.13924583181882],
           [143.28132133496763, -9.128059832526677],
           [143.28338127149107, -9.121280268208329],
           [143.2854412080145, -9.116534496544471],
           [143.29162101758482, -9.111449671191842],
           [143.28818779004575, -9.100940802828204],
           [143.27857475293638, -9.087380516478817],
           [143.2583187104559, -9.08873656822656],
           [143.24527244580747, -9.095516749937415]]],
         [[[143.54472743797356, -9.735264343571894],
           [143.55365382957513, -9.733234064826977],
           [143.55640041160638, -9.722405703164242],
           [143.55434047508294, -9.712930599060046],
           [143.54266750145013, -9.729173470318218]]],
         [[[143.47743617820794, -9.568402176803861],
           [143.47709285545403, -9.580928162649974],
           [143.48498927879388, -9.580928162649974],
           [143.49631892967278, -9.575850115956056],
           [143.5024987392431, -9.56670944059442],
           [143.50730525779778, -9.561292628090467],
           [143.50627528953606, -9.557229962099955],
           [143.49563228416497, -9.556552846385442],
           [143.48395931053216, -9.561969734371923]]],
         [[[143.50696193504388, -9.575511576809712],
           [143.51211177635247, -9.57280325149178],
           [143.5193215541845, -9.564001045128238],
           [143.51108180809075, -9.565355245558141],
           [143.50524532127434, -9.571787623930897]]],
         [[[143.54850398826653, -9.612071852439986],
           [143.55434047508294, -9.614102863166663],
           [143.56120693016106, -9.611733349466736],
           [143.56532680320794, -9.606994272285629],
           [143.56773006248528, -9.596161846775992],
           [143.56978999900872, -9.589391404972277],
           [143.56429683494622, -9.584990545310871],
           [143.55571376609856, -9.587698773397934],
           [143.54816066551263, -9.606994272285629]]],
         [[[143.49837886619622, -9.529467114069256],
           [143.50043880271966, -9.537254482540868],
           [143.50730525779778, -9.544025962759859],
           [143.50558864402825, -9.552151561406816],
           [143.51691829490716, -9.554521491158956],
           [143.5306512050634, -9.552490123810028],
           [143.54266750145013, -9.546734517178232],
           [143.54816066551263, -9.549781615158642],
           [143.55640041160638, -9.549781615158642],
           [143.56120693016106, -9.547073084966529],
           [143.5636101894384, -9.542333105315702],
           [143.5515938930517, -9.543687391943738],
           [143.546787374497, -9.540978813306538],
           [143.5522805385595, -9.53691590499959],
           [143.56601344871575, -9.53420727256944],
           [143.58386623191888, -9.531498618632389],
           [143.59725581932122, -9.517955026549767],
           [143.60343562889153, -9.509828613594086],
           [143.601719015122, -9.497638632175107],
           [143.5804330043798, -9.502040619990977],
           [143.57184993553216, -9.501024781672237],
           [143.5570870571142, -9.496284163001095],
           [143.54301082420403, -9.493913829058851],
           [143.51794826316888, -9.499331711109441],
           [143.4966622524267, -9.523033936525295]]],
         [[[143.5855828456884, -9.640166417466],
           [143.58935939598138, -9.649643574581628],
           [143.5958825283056, -9.647274310279922],
           [143.6068688564306, -9.64084336609356],
           [143.62025844383294, -9.623580751937013],
           [143.61957179832513, -9.613425860945993],
           [143.61098872947747, -9.603270665096062],
           [143.59176265525872, -9.603609176532741],
           [143.58764278221184, -9.622226784096762]]],
         [[[143.6460076503759, -9.576527193236378],
           [143.65424739646966, -9.587021718403097],
           [143.6628304653173, -9.59345368628041],
           [143.6731301479345, -9.596500365316402],
           [143.67587672996575, -9.592099597918931],
           [143.67759334373528, -9.582282295606673],
           [143.67107021141106, -9.576527193236378],
           [143.6724435024267, -9.554860051205273],
           [143.66420375633294, -9.543348820791255],
           [143.6515008144384, -9.542671677477223],
           [143.64875423240716, -9.568402176803861]]],
         [[[143.66969692039544, -9.628319596649469],
           [143.6727868251806, -9.619180336624007],
           [143.67416011619622, -9.6100408295206],
           [143.6683236293798, -9.604963218895335],
           [143.65768062400872, -9.6100408295206]]],
         [[[143.6398278408056, -9.6147798640323],
           [143.64154445457513, -9.622226784096762],
           [143.64669429588372, -9.625950182602582],
           [143.64463435936028, -9.604963218895335]]],
         [[[143.62352053018924, -9.644397231299878],
           [143.61133205223138, -9.662505004309656],
           [143.6020623378759, -9.67028931513462],
           [143.59279262352044, -9.667920196127954],
           [143.5790597133642, -9.726127992054796],
           [143.59897243309075, -9.724774437253144],
           [143.61545192527825, -9.702778404182089],
           [143.6398278408056, -9.666904854301904],
           [143.64120113182122, -9.645581968439238],
           [143.63570796775872, -9.63373533775927]]],
         [[[143.6460076503759, -9.642535731718178],
           [143.64669429588372, -9.668597088975798],
           [143.64326106834466, -9.68179622708412],
           [143.6298714809423, -9.697363774459912],
           [143.6188851528173, -9.71563779904053],
           [143.61442195701653, -9.723420876971408],
           [143.60618221092278, -9.73966323850605],
           [143.61613857078606, -9.758273306116907],
           [143.62163173484856, -9.764025298615017],
           [143.63193141746575, -9.766732084234224],
           [143.63708125877434, -9.75624316740363],
           [143.64154445457513, -9.748460854443836],
           [143.64669429588372, -9.742708593350287],
           [143.6508141689306, -9.734925964638153],
           [143.66008388328606, -9.738648114050076],
           [143.66660701561028, -9.740339986428346],
           [143.6724435024267, -9.746769023242402],
           [143.67072688865716, -9.749814313225535],
           [143.67725002098138, -9.763686948865232],
           [143.68617641258294, -9.764025298615017],
           [143.7012826137548, -9.77180724793865],
           [143.70952235984856, -9.766732084234224],
           [143.71398555564934, -9.754551375694291],
           [143.71982204246575, -9.749475949045102],
           [143.72634517478997, -9.744738814473592],
           [143.7338982753759, -9.738309738545443],
           [143.74248134422356, -9.733234064826977],
           [143.74831783103997, -9.725112826467342],
           [143.74591457176263, -9.713607401108016],
           [143.7277184658056, -9.71428420178748],
           [143.70402919578606, -9.708869758038722],
           [143.68720638084466, -9.693979586475622],
           [143.67416011619622, -9.682811523922725],
           [143.66454707908684, -9.699732685725786],
           [143.65768062400872, -9.73188053880774],
           [143.65390407371575, -9.720375346304786],
           [143.65562068748528, -9.711238587953499],
           [143.65493404197747, -9.701424754951944],
           [143.66111385154778, -9.694994846456776],
           [143.66901027488763, -9.676719696855688],
           [143.66935359764153, -9.65336667054105],
           [143.6508141689306, -9.6418587864874]]],
         [[[143.67175685691888, -9.641520313362474],
           [143.67416011619622, -9.64862817763471],
           [143.67656337547356, -9.646597374563202],
           [143.67690669822747, -9.6418587864874]]],
         [[[143.67999660301263, -9.663520359414711],
           [143.67553340721184, -9.67299685927388],
           [143.69201289939934, -9.689241665934626],
           [143.69063960838372, -9.671304646742106],
           [143.68514644432122, -9.6645357114559]]],
         [[[143.69956599998528, -9.674350623165857],
           [143.69887935447747, -9.683826817691573],
           [143.7012826137548, -9.690256940254534],
           [143.70814906883294, -9.69533326576752],
           [143.7222253017431, -9.701424754951944],
           [143.73630153465325, -9.701763167772077],
           [143.72428523826653, -9.683149955520104],
           [143.71398555564934, -9.679427189191205]]],
         [[[143.87473921061633, -9.14020908184673],
           [143.879545729171, -9.145632455543998],
           [143.88606886149523, -9.148683066933577],
           [143.89362196208117, -9.14597141365653],
           [143.8953385758507, -9.141903895002041],
           [143.89156202555773, -9.134446656793004],
           [143.88675550700304, -9.131056951462725],
           [143.8781724381554, -9.134446656793004]]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
///////////////////////////////
// Global coral atlas project - GBR & Torres Strait
// Contact: mitchell.lyons@gmail.com
// Region coordinator: same
// Description:
// - Developing a process to combine OBIA and supervised classification
// - This script loads the raw classification data (from *_classification script)
// - Then applied some cleanup and object-based relational rules
///////////////////////////////

// Table of contents
// 1. Setting constants
// 2. Data loads & vis
// 3. OBIA clean up rules
// 4. Export

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals');
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis');
var param_module = require('users/mitchest/global_reefs:Modules/reef_params');

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove;         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.gbr_torres;  //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// 1. Setting constants

// These will get written to the asset metadata 

var vars = {
  
  // analysis type
  geomorphic: true, // map geomorphic zonation (when set to true) or benthic habitat (when set to false)

  // analysis parameters
  image_data_scale: sensor_params.pixel,
  small_object_geo: ee.Number(400).int(), // smallest object szie in pixels (geomorphic)
  small_object_benthic: ee.Number(130).int(), // smallest object szie in pixels (benthic)
  smooth_radius: ee.Number(3), // radius in pixels for initial smooth 
  dist_to_land_ORF: 1000, //distance to land in meters to convert terrestrial reef flat to ORF
  dist_to_land_RC: 500, //distance to land in meters to convert reef crest to TRF
  wave_height: 0.4, //cut off height for waves in metres, Hs95 threshold
  geo_depth_cutoff: 1500, //depth in centimetres
  shallowlag_depth_cutoff: 500, //depth in centimetres
  benthic_depth_cutoff: 1000, //depth in centimetres
  
  //############
  // Clean-up stage selection
  cleanup_stage: 3, // set to 1, 2 or 3
  geo_refinement: false, // set to true to apply the refinement_mask (the other stage 3 masks will still run)
  
  /*
  - GEOMORPHIC 1: The first pass does a small object filter, just to generally clean noise and reduce the amount of cleaning needed
  -            2: The second pass runs the OBIA cleanup rules
  -            3: The third pass is the MANUAL cleanup stage, which includes AT LEAST the no_reef masking
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY

  - BENTHIC 1: This is the main benthic stge - it does noise removal, no data reclaim and OBIA rules - review those if needed
            2: The second mas is the MANUAL stage - it's optional, but shuold include ALL region specific stuff
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY
  */
  
  // DON'T TOUCH --->
  obia_2nd_pass: null,
  obia_clean: null, // run object-based relationship rules + small object clean up
  fast_clean: null, // run a faster (but less precise) version of the OBIA clean; only applies to geomorphic (`obia_clean: true` also)
  manual_clean: false, // apply manual touch ups
  // --------------<
  //############
  
  reproject_display: true,
  
  // export options
  do_export: true, // export the results?
  geomorph_output_name: region_params.sname + '_geo_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  benthic_output_name: region_params.sname + '_benthic_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  asset_output: region_params.asset // asset path

};


// Clean up stage auto-parameterisation (DON'T TOUCH) --->

if (vars.geomorphic) {
  var temp_outname = vars.geomorph_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.obia_2nd_pass = true;
    vars.obia_clean = true;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '2';
  } else if (vars.cleanup_stage == 3) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = false;
    vars.do_export = false;
    vars.geomorph_output_name = temp_outname + '3';
  }
}

if (!vars.geomorphic) {
  var temp_outname = vars.benthic_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = true,
    vars.obia_clean = true, 
    vars.fast_clean = false, 
    vars.manual_clean = false;
    vars.benthic_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false,
    vars.obia_clean = false, 
    vars.fast_clean = false,
    vars.do_export = false;
    vars.benthic_output_name = temp_outname + '2';
  }
}

//Region extent is created in map viewer and exported to GEE asset
var region_extent = ee.FeatureCollection(region_params.extent_mask).geometry();
Map.addLayer(region_extent, {}, "Manual reef outline", false);
// -----------------------------------------<

//################################################################################################
//START OF CLEAN 3 - Manual Cleanup
//Review everything in this section
//This is the section to add/remove manual cleanups
//You MUST review it for each region

//###############################################################################################

if (vars.manual_clean && vars.geomorphic) {
  
  print("Doing GEOMORPHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.pixels).select('depth');
  
  // define the manually edited map - uses the output from the second pass of cleaning
  var man_geo = ee.Image(region_params.geo_map_clean2);
  
  // import the mid mask from asset ****only use ee.FC if mid_mask created in map viewer****
  //var mid_mask = ee.FeatureCollection(region_params.mid_mask).geometry();
  //Map.addLayer(mid_mask, {color: 'red'}, "mid mask import", true, 0.4);
  var midmask = ee.Image().byte().paint(ee.Feature(mid_mask.dissolve(),{zone: 1}), "zone").clip(mid_mask.dissolve());
  
  // the "MID MASK" CLEAN
  man_geo = man_geo.where({
    test: midmask.eq(1),
    value: ee.Image(0)
  });
  
  // the "GLOBAL MASK CLEAN" - land (1) and/or deep (2)" ****to be moved to datagen for next region****?
  //var global_reef_mask = ee.Image(region_params.global_reef_mask);
  
  /*man_geo = man_geo.where({
    //test: global_reef_mask.eq(1), //land
    test: global_reef_mask.eq(2), //deep
    //test: global_reef_mask.lt(3), //land + deep
    value: ee.Image(0)
  });*/
  
  /*
  // WAVE clean (un-comment this sectio nbased on whether you have waves or not)
  
  var waves = ee.Image(region_params.waves)
  Map.addLayer(waves.lt(vars.wave_height), {}, vars.wave_height + "m Hs95 threshold", false)
  
  man_geo = man_geo.where({
    test: waves.lte(vars.wave_height)
               .and(man_geo.eq(22)),
    value: ee.Image(21)
  })
  */
  
  
  
  /*
  ##############
  
  The rest of the manual geometry paintings and rules should go here
      - make the geom, paint the layer, use it in a rule
      - consult previous regions *_cleanup script for ideas/hints/existing rules etc.
  e.g. 
  var notreefcrest = ee.Image().byte().paint(ee.Feature(not_reef_crest, {zone: 1}), "zone").clip(not_reef_crest);
  var notdeepwater = ee.Image().byte().paint(ee.Feature(not_deep_water, {zone: 1}), "zone").clip(not_deep_water);
  
  
  // Reef crest -> Inner reef flat (inside the reef)
  man_geo = man_geo.where({
    test: notreefcrest.eq(1)
                     .and(man_geo.eq(15)),
    value: ee.Image(13)
  });
  
  // Deep water -> Deep lagoon (inside the reef)
  man_geo = man_geo.where({
    test: notdeepwater.eq(1)
                     .and(man_geo.eq(2)),
    value: ee.Image(12)
  });
  
  ##############
  */
  // use the coastal mask to remove everything but TRF
  var coast_mask_i = ee.Image().byte().paint(ee.Feature(coast_mask, {zone: 1}), 'zone').clip(coast_mask);
  /*var wcmc_mask = ee.Image().byte().paint(ee.Feature(wcmc.filterBounds(coast_mask).geometry(),
                                                     {zone: 1}), 'zone')
                                   .unmask(0);*/
                                   
  man_geo = man_geo.where({
    test: coast_mask_i.eq(1)
                      .and(man_geo.neq(16)),
                      //.and(wcmc_mask.eq(0)),
    value: ee.Image(0)
  })
  
  // use reef area mask in torres straight to just leave reef areas mapped
  var reef_clean_i = ee.Image(0).byte().paint(ee.Feature(reef_clean, {zone: 1}), 'zone').clip(reef_clean_boundary);
  man_geo = man_geo.where({
    test: reef_clean_i.eq(0)
                      .and(man_geo.neq(16)),
                      //.and(wcmc_mask.eq(0)),
    value: ee.Image(0)
  })
  
  // update GBR using deep reef mask
  man_geo = man_geo.where({
    test: gbr30.lt(-20), //deep
    value: ee.Image(2)
  });
  
  //mask to deep and anything removed to this point
  man_geo = man_geo.updateMask(man_geo.gt(2)).selfMask()
  
  if (vars.geo_refinement) {
    // make the mask image layer
    var refine = ee.Image().byte().paint(ee.Feature(refinement_mask, {zone: 1}), "zone").clip(refinement_mask);
    // apply
    man_geo = man_geo.where({
      test: refine.eq(1),
      value: ee.Image(0)
    });
  }
  
  // Add data + the manual layer to the map
  var lowtide_image = ee.ImageCollection(region_params.image);
  Map.addLayer(lowtide_image, {}, sensor_params.sname + ' low tide', false);
  var geo_clean1 = ee.Image(region_params.geo_map_clean1);
  Map.addLayer(geo_clean1, map_palettes.geo, 'Geo clean stage 1', false);
  var geo_clean2 = ee.Image(region_params.geo_map_clean2);
  Map.addLayer(geo_clean2, map_palettes.geo, 'Geo clean stage 2', false);
  //Map.addLayer(man_geo.updateMask(man_geo), map_palettes.geo, 'Geo clean stage 3', false);
  Map.addLayer(man_geo.updateMask(man_geo.gt(2)), map_palettes.geo, 'Geo clean stage 3 - no DW', false);
  Map.addLayer(gbr30.lt(-20), {}, "Deep reef mask", false)
  //Map.addLayer(global_reef_mask, {}, "Global mask", false)
  //Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(1)), {palette: ['F8FF23'], opacity: 0.4}, 'global_reef_mask - land', false);
  //Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(3)), {palette: ['0000ff'], opacity: 0.4}, 'global_reef_mask - reef', false);
  //Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(2)), {palette: ['FF0000'], opacity: 0.4}, 'global_reef_mask - water', false);

  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_geo,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: region_extent,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
} 

if (vars.manual_clean && !vars.geomorphic) {
  
  print("Doing BENTHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.segments).select('depth');
  
  // define the final geomorphic map (the manually edited geo map - stage 3)
  var geo_map = ee.Image(region_params.geo_map_clean3);
  
  // define the clean benthic map to apply 2nd stage rules to
  var man_benthic = ee.Image(region_params.benthic_map_clean1);
  
  // extra depth cutoff refinement
  man_benthic = man_benthic.where({
          test: depth.gt(vars.benthic_depth_cutoff),
          value: ee.Image(0)
        });
  
  /*
  **Generic benthic rules**
    - should be generally applicable, but still review
  */
  
  // BMA on inner RF, outer RF,reef crest, reef slope -> rubble 
  man_benthic = man_benthic.where({
    test: man_benthic.eq(18)
                     .and(geo_map.eq(13).or(geo_map.eq(14)).or(geo_map.eq(15)).or(geo_map.eq(22))),
    value: ee.Image(12)
  });
  
  // Rubble on Outer reef flat and Reef crest -> rock 
  man_benthic = man_benthic.where({
    test: man_benthic.eq(12)
                     .and(geo_map.eq(14).or(geo_map.eq(15))),
    value: ee.Image(13)
  });
    
  
  /*// Seagrass on RC or ORF -> Coral/Algae
  // except for these two areas
  var sg_orf = ee.Image().byte().paint(ee.Feature(sg_on_orf, {zone: 1}), "zone").unmask(geo_map.eq(42));
  
  man_benthic = man_benthic.where({
    test: man_benthic.eq(14)
                     .and(geo_map.eq(14).or(geo_map.eq(15)))
                     .and(sg_orf.eq(0)),
    value: ee.Image(15)
  }); */ 
  
    
  /*
  
  **Manual polygon guided rules**
   - same as per geomorphic clean section
   - add a geometry, paint the layer, create a rule
  
  */
  
  
  // final smooth for missing data due to depth
  man_benthic = man_benthic.focal_mode(2)
                           .selfMask()
  
  
  // Add the manual layer to the map

  var dove_image = ee.Image(region_params.image);
  Map.addLayer(dove_image, {bands: ['b3','b2','b1'], min:0, max:4000, gamma:1.5}, sensor_params.sname + ' low tide', true);
  
  var benthic_clean1 = ee.Image(region_params.benthic_map_clean1);
  var geo_clean1 = ee.Image(region_params.geo_map_clean1);
  var geo_clean2 = ee.Image(region_params.geo_map_clean2);
  Map.addLayer(geo_clean1, map_palettes.geo, 'Geo clean stage 1', false);
  Map.addLayer(geo_clean2.updateMask(geo_clean2.gt(2)), map_palettes.geo, 'Geo clean stage 2', false);
  Map.addLayer(geo_map.updateMask(geo_map.gt(2)), map_palettes.geo, 'Geo clean stage 3 - MANUAL', true);
  Map.addLayer(benthic_clean1, map_palettes.benthic, 'Benthic clean stage 1', false);
  Map.addLayer(man_benthic.reproject({crs:'EPSG:4326', scale: 5}), map_palettes.benthic, 'Benthic clean stage 2 - MANUAL', true);
  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_benthic,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: region_extent,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
}

// #################################################################################################
// END OF MANUAL SECTION
// #################################################################################################


// 2. Data loads & vis

if (!vars.manual_clean) {

  // load input data
  
  // define raw geo/benthic outputs
  // Run check to see if the region has been split into multiple areas
  
  // geo
  if (ee.List(region_params.geo_map).length().getInfo() > 1) {
    var geo_map_raw = ee.Image(region_params.geo_map[0]).unmask(0, false)
                 .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
                 .selfMask();
  } else {
    var geo_map_raw = ee.Image(region_params.geo_map);
  }
  
  // benthic
  if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
      var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
               .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
               .selfMask();
  } else {
      var benthic_map = ee.Image(region_params.benthic_map);
  }
  
  // set the geo map for further processing
  if (vars.geomorphic && vars.obia_2nd_pass) {
    // if it's 2nd pass, you want to make sure you're loading the latest geo clean map
    var geo_map = ee.Image(region_params.geo_map_clean1);
  } else if (vars.geomorphic) {
    var geo_map = geo_map_raw;
  }
  
  var depth = ee.Image(region_params.pixels).select('depth');
  var low_tide_image = ee.Image(region_params.image);
  
  var display_pal = (vars.geomorphic) ? map_palettes.geo : map_palettes.benthic;
  Map.addLayer(depth, {min:0, max:2500}, 'Depth data', false);
  Map.addLayer(low_tide_image, {bands: ['b3','b2','b1'], min:0, max:3000}, sensor_params.sname + ' low tide', false);
  
  // load for display purposes
  if (vars.geomorphic) {
    Map.addLayer(geo_map_raw, display_pal, 'Geomorphic map RAW', false);
    if (vars.cleanup_stage == 2) Map.addLayer(ee.Image(region_params.geo_map_clean1), display_pal, 'Geo clean stage 1', false);
  }
  if (!vars.geomorphic) {
    // Use the manually cleaned geomorphic map as input for the benthic clean
    var geo_map = ee.Image(region_params.geo_map_clean3);
    Map.addLayer(geo_map.updateMask(geo_map.gt(2)), map_palettes.geo, 'Geo clean stage 3', false);
    Map.addLayer(benthic_map, display_pal, 'Benthic map RAW', false);
  }
  
  // 3. Object-based re-classificaiton and cleaning
  
  /* OUTPUT EXTENT
    - to the mapping extent just so it doesn't balloon out
    - to the 'reef boundary' extent for noise/deep removal
  */  
  var class_extent_mask = geo_map.gt(0);
  
  /*
  
  ########
  Initial small object clean
   - this was originally at the end, but we needed to massively reduce the number of objects to 
     iterate through in the OBIA cleaning, so this happens first now
   - future collabs with google might fix this, but need to change the parallel serialisation of vector procesing
   
   - includes a possible special case for:
        - geomorphic to clean up turbid areas over size threshold; fix shallow vs. deep lagoon
        - benthic to allow breaking waves (temporal class) to grow into surrounding class
  ########
  
  */
  
  // ##############################################################################################
  // START OF CLEAN 1
  // ##############################################################################################
  
  if (vars.geomorphic && !vars.obia_2nd_pass) {
    
    // shallow lagoon > 5m == deep lagoon
    geo_map = geo_map.where({
      test: geo_map.eq(11)
                    .and(depth.gt(vars.shallowlag_depth_cutoff)),
      value: ee.Image(12)
    });
    
    // deep water in depth data == deep (s2 + ls8 data should be good enough for this)
    geo_map = geo_map.where({
      test: depth.gt(vars.geo_depth_cutoff),
      value: ee.Image(2)
    });
    
    // make a smooth map with masked area as a value - *** Change to ee.kernal*** see reef mask in clean 3
    var smooth_map = geo_map
                        .focal_mode({
                          radius: vars.smooth_radius, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        });
    
    // replace small objects with smooth underneath
    var clean_map = geo_map.where({
      test: geo_map.connectedPixelCount(vars.small_object_geo, false).lt(vars.small_object_geo), 
      value: smooth_map
    }).updateMask(class_extent_mask);
    
    // display distance to land mask for assessing cut-off distances
    var distToLand = ee.Image(region_params.distToLand);
    Map.addLayer(distToLand.lte(vars.dist_to_land_RC), {}, 'Dist to land (RC to TRF): ' + vars.dist_to_land_RC + 'm', false);
    Map.addLayer(distToLand.unmask(100000, false).gt(vars.dist_to_land_ORF), {}, 'Dist to land (TRF to ORF): ' + vars.dist_to_land_ORF + 'm', false);

    // reef crest close to land -> TRF
    clean_map = clean_map.where({
      test: distToLand.lte(vars.dist_to_land_RC)
                      .and(clean_map.eq(15)),
      value: ee.Image(16)
      });
    
    // TRF outside of specified distance from land -> ORF
    clean_map = clean_map.where({
      test: distToLand.unmask(100000, false).gt(vars.dist_to_land_ORF)
                       .and(clean_map.eq(16)),
      value: ee.Image(14)
    });
  }
  
  if (!vars.geomorphic && vars.cleanup_stage == 1) {
    
    // make a smooth map with masked area as a value, and without temporal class (basically breaking waves)
    var smooth_map = benthic_map
                        .focal_mode({
                          radius: vars.smooth_radius, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 1
                        });
    
    //replace small objects with smooth underneath
    var clean_map = benthic_map.where({
      test: benthic_map.connectedPixelCount(vars.small_object_benthic, false).lt(vars.small_object_benthic),
      value: smooth_map
    }).updateMask(class_extent_mask);
    
  }
  
  // ##############################################################################################
  // START OF CLEAN 2
  // ##############################################################################################
  
  if (vars.geomorphic && vars.obia_2nd_pass) {
    var clean_map = geo_map;
  }
  
  if (vars.obia_clean) {
    
    if (vars.geomorphic && !vars.fast_clean) { 
      
      // FUNCTION that maps over feature colleciton and assigns neighbour percentages
      var set_neighbour_properties = function(f) {
        // make the 1px buffer
        var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5));
        // reduce the classes in the buffer zone
        var diff_classes = ee.Dictionary(
          clean_map.unmask(ee.Image(0)).reduceRegion({
            reducer: ee.Reducer.frequencyHistogram(),
            geometry: diff.geometry(),
            scale: vars.image_data_scale,
            maxPixels: 1e11
          }).get('classification')
        );
        // calculate the percentages
        var diff_sum = diff_classes.toArray().reduce(ee.Reducer.sum(), [0]).get([0]);
        var diff_percs = diff_classes.map(function(k,v){return(ee.Number(v).divide(diff_sum).multiply(100).toUint8())});
        
        /* NOW, we can try to do the class logic right here (see /users/mitchest/global_reefs/obia_dev),
           or we can return the neighbour % and do image logic via (painted) rasters */
        
        return(f.set(diff_percs));
      };
      
      // FUNCTION to reduce the map to vectors and map the neighbour properties function
      var reduce_neighbours = function() {
        // reduce map to vectors
        var map_fc = clean_map
              .updateMask(segment_id).updateMask(clean_map.eq(classn)) // only vectorise class/es of interest
              .reduceToVectors({
                scale: vars.image_data_scale, 
                eightConnected: false,
                bestEffort: true, 
                maxPixels: 1e13,
                tileScale: 1,
                geometry: region_extent
              });
        // map the function, calculate neighbour properties
        return(map_fc.map(set_neighbour_properties));
      };
      
      // first make a make size threshold, so we're not vecortising huge objects when we don't have to
      var segment_id = clean_map.connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels');
      //Map.addLayer(segment_id.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))))
      Map.addLayer(clean_map.updateMask(segment_id).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
      
      // This is where we select the single or group of classes to vectorise for cleaning up
      //var classn = ee.Number(15) // one class
      var classn = clean_map.where({
        test: clean_map.neq(16) //TRF
                .and(clean_map.neq(15)) //RR
                .and(clean_map.neq(14)) //ORF
                .and(clean_map.neq(13)) //IRF
                //.and(clean_map.neq(12)) // deep L
                .and(clean_map.neq(11)), // shallow L 
        value: ee.Image(99) // 99 ensures it's ignored in logic
      });
      
      // Minimum size of object to reclass based on neighbourhood
      var max_size = ee.Number(1000).divide(vars.image_data_scale).pow(2); // the first number is the square dimension of the desired min size;
      // calculate neighbours
      var map_fc_neighbours = reduce_neighbours();
      
      // #########
      // REEF RIM
      // #########
      
      var focus_class = ee.Number(15); //RR
      
      // start the object-based neighbourhood rules
      // paint out to rasters (only paint the layers needed)
      var objsize = ee.Image(30000).paint(map_fc_neighbours, 'count').rename('count');
      //var nb24 = ee.Image().byte().paint(map_fc_neighbours, '24').unmask(0).rename('nb24') //OCL
      var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22'); //SL ex
      var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21'); //Sl sh
      var nb16 = ee.Image().byte().paint(map_fc_neighbours, '16').unmask(0).rename('nb16'); //TRF
      var nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15'); //RR
      var nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14'); //ORF
      var nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13'); //IRF
      //var nb3 = ee.Image().byte().paint(map_fc_neighbours, '3').unmask(0).rename('nb3') //Turbid
      
      // RR surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // RR surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // RR surrounded by IRF + ORF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.add(nb14).gt(75)),
        value: ee.Image(13)
      });
      
      // RR with decent border to TRF --> TRF (often dark, probably seagrass)
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(40)),
        value: ee.Image(16)
      });
      
      // RR surrounded by OCL --> OCL
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb24.gt(75)),
        value: ee.Image(24)
      })
      
      // small RR objects touching OCL + stuff --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(objsize.lte(max_size))
                .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
                .and(nb24.gt(1)),
        value: ee.Image(14)
      })
      
      // ####
      // ORF
      // ####
      
      focus_class = ee.Number(14); // ORF
      
      // ORF surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // ORF surrounded by TRF --> TRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(75)),
        value: ee.Image(16)
      });
      
      // ORF surrounded by RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb15.gt(85)),
        value: ee.Image(15)
      });
      
      // ORF touching slope and RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb21.gt(0).or(nb22.gt(0)))
                .and(nb15.gt(0)),
        value: ee.Image(15)
      });
      
      // ####
      // IRF
      // ####
      
      focus_class = ee.Number(13); // IRF
      
      // IRF surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // IRF surrounded by TRF --> TRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(75)),
        value: ee.Image(16)
      });
      
      // IRF surrounded by RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb15.gt(85)),
        value: ee.Image(15)
      });
      
      // ####
      // TRF
      // ####
      
      focus_class = ee.Number(16); // TRF
      
      // TRF surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // TRF surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // TRF surrounded by IRF + ORF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.add(nb14).gt(75)),
        value: ee.Image(13)
      });
      
      // ####
      // LAGOONS
      // ####
      
      var nb11 = ee.Image().byte().paint(map_fc_neighbours, '11').unmask(0).rename('nb11'); // shallow lag
      
      // SL sourrounded by DL --> DL
      clean_map = clean_map.where({
        test: clean_map.eq(11)
                .and(nb12.gt(75)),
        value: ee.Image(12)
      })
      
      // DL sourrounded by SL --> SL
      clean_map = clean_map.where({
        test: clean_map.eq(12)
                .and(nb11.gt(75)),
        value: ee.Image(11)
      })
      
      // DL/SL surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(11).or(clean_map.eq(12))
                .and(objsize.lte(max_size))
                .and(nb13.gt(80)),
        value: ee.Image(13)
      })
      
      // SL surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(11)
                .and(objsize.lte(max_size))
                .and(nb13.gt(80)),
        value: ee.Image(13)
      });
      
    
    } else if (vars.geomorphic && vars.fast_clean) {
      print("Executing the fast version OBIA");
      
      /* fast version of the geo clean up
        - blanket version assigns the underlying most common in neighbourhood
        - mode OBIA version iterates through objects+buffers but take the mode instead of doing the class percs, to see if that speeds things up
      */
      
      
      // ## Blanket version
      
      // make a very smooth map to capture the broader neighbourhood  - *** Change to ee.kernal*** see reef mask in clean 3
      var smooth_map = clean_map
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          });
      
      // first make a make size threshold, so we're not vectorising huge objects when we don't have t
      // - the unmask(99) captures small no data values/ data gaps
      var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt().multiply(2)).select('labels').pow(2).log().int();
      Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
      
      // replace small objects with smooth underneath
      var clean_map = clean_map.unmask(0).where({
        test: segment_id.gt(0), 
        value: smooth_map
      }).selfMask();
      
      
      // ## mode OBIA version
      
      /* A possible faster plan
            - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
            - BUT, just assign the mode of the neighbours, so save resouces even further??
      
      // FUNCTION that maps over feature colleciton and assigns neighbour percentages
      var set_neighbour_mode = function(f) {
        // make the 1px buffer
        var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
        // reduce the classes in the buffer zone
        var diff_mode = ee.Number(ee.Dictionary(
          clean_map.unmask(ee.Image(0)).reduceRegion({
            reducer: ee.Reducer.mode(),
            geometry: diff.geometry(),
            scale: vars.image_data_scale,
            maxPixels: 1e11
          })).get('classification'))
        
        return(f.set('mode',diff_mode))
      }
      
      // FUNCTION to reduce the map to vectors and map the neighbour properties function
      var reduce_neighbours_mode = function() {
        // reduce map to vectors
        var map_fc = clean_map.unmask(0)
              .updateMask(classn.gt(0)) // only vectorise class/es of interest
              .reduceToVectors({
                scale: vars.image_data_scale, 
                eightConnected: false,
                bestEffort: true, 
                maxPixels: 1e13,
                tileScale: 1,
                geometry: region_extent
              })
        // map the function, calculate neighbour properties
        return(map_fc.map(set_neighbour_mode))
      }
      
      // first make a make size threshold, so we're not vecortising huge objects when we don't have to
      var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
      Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
      
      // This is where we select the single or group of classes to vectorise for cleaning up
      var classn = segment_id.where({
        test: clean_map.neq(16) //TRF
                .and(clean_map.neq(15)) //RR
                .and(clean_map.neq(14)) //ORF
                .and(clean_map.neq(13)) //IRF
                //.and(clean_map.neq(12)) // deep L
                .and(clean_map.neq(11)) // shallow L 
                .and(clean_map.unmask(0).neq(0)), // no data values (want to reclaim the small gaps 
        value: ee.Image(0) // 99 ensures it's ignored in logic
      })
      
      // calculate neighbours
      var map_fc_neighbours = reduce_neighbours_mode()
      
      //print(map_fc_neighbours.limit(10))
      
      var mode_map = ee.Image().byte().paint(map_fc_neighbours, 'mode').unmask(0).rename('mode') // paint out the mode values to an image
      //Map.addLayer(mode_map, display_pal, "mode map", false)
      
      // replace small objects with mode underneath
      var clean_map = clean_map.unmask(0).where({
        test: segment_id.gt(0), 
        value: mode_map
      }).selfMask()
      
      */
      
    } else {
      
      if (vars.cleanup_stage == 1) {
        // BENTHIC CLEAN-UP RULES
        
        /*// reclaim shallow no data to surrounding class
        var smooth_map = clean_map
                            .focal_mode({
                              radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                              kernelType: 'circle', units: 'pixels', iterations: 2
                            });
        
        var clean_map = clean_map.unmask(0).where({
          test: geo_map.gt(2).and(clean_map.eq(0)), 
          value: smooth_map
        }).selfMask();*/
        
        // cut benthic off to < 10 - 15 m
        clean_map = clean_map.where({
          test: depth.gt(vars.benthic_depth_cutoff),
          value: ee.Image(0)
        });
        
        // Deep (or land or missing) in geo == masked from benthic
        clean_map = clean_map.where({
          test: geo_map.unmask(0).lte(2),
          value: ee.Image(0)
        });
        
      }
    }
  }
  
  // Final clip to the classified extent and move on
  if (vars.geomorphic) {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  } else {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  }

  
  
  // 4. Export data
  
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  
  if (vars.do_export) {
    print("For export, the image data scale must be set to:", vars.image_data_scale);
    
    Map.addLayer(region_extent, {}, "Export footprint", false);
    
    Export.image.toAsset({
      image: clean_map.set(vars),
      description: output_name,
      assetId: vars.asset_output + 'in_out/' + output_name,
      region: region_extent,
      scale: vars.image_data_scale,
      crs: 'EPSG:4326',
      maxPixels: 1e13,
      pyramidingPolicy: {'.default': 'mode'}
    });
    
  } else {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name, true);
    } else {
      Map.addLayer(clean_map, display_pal, output_name, false);
    }
  }

}

//Generate title
var title = ui.Label({
  value: 'Classes',
  style: {fontWeight: 'bold', fontSize: '12px'}
});

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false);
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false);
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
var legend = (vars.geomorphic) ? geo_legend : benthic_legend;
pkg_vis.add_lgds([title, legend]);//, mask_legend])
// generate the legend
