/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var notReef_mask = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[71.60342946217652, 12.65909936158879],
           [71.68308034108277, 12.474125345239695],
           [72.21866383717652, 12.433896045657525],
           [72.04562916920777, 12.675177750692391],
           [71.88907399342652, 12.675177750692391]]],
         [[[72.71755096164087, 7.914742843027254],
           [72.47310516085962, 7.264063722961609],
           [73.53654615747737, 7.143550264651811],
           [73.13365813937524, 7.720187402744904],
           [73.11443206515649, 7.948746666513787]]],
         [[[72.61774093367676, 4.713846678989372],
           [72.70425826766113, 4.445541267884463],
           [72.86905318953613, 4.50167465686995],
           [72.7797892735205, 4.745324820875827]]],
         [[[72.88046310200002, 2.000226206221777],
           [73.06860397114065, 2.089433271265267],
           [72.84887740864065, 2.1649122234602767]]],
         [[[72.96822759144477, 4.536532520872901],
           [73.05886479847602, 4.294181595870132],
           [73.21541997425727, 4.343479687246037],
           [73.1289026402729, 4.607716403032213],
           [73.05062505238227, 4.6036098332757875]]]]),
    artifact_layer = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.MultiPoint(),
    center_map = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Point([73.36350406430057, 3.4513743887798998]),
    region_extent = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[70.16383984620248, 13.135866931352913],
          [70.14682558742047, 12.617194359154508],
          [70.2690563075083, 11.807120477151644],
          [70.75799813787245, 10.497269313191726],
          [71.1883486767209, 9.918038419941574],
          [71.47614859713114, 8.090218465993845],
          [71.59908832513908, 5.52591426513123],
          [71.49717465104942, 4.724023756667231],
          [71.63786599252497, 1.9241941877135522],
          [71.79169706752515, -0.00897274020001368],
          [71.76991375572192, -1.3710512046844305],
          [71.49502445725186, -2.765513665803016],
          [71.35011857751672, -3.4180227969815036],
          [70.78266724738901, -4.467873920373559],
          [70.37679876655831, -5.156730459644507],
          [70.0414366086369, -5.673827050931439],
          [69.63155494916931, -6.620623477840547],
          [69.61632242222679, -7.654629654247595],
          [69.88596916257875, -8.325549044857805],
          [70.33702213279423, -8.649621844082038],
          [71.15440380682881, -8.861512281458042],
          [72.50302938219875, -8.730914493557336],
          [73.42866829614745, -8.55743897796769],
          [74.30064119056354, -7.7866094054231425],
          [74.78510906713221, -6.8540012175349405],
          [74.87181187774016, -5.590383988857091],
          [74.71281221914346, -4.718369474096369],
          [74.42252946027796, -3.890078116525247],
          [74.39495159818864, -2.819413619339805],
          [74.80701657465998, 0.26047582105125183],
          [74.97178689803962, 2.752606230303411],
          [74.95623341371372, 3.7796590463055497],
          [73.98795167784473, 8.437740216584354],
          [73.80616705637192, 9.279013186527788],
          [73.88180364769623, 9.530197153338912],
          [74.05559477809774, 9.730752468582905],
          [74.36104571392184, 9.786128362399857],
          [72.93930746651232, 14.377460777937939],
          [72.04231647306855, 14.34492727644073],
          [71.49518330115245, 14.31657896080115],
          [70.94844908898446, 14.180519984144992],
          [70.70783078637048, 14.098023158448601],
          [70.48943631098639, 13.930058399473841]]]),
    pixels = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/cio_pixels"),
    segmentation = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/cio_segmentation"),
    geo = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/cio_geo"),
    ben = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/cio_benthic"),
    mid_mask = 
    /* color: #25d610 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[72.4610278099535, -5.562233749561943],
           [72.41845578846913, -5.63808761806013],
           [72.45072812733632, -5.657220366789967],
           [72.51733274159413, -5.650387314784492],
           [72.57226438221913, -5.63740429392719],
           [72.61140317616444, -5.686601569370111],
           [72.61620969471913, -5.712565104599872],
           [72.6196429222582, -5.7408150998525755],
           [72.56059140858632, -5.774290997216448],
           [72.48574704823476, -5.790003492188808],
           [72.35185117421132, -5.762677133849532],
           [72.32163877186757, -5.809131157116495],
           [72.45965451893788, -5.887684373332356],
           [72.51115293202382, -6.0311006197836265],
           [72.6196429222582, -6.040660364522768],
           [72.60453672108632, -5.889050418406293],
           [72.61758298573476, -5.874023737994912],
           [72.697233864641, -5.792052915868868],
           [72.68487424550038, -5.667024561906921],
           [72.62856931385976, -5.531034052292801],
           [72.48094052968007, -5.553587425032556]]],
         [[[71.78100203075167, -5.265004840441034],
           [71.74804304637667, -5.294405329632169],
           [71.76383589305635, -5.340896270048868],
           [71.7665824750876, -5.373711283082955],
           [71.76040266551729, -5.3860164577893785],
           [71.76383589305635, -5.43660177444672],
           [71.7995414594626, -5.441386652544458],
           [71.82632063426729, -5.419512613874888],
           [71.79610823192354, -5.423614056571237],
           [71.79610823192354, -5.413360397610425],
           [71.80709456004854, -5.403790159017131],
           [71.92245100536104, -5.3853328435036465],
           [71.94442366161104, -5.2793633930522885],
           [71.84760664500948, -5.289619298546896],
           [71.80846785106417, -5.271842287856811]]],
         [[[72.19239869176108, -4.976010111362473],
           [72.23634400426108, -5.060827757725262],
           [72.26518311558921, -5.076558846254171],
           [72.3307577615853, -5.077584773495865],
           [72.36989655553062, -4.9164944187053585],
           [72.3468939310189, -4.901443628438987],
           [72.26140656529624, -4.900759493544874],
           [72.32251801549155, -4.861420562169714],
           [72.40903534947593, -4.723887409659959],
           [72.31136449486583, -4.764262339979951],
           [72.27616944371421, -4.816263479725225],
           [72.14776673375327, -4.872367278902863],
           [72.16973939000327, -4.95104153565564]]],
         [[[72.66961731969077, -4.991101947052824],
           [72.7259222513314, -5.030775174492281],
           [72.73965516148765, -4.855647795717727],
           [72.66137757359702, -4.861121223246245]]],
         [[[72.9814733886298, 7.064232667357043],
           [73.02267194397342, 6.9954031236316],
           [73.04052465403512, 6.951783102917324],
           [73.11948853674745, 6.990632394835707],
           [73.1902127136412, 6.992677017770929],
           [73.24102426413668, 6.969504262986051],
           [73.25201057484631, 6.848169398911692],
           [73.1792035902626, 6.739046879093235],
           [73.10161786042725, 6.653801069633128],
           [73.07656688618184, 6.601632539115404],
           [73.13116154932719, 6.477159114928767],
           [73.30399287776989, 6.274815427201493],
           [73.37188674031422, 6.431565596526007],
           [73.27222750366143, 6.644264300262742],
           [73.3474538954149, 6.8331708265003845],
           [73.41131159783818, 6.992677079427074],
           [73.3220480383754, 7.109947071935619],
           [73.05219755142848, 7.153552140234996],
           [72.8599376713748, 7.246199154593067],
           [72.6573781550491, 7.148783031935427],
           [72.69102361570256, 6.970246595436578],
           [72.79127341682093, 6.845503186410212],
           [72.73908857187415, 6.703678759709614],
           [72.69445868940883, 6.5381141083943985],
           [72.50203547620735, 6.4934939374148275],
           [72.45946358867266, 6.335872557814679],
           [72.4828094030121, 6.163867040476306],
           [72.5981653812223, 6.02868060568022],
           [72.73755389831189, 6.099691843622509],
           [72.85290990302204, 6.184346800379574],
           [72.8680160449802, 6.262162792835661],
           [72.90612553601419, 6.3412548747224164],
           [72.89067945719697, 6.388953791568019],
           [72.84913610201185, 6.4448378900567125],
           [72.81033805247608, 6.405191519699388],
           [72.72656763645033, 6.402462090448499],
           [72.64760370591908, 6.296002860548297],
           [72.60709176500106, 6.194982885622728],
           [72.58374590552518, 6.178599440009616],
           [72.53362098431332, 6.212731061371572],
           [72.54117406385754, 6.2550511828273745],
           [72.60503187172326, 6.419520825659378],
           [72.70322178918056, 6.469329001765814],
           [72.82956405062811, 6.476151652773823],
           [72.87419582709872, 6.51026355650411],
           [72.85908968752065, 6.517767864529792],
           [72.85565647397527, 6.539597939986592],
           [72.85016333247951, 6.565519915616548],
           [72.83643047919266, 6.599625720524212],
           [72.86320954312748, 6.620088076385116],
           [72.89616838753058, 6.740798622716085],
           [72.9353070131648, 6.798074499265656],
           [72.93187379600568, 6.8839754940131215],
           [72.90303480781014, 6.92623853977908],
           [72.82475756103644, 6.993033685563839],
           [72.7636463821612, 7.052323417760152],
           [72.79935179246075, 7.104110533317157],
           [72.84879004878768, 7.10479190303995],
           [72.90715465662379, 7.11364963022863],
           [72.9607127670418, 7.117737756638231]]],
         [[[73.03501025240526, 8.380884273019994],
           [73.10230151217088, 8.349634628890383],
           [73.08994189303026, 8.302076025576719],
           [73.05972949068651, 8.242279897296612],
           [72.96634570162401, 8.235484309449424],
           [72.83725634615526, 8.2218927838777],
           [72.92102709810838, 8.102267354130591],
           [73.16547289888963, 8.107705649124126],
           [73.26297656099901, 8.28848679363447],
           [73.24512377779588, 8.503141269298094],
           [73.10779467623338, 8.539810789972956],
           [73.04462328951463, 8.497708448923209]]],
         [[[72.3019705579088, 10.219349309906503],
           [72.41320713017443, 10.030082651297162],
           [72.54504306767443, 10.232864070245974]]],
         [[[72.12893588994005, 9.87453074950338],
           [72.3019705579088, 9.923233218130521],
           [72.13442905400255, 10.059831933302098]]],
         [[[72.39398105595568, 10.973921429023482],
           [72.18386753056505, 10.759483706782845],
           [72.2360525891588, 10.68662093802307],
           [72.39398105595568, 10.72170520211932],
           [72.4997244641588, 10.570544171130882],
           [72.63293369267443, 10.601592277125762],
           [72.62881381962755, 10.632637234297222],
           [72.67962558720568, 10.704163577688568],
           [72.8348074719713, 10.979314095484108],
           [72.55053623173693, 11.182814823425264],
           [72.4557791516588, 11.026495721714456]]],
         [[[71.94537890571331, 10.996459785849844],
           [71.98176941214254, 11.015336088604537],
           [72.09712585745504, 11.063859708469515],
           [71.96117004690817, 11.11237529415959]]],
         [[[71.95705017386129, 11.27942257319617],
           [71.98726257620504, 11.233628889427926],
           [72.13832458792379, 11.256526641893506],
           [72.30037292776754, 11.182439110793444],
           [72.27840027151754, 11.387143576725533],
           [71.99824890433004, 11.384451047042944]]],
         [[[72.64644226370504, 11.337327658472587],
           [72.90874084768942, 11.294236615470934],
           [72.99113830862692, 11.428874524587675],
           [72.97465881643942, 11.515009281135061],
           [72.99937805472067, 11.60246289878074],
           [72.88814148245504, 11.597081926837859],
           [72.83183354899933, 11.714418409565544],
           [72.75075681027974, 11.79677555536155]]]]),
    twopluswdRC = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/cio_geo_clean3b"),
    twoRConly = ee.Image("projects/coral_atlas/central_indian_ocean/in_out/geo_map_clean2_morphNoDeep");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Viewing script for looking at reefs and classifications for each region. 
// From this region Timor Sea onwards the map_viewer script is going to be used from the very beginning
// in the workflow 

//Viewer for cio

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals');
var param_module = require('users/mitchest/global_reefs:Modules/reef_params');
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis');

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove ;      //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.cio;       //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################



// Choose which layers will be shown in the map viewer
var vars = {
  raw: true, // set to true if you want to view the raw classifications for benthic and geo
  geo_cleanup_stage: 2, // set to 0, 1, 2 or 3 - this controls the display of the geo clean stages (0 = cleanup not ready)
  benthic_cleanup_stage: 0, // set to 0, 1 or 2 - this controls the display of the benthic clean stages (0 = cleanup not ready)
};


// choose where to centre the map (link this dynamically to map app?)
Map.centerObject(center_map, 6);

// Add low-tide base map to viewer
// var low_tide_image = ee.Image(region_params.pixels);
// Map.addLayer(low_tide_image, {bands: ['b3','b2','b1'], min: 0, max: 3000}, sensor_params.sname + " from stack", false); // image data

//print (region_params.image[0])
var low_tide_image_dove = ee.Image(region_params.image);
Map.addLayer(low_tide_image_dove, {bands: ['b3','b2','b1'], min: 0, max: 3000}, sensor_params.sname + ' low tide', false); // image data

Map.addLayer(pixels, {color:'#00FFFF'}, "pixels", false)
Map.addLayer(segmentation, {color:'#00FF00'}, "segments", false)


// Load the raw classifications
if (vars.raw) {
// geo raw (test if more than one map exists for the region)
  if (ee.List(region_params.geo_map).length().getInfo() > 1) {
    var geo_map_raw = ee.Image(region_params.geo_map[0]).unmask(0, false)
                 .add(ee.Image(region_params.geo_map[1]).unmask(0, false))
                 .selfMask();
  } else {
    var geo_map_raw = ee.Image(region_params.geo_map);
  }

  // benthic raw (test if more than one map exists for the region)
  if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
    var benthic_map_raw = ee.Image(region_params.benthic_map[0]).unmask(0, false)
                     .add(ee.Image(region_params.benthic_map[1]).unmask(0, false))
                     .selfMask();
  } else {
      var benthic_map_raw = ee.Image(region_params.benthic_map);
  }

  // Add the raw region classification to the viewer
  Map.addLayer(geo_map_raw, map_palettes.geo, 'Geomorphic RAW', false);
  Map.addLayer(benthic_map_raw.updateMask(geo_map_raw.gt(2)), map_palettes.benthic, 'Benthic RAW', false);
  //Map.addLayer(benthic_subreg2_no_b4p.updateMask(geo_map_raw.gt(2)), map_palettes.benthic, 'Benthic RAW (no band4 outer reefs)', false); // test without band b4p
}

// Add geo clean stage 1 to the viewer
if (vars.geo_cleanup_stage == 1||vars.geo_cleanup_stage == 2) {
  Map.addLayer(ee.Image(region_params.geo_map_clean1), map_palettes.geo, 'Geomorphic - stage 1 clean', false);
  //Map.addLayer(ee.Image(region_params.geo_map_clean1), map_palettes.geo, 'timor_geo_clean1_10m_5m', false);
  //Map.addLayer(ee.Image(timor_geo_clean1_10m_4m), map_palettes.geo, 'timor_geo_clean1_10m_4m', false);
  //Map.addLayer(ee.Image(timor_geo_clean1_15m), map_palettes.geo, 'timor_geo_clean1_15m_5m', false);
  //Map.addLayer(ee.Image(timor_geo_clean1_15m_4m), map_palettes.geo, 'timor_geo_clean1_15m_4m', false);
  }

// Add geo clean stage 2 to the viewer
if (vars.geo_cleanup_stage == 2||vars.geo_cleanup_stage == 3) {
  Map.addLayer(ee.Image(region_params.geo_map_clean2), map_palettes.geo, 'Geomorphic - stage 2 clean', false);
  //Map.addLayer(ee.Image(region_params.geo_map_clean1), map_palettes.geo, 'timor_geo_clean2_10m_5m', false);
  //Map.addLayer(ee.Image(timor_geo_clean2_10m_4m), map_palettes.geo, 'timor_geo_clean2_10m_4m', false);
  //Map.addLayer(ee.Image(timor_geo_clean2_15m), map_palettes.geo, 'timor_geo_clean2_15m_5m', false);
  //Map.addLayer(ee.Image(timor_geo_clean2_15m_4m), map_palettes.geo, 'timor_geo_clean2_15m_4m', false);
}

// Add geo clean stage 3 to the viewer
if (vars.geo_cleanup_stage == 3) {
  var geo_map_clean3 = ee.Image(region_params.geo_map_clean3)
  Map.addLayer(geo_map_clean3.updateMask(geo_map_clean3.gt(2)), map_palettes.geo, 'Geomorphic - stage 3 clean', true);
}

// Add benthic clean stage 1 to the viewer
if (vars.benthic_cleanup_stage == 1||vars.benthic_cleanup_stage == 2) {
  Map.addLayer(ee.Image(region_params.benthic_map_clean1), map_palettes.benthic, 'Benthic - stage 1 clean', false);
  }

// Add geo clean stage 2 to the viewer
if (vars.benthic_cleanup_stage == 2) {
  Map.addLayer(ee.Image(region_params.benthic_map_clean2), map_palettes.benthic, 'Benthic - stage 2 clean', false);
}

// Geo Training Data - Needs more work + add flag to show
var geo_train = ee.FeatureCollection(region_params.geo_train_library);

var geo_buff = function(feature) {
  return feature.buffer(20);   // substitute in your value of Z here
};

var geo_train_buff = geo_train.map(geo_buff)

// Create an empty image into which to paint the features, cast to byte.
var empty = ee.Image().byte();

// Paint the interior of the polygons with different colors.
var geo_fill = empty.paint({
  featureCollection: geo_train_buff,
  color: 'class_num',
});

Map.addLayer(geo_fill, map_palettes.geo, 'Geo Training Data', false);
Map.addLayer(twopluswdRC, map_palettes.geo, 'Geo 2 + waves/deep/RC', true);
Map.addLayer(twoRConly, map_palettes.geo, 'Geo 2 + RC', true);



////////// UI SET UP //////////

//Generate title
var title = ui.Label({
  value: 'Coral Atlas map classes',
  style: {fontWeight: 'bold', fontSize: '14px'}
});

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false);
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false);
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
pkg_vis.add_lgds([title, geo_legend, benthic_legend]);//, mask_legend])
// generate the legend

