/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var eg_area = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[158.09700006133824, 6.98282032937242],
          [158.09700006133824, 6.954194253230618],
          [158.14678186065464, 6.954194253230618],
          [158.14678186065464, 6.98282032937242]]], null, false),
    export_small = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[157.9950896058224, 7.112454892191871],
          [157.9950896058224, 6.733464175742206],
          [158.4304228577755, 6.733464175742206],
          [158.4304228577755, 7.112454892191871]]], null, false),
    region_extent = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-85.98308517718672, 29.977841924871946],
          [-85.98308517718672, 16.51411805544282],
          [-70.33855392718672, 16.51411805544282],
          [-70.33855392718672, 29.977841924871946]]], null, false),
    reef_boundary = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-85.98308517718672, 29.977841924871946],
          [-85.98308517718672, 16.51411805544282],
          [-70.33855392718672, 16.51411805544282],
          [-70.33855392718672, 29.977841924871946]]], null, false),
    bahamas_extent = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-79.27871392650289, 27.537785351450797],
          [-79.27871392650289, 26.58390229138518],
          [-79.10842584056539, 26.588814612773167],
          [-79.09743951244039, 26.416758137113472],
          [-78.93813775462789, 26.426596871519802],
          [-78.92715142650289, 26.269076520676396],
          [-79.28420709056539, 26.274002276084023],
          [-79.27322076244039, 26.11627456764988],
          [-79.46548150462789, 26.11627456764988],
          [-79.44900201244039, 25.324457096008242],
          [-79.27871392650289, 25.324457096008242],
          [-79.27871392650289, 24.846857054564012],
          [-79.44900201244039, 24.846857054564012],
          [-79.44900201244039, 24.202172576991735],
          [-79.28970025462789, 24.197162138478074],
          [-79.28970025462789, 23.72530603032434],
          [-79.30068658275289, 23.554211197613927],
          [-79.10293267650289, 23.554211197613927],
          [-79.10293267650289, 23.23154632195048],
          [-78.92715142650289, 23.211353719210194],
          [-78.60854791087789, 22.756217121298516],
          [-77.90542291087789, 22.49255422896365],
          [-77.30117486400289, 21.97391165251205],
          [-77.18032525462789, 22.085937775799817],
          [-76.65298150462789, 22.096117570477723],
          [-76.64748834056539, 21.938248410859348],
          [-76.49917291087789, 21.943343707473968],
          [-76.44973443431539, 21.61177128135452],
          [-76.11465142650289, 21.627091467345146],
          [-76.12563775462789, 21.785304796161917],
          [-75.95534966869039, 21.78020385739581],
          [-75.92788384837789, 21.616878190401067],
          [-75.41152642650289, 21.6321978351743],
          [-75.41701959056539, 21.790405553431647],
          [-75.07644341869039, 21.785304796161917],
          [-74.35683892650289, 21.78020385739581],
          [-73.99429009837789, 21.448255160651303],
          [-73.83498834056539, 21.27943694004512],
          [-73.81301568431539, 20.80777207296826],
          [-73.29162148513431, 20.790438905513213],
          [-73.27514199294681, 20.65685755673189],
          [-72.96203164138431, 20.636296133854774],
          [-72.96752480544681, 20.970073280172112],
          [-72.77526406325931, 20.970073280172112],
          [-72.79174355544681, 21.2928708544558],
          [-72.59398964919681, 21.2928708544558],
          [-72.60497597732181, 21.620067996893418],
          [-72.60497597732181, 21.946526259459155],
          [-72.41820839919681, 21.941431076863278],
          [-72.41820839919681, 22.124742392441743],
          [-72.43468789138431, 22.42465361222859],
          [-72.59398964919681, 22.439886121983672],
          [-72.61046914138431, 22.607333163286974],
          [-73.29162148513431, 22.587047368621196],
          [-73.30260781325931, 22.744183956364978],
          [-73.48937539138431, 22.926438628296644],
          [-73.48937539138431, 23.254888313746864],
          [-74.19799355544681, 24.375535461842137],
          [-74.35180214919681, 24.370531859614733],
          [-74.36828164138431, 24.53054878186588],
          [-74.70336464919681, 24.535546033677694],
          [-74.70885781325931, 23.899313619306906],
          [-74.87914589919681, 23.894291348146655],
          [-74.89562539138431, 24.039857900931935],
          [-75.06042031325931, 24.049890908201313],
          [-75.07689980544681, 24.360524061336296],
          [-75.24169472732181, 24.370531859614733],
          [-75.25268105544681, 24.535546033677694],
          [-75.40648964919681, 24.54054308654121],
          [-75.41198281325931, 24.86990719887863],
          [-75.92284707107181, 24.84997056908839],
          [-75.93383339919681, 25.317627788565236],
          [-76.10412148513431, 25.3275584839267],
          [-76.10961464919681, 25.486338671947635],
          [-76.29638222732181, 25.501213589606753],
          [-76.31286171950931, 25.6449093879833],
          [-76.46667031325931, 25.649861337339598],
          [-76.48314980544681, 25.798324129951954],
          [-76.97753457107181, 25.798324129951954],
          [-76.99950722732181, 26.1341510278966],
          [-76.81823281325931, 26.119355376392768],
          [-76.82921914138431, 26.7440560464808],
          [-76.98302773513431, 26.739150404352177],
          [-76.98852089919681, 26.896025844601297],
          [-77.15880898513431, 26.90582334465163],
          [-77.18627480544681, 27.06246758775127],
          [-77.34557656325931, 27.052683714726534],
          [-77.34557656325931, 27.21889333897796],
          [-77.87292031325931, 27.204237729696594],
          [-77.87841347732181, 27.375099738773045],
          [-78.20800332107181, 27.37022161752178],
          [-78.21898964919681, 27.531085935309363]]]),
    fl_cari_extent = 
    /* color: #ef3dff */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-85.47133950271244, 29.907088075303662],
          [-85.47132877387638, 29.90709737543468],
          [-85.47132877387638, 29.907097375434653],
          [-85.46996621169681, 29.902177484893937],
          [-85.47133950271244, 29.907078775171804],
          [-85.45486001052494, 29.849782798284348],
          [-85.44936684646244, 29.724638924261964],
          [-85.41228798904056, 29.60650300155896],
          [-85.29045239204996, 29.56949113465488],
          [-85.12115029372806, 29.513328598891473],
          [-84.92614296950931, 29.530058536225535],
          [-84.86633326393839, 29.57080380334818],
          [-84.66904163624939, 29.68361169944839],
          [-84.49922200262868, 29.756434375071315],
          [-84.36799467426754, 29.7540366561001],
          [-83.93416101838685, 29.753055532415615],
          [-83.63799599685306, 29.577843108601403],
          [-83.50616005935306, 29.43202957940662],
          [-83.39080361404056, 29.31953840615644],
          [-83.21227578200931, 29.175752247140156],
          [-83.06425177740309, 29.02885925397843],
          [-82.95959023513431, 28.90921646491678],
          [-82.90740517654056, 28.7335527215074],
          [-82.86345986404056, 28.40791674725989],
          [-82.91015175857181, 28.209632389066947],
          [-82.8888283777562, 28.040512647551978],
          [-82.9177208900971, 27.87371323846384],
          [-82.81127480544681, 27.719606202212262],
          [-82.83736733474369, 27.606488976085636],
          [-82.75908974685306, 27.42379563855937],
          [-82.67119912185306, 27.28840757217842],
          [-82.59315851777721, 27.15954126733364],
          [-82.49299431649808, 26.97633103340992],
          [-82.37004558866798, 26.77567921703759],
          [-82.32798043056742, 26.57012133859653],
          [-82.0965449341725, 26.389142024341833],
          [-81.92542975812582, 26.33645564612232],
          [-81.94061129979731, 26.24608943584945],
          [-81.91507444963392, 26.175003549357047],
          [-81.75384372167231, 25.82902891653754],
          [-81.56432956151606, 25.759787274283223],
          [-81.43724436654503, 25.663960232452027],
          [-81.23199313573481, 25.383201096925024],
          [-81.25097369255313, 25.24671323302895],
          [-81.25945895604731, 25.23670811262743],
          [-81.26495212010981, 25.226769978519865],
          [-81.27319186620356, 25.211861254538636],
          [-81.27593844823481, 25.21683103220291],
          [-81.26495212010981, 25.214346168743205],
          [-81.26220553807856, 25.214346168743177],
          [-81.26322201881932, 25.219975224655286],
          [-81.27793191674596, 25.215666163790193],
          [-81.2552340099078, 25.224335696484506],
          [-81.25183737307192, 25.230504551694732],
          [-81.22646660720015, 25.217230260580223],
          [-81.10449263549593, 25.08352783948674],
          [-81.00855306909091, 24.855307240054398],
          [-81.10760701331476, 24.78643766448102],
          [-81.20132441655709, 24.91282160178854],
          [-81.4874251004763, 24.83641658853252],
          [-81.91802790020989, 24.656090122888568],
          [-82.09790392996926, 24.69945206865689],
          [-82.25434635714603, 24.521083026791512],
          [-82.34577825935892, 24.484629271943913],
          [-82.56722158985633, 24.458812187913257],
          [-82.85335946083744, 24.55879407842672],
          [-82.79060587955198, 24.616012656524628],
          [-82.72014761167411, 24.69059867929899],
          [-82.8541350947044, 24.759667254732427],
          [-82.98461255760851, 24.662933496588593],
          [-83.02551120214106, 24.54908370975728],
          [-82.4649456391705, 24.395603551036977],
          [-82.31671672682482, 24.42507911205079],
          [-82.16353762810789, 24.436789163944486],
          [-81.97056125487097, 24.404539217529752],
          [-81.66595309667231, 24.399095884817317],
          [-81.58355563573481, 24.391591806096166],
          [-81.33087008885981, 24.45183062391858],
          [-81.10839694432856, 24.516601520591202],
          [-81.04522555760981, 24.53159434458621],
          [-80.67443698339106, 24.651472416849487],
          [-80.53436129979731, 24.72633784226254],
          [-80.36956637792231, 24.711368355626856],
          [-80.34759372167231, 24.870949917015764],
          [-80.17181247167231, 24.880916942240432],
          [-80.19378512792231, 25.010415015215248],
          [-80.00701754979731, 25.03530286878476],
          [-80.08806788587965, 24.211017450581583],
          [-80.51104151869215, 24.110778248014654],
          [-80.62090479994215, 23.749268516703783],
          [-80.43413722181715, 23.47747512790226],
          [-80.47258937025465, 23.346411198580682],
          [-81.35149562025465, 23.35145451774019],
          [-81.36248194837965, 23.200071718292904],
          [-81.96672999525465, 23.220266026427893],
          [-81.93926417494215, 23.366583325190902],
          [-82.42815577650465, 23.371625877559268],
          [-82.40618312025465, 23.205120581446433],
          [-83.25762354994215, 23.210169253874778],
          [-83.30156886244215, 23.05862624568406],
          [-83.81243312025465, 23.038407586301112],
          [-83.81792628431715, 22.891731679615813],
          [-84.19146144056715, 22.881610240250595],
          [-84.18047511244215, 22.75913458676404],
          [-84.32329737806715, 22.70847057339254],
          [-84.48259913587965, 22.71860487750529],
          [-84.52654444837965, 22.55636613484518],
          [-84.72979151869215, 22.373619248254496],
          [-84.91655909681715, 22.18045915063246],
          [-85.11980616712965, 22.04814368781398],
          [-85.03740870619215, 21.823943335841964],
          [-84.92205226087965, 21.660667358207103],
          [-84.66936671400465, 21.7525329309246],
          [-84.50457179212965, 21.645350733112764],
          [-84.25188624525465, 21.732123428003423],
          [-84.09807765150465, 21.823943335841964],
          [-83.76299464369215, 21.869831219084233],
          [-83.40044581556715, 21.803543994006358],
          [-83.27410304212965, 21.558525855798006],
          [-83.08733546400465, 21.3182104331749],
          [-82.58745753431715, 21.3335615253175],
          [-82.09856593275465, 21.435861047511096],
          [-81.76348292494215, 21.51764908168643],
          [-81.14824854994215, 21.53808890748841],
          [-80.52202784681715, 21.486983952490537],
          [-80.51653468275465, 21.772939533397416],
          [-80.40667140150465, 21.864733293173153],
          [-80.29131495619215, 21.37448991601453],
          [-79.98369776869215, 21.30285773577692],
          [-79.83538233900465, 21.041617183707196],
          [-79.65153130923058, 19.502522248118726],
          [-80.6579950778204, 19.511042066999305],
          [-81.01494118481112, 19.185482627751345],
          [-81.45683167200424, 19.158197177516335],
          [-81.51339677273754, 19.35775299230689],
          [-81.436973747681, 19.52500105813073],
          [-80.93149440498227, 19.422114498185],
          [-80.24950921586188, 19.72111432448109],
          [-79.96172511244215, 19.7699833892658],
          [-79.64987309515884, 20.540792426843666],
          [-79.09380519056715, 20.672026619948713],
          [-78.88539233686099, 20.660453792272605],
          [-78.26466479779849, 20.274475807624444],
          [-78.07240405561099, 20.03210452112526],
          [-77.92958178998599, 19.85137184275122],
          [-77.808732180611, 18.6326225548415],
          [-76.98382062643326, 18.511650502348058],
          [-76.281632571236, 18.210477716227434],
          [-76.10305213992254, 18.38249346786331],
          [-76.04503463704114, 18.62740832722444],
          [-75.75780978342621, 18.648173607876835],
          [-75.63560477526352, 18.43963137506537],
          [-75.97335991629332, 18.074623662229033],
          [-75.99503643655535, 17.831627509780148],
          [-75.73130024679901, 17.73494614472808],
          [-75.62377343874034, 17.65541308560561],
          [-75.72928945977156, 17.500457848386546],
          [-75.90833930240417, 17.234101954833548],
          [-76.27253941238192, 17.22661418070071],
          [-76.33399497078507, 17.422199724019805],
          [-76.0954916828115, 17.478113606371554],
          [-75.95563962229883, 17.63862406758227],
          [-76.61947103992394, 17.7506384696158],
          [-76.7896139464079, 17.35155176920106],
          [-77.12707923845782, 17.33969262241924],
          [-77.21952234832906, 17.202270534481777],
          [-77.22737084931288, 17.02292107628064],
          [-77.41795993539347, 16.901261234927695],
          [-77.5466015844108, 16.77692045595952],
          [-77.67163450741238, 16.661754384632566],
          [-77.84982755757672, 16.74590376009118],
          [-78.13715746273867, 16.704032608884745],
          [-78.35302083809384, 16.519893909449777],
          [-78.40126544576115, 16.659087243967242],
          [-79.05712104452493, 16.650147800740736],
          [-79.0353214895427, 17.250765262417687],
          [-78.78710481798093, 17.26868381049317],
          [-78.73938160741265, 16.99908802993993],
          [-78.51804185682764, 16.94760069626169],
          [-78.33550079287625, 17.372887828946673],
          [-78.43570169068576, 17.53874437176847],
          [-78.3155338050581, 18.087325117442163],
          [-78.45804793478774, 18.26766514173918],
          [-78.26556007953, 18.51435212452836],
          [-77.72067516547001, 18.65613342090739],
          [-77.79051014157612, 19.255173828397343],
          [-76.99574389936099, 19.825536030878997],
          [-76.51783862592349, 19.866871311606186],
          [-75.71583667279849, 19.835870859975696],
          [-75.57301440717349, 19.81003252709572],
          [-75.50160327436099, 19.72732167373158],
          [-75.23243823529849, 19.815200529659812],
          [-74.88636889936099, 19.841038022386698],
          [-74.42494311811099, 19.964999394180733],
          [-74.39198413373599, 19.841038022386698],
          [-74.26014819623599, 19.835870859975696],
          [-74.21070971967349, 19.975325121036814],
          [-70.2995769071735, 20.670733217468822],
          [-70.35900587841186, 21.084794543815782],
          [-70.54440866432024, 21.160165346958976],
          [-70.81699445473078, 21.17471907260064],
          [-71.0302185154978, 21.084523702230555],
          [-70.98528365560537, 21.209475448729336],
          [-70.89005894072669, 21.366738670511072],
          [-70.9239549095249, 21.421762099267834],
          [-71.01380617907964, 21.398787368814897],
          [-70.96278846394387, 21.58312558805428],
          [-71.01467800926119, 21.660513331275844],
          [-71.14064314088807, 21.631332326421894],
          [-71.24982460293204, 21.531821308104895],
          [-71.31978678754427, 21.40397499255731],
          [-71.36609427779855, 21.22971159867547],
          [-71.49158422870886, 21.162367201305564],
          [-71.51780132871568, 21.375905249678667],
          [-71.4439645123249, 21.449901600036362],
          [-71.279912373502, 21.66983442095358],
          [-71.36968164215668, 21.803181818050813],
          [-71.50563464377535, 21.819662604173562],
          [-71.59669531074663, 21.903634811199673],
          [-71.71869483431877, 21.89284178516585],
          [-71.89232029563311, 22.054668715014024],
          [-72.04235875504217, 22.067135903535405],
          [-72.18861742207736, 21.95880095915916],
          [-72.34445401927022, 21.996251605678196],
          [-72.42532181194653, 21.93306792380226],
          [-72.46624395746241, 21.91854573024945],
          [-72.5312405234704, 21.822663702558373],
          [-72.58386653603436, 21.722110392544423],
          [-72.57304268792645, 21.602369635624612],
          [-72.4903847275913, 21.52137391089359],
          [-72.3794104362142, 21.436367887349327],
          [-72.2394872543194, 21.389552255953575],
          [-72.2726303824381, 21.357119862044694],
          [-72.19524535966057, 21.179808249521347],
          [-71.95166722256921, 20.938352317803513],
          [-71.60182018571226, 20.84590334772737],
          [-71.12236145935071, 20.96435752837541],
          [-71.21532430825569, 20.739666201309646],
          [-72.1414568053893, 20.431270192602035],
          [-73.32450130815756, 20.19058812077164],
          [-73.89370673878588, 20.088487730810943],
          [-74.04591479779849, 20.39809425329418],
          [-74.37001147748599, 20.44957271914411],
          [-74.63917651654849, 20.696428735919724],
          [-74.88636889936099, 20.78632874247081],
          [-75.10609546186099, 20.809437245234445],
          [-75.39723315717349, 20.829975163492286],
          [-75.50160327436099, 20.924926570950795],
          [-75.47688403607974, 21.053143713472434],
          [-75.54280200482974, 21.124897147008628],
          [-75.63343921186099, 21.186372473808962],
          [-75.82844653607974, 21.219660942713528],
          [-75.96852221967349, 21.176128359068073],
          [-76.20747485639224, 21.33994885453826],
          [-76.47663989545474, 21.406448781219726],
          [-76.67439380170474, 21.44991315499946],
          [-76.85566821576724, 21.59810577630913],
          [-76.90510669232974, 21.72063334585295],
          [-77.05067553998599, 21.809910642887534],
          [-77.17152514936099, 21.89658388986241],
          [-77.41871753217349, 22.008671064927952],
          [-77.64393725873599, 22.237664058950212],
          [-77.81422534467349, 22.3901186965936],
          [-77.89662280561099, 22.462476224972892],
          [-78.00923266889224, 22.51576814136303],
          [-78.21110644818911, 22.594399609989587],
          [-78.44731250287661, 22.683123126435568],
          [-78.60112109662661, 22.738862832379187],
          [-78.87303271772036, 22.845211879416357],
          [-79.14219775678286, 22.85027404941627],
          [-79.43333545209536, 22.890764622064786],
          [-79.80687060834536, 23.052605965137243],
          [-79.90025439740786, 23.087982893962458],
          [-79.86729541303286, 23.28995785881471],
          [-79.33995166303286, 23.28995785881471],
          [-79.37291064740786, 23.637644281609802],
          [-79.59263720990786, 23.803604162770824],
          [-79.64756885053286, 23.873947467447053],
          [-79.70250049115786, 24.154937810478643],
          [-79.82884326459536, 24.200039596773184],
          [-79.89476123334536, 24.31522720039631],
          [-79.99913135053286, 25.063870087910587],
          [-80.02659717084536, 26.030293692017096],
          [-79.89476123334536, 26.709465108161314],
          [-79.90025439740786, 27.535711763938604],
          [-80.12547412397036, 27.827577088731278],
          [-80.14744678022036, 28.21551240107926],
          [-80.82859912397036, 28.55380435593698],
          [-81.36692920209536, 28.77552109089948],
          [-81.34495654584536, 28.645439855914823],
          [-81.13621631147036, 28.60686622701456],
          [-81.00438037397036, 28.428279091088033],
          [-80.92198291303286, 28.012020645711768],
          [-80.86705127240786, 27.94895694993269],
          [-80.69127002240786, 27.914984308719248],
          [-80.70225635053286, 27.84214985455909],
          [-80.83409228803286, 27.847007008218167],
          [-80.82310595990786, 27.555193693093898],
          [-80.58689990522036, 27.51622638051895],
          [-80.32322803022036, 27.12090679371779],
          [-80.18040576459536, 26.655475015355478],
          [-80.19688525678286, 25.931533208927757],
          [-80.52647510053286, 25.674368795752923],
          [-80.59239306928286, 25.386875738985477],
          [-80.52098193647036, 25.32730855764189],
          [-80.72422900678286, 25.274760901067044],
          [-80.97691455365786, 25.274760901067044],
          [-81.19114795209536, 25.78036341927093],
          [-81.62510791303285, 26.012616761057423],
          [-81.85582080365785, 26.52490504780023],
          [-81.91624560834535, 26.706614123845924],
          [-82.02790281137382, 26.928820832561886],
          [-82.08832761606132, 27.036515190509405],
          [-82.40143796762382, 27.490625039730034],
          [-82.33551999887382, 27.9865356161812],
          [-82.62665769418632, 28.14649243908377],
          [-82.63619749703582, 28.305316017697038],
          [-82.50985472359832, 28.696338159631882],
          [-82.52633421578582, 29.191460264714678],
          [-82.64169066109832, 29.20584576620936],
          [-82.81197874703582, 29.378314141218517],
          [-83.09213011422332, 29.51225454421006],
          [-83.18551390328582, 29.521814948591928],
          [-83.23495237984832, 29.626919741398154],
          [-83.39425413766082, 29.70329080544689],
          [-83.65792601266082, 29.803439751151053],
          [-83.86666624703582, 29.83680048372292],
          [-84.11935179391082, 29.908250254810213],
          [-84.7290161624865, 29.908250254810213],
          [-85.415661670299, 29.908250254810213],
          [-85.46508675158945, 29.907191185515885],
          [-85.47131214294, 29.907078445032827],
          [-85.47134030799383, 29.907083601901718]]]),
    flor_cut = 
    /* color: #516ad6 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-81.88456494808199, 27.686438741723514],
          [-82.45585401058199, 28.26857738163213],
          [-82.34599072933199, 29.135841228878046],
          [-83.13700635433199, 29.900655091169604],
          [-85.07060010433199, 30.166968177621744],
          [-85.66386182308199, 29.862552012150267],
          [-85.64188916683199, 29.49984846966519],
          [-83.29081494808199, 28.982187416057798],
          [-83.26884229183199, 28.249223488196193],
          [-82.03837354183199, 25.604866468889778],
          [-81.42313916683199, 26.178108838339305]]]),
    baha_cut = /* color: #d63000 */ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -79.29383962962757,
                25.613236311678587
              ],
              [
                -79.16749769829556,
                25.42486175976503
              ],
              [
                -79.0737784745865,
                25.335496487197535
              ],
              [
                -79.13388979557742,
                25.246129537321924
              ],
              [
                -79.07965180985197,
                25.098761948028333
              ],
              [
                -79.12978043406684,
                24.966311532025223
              ],
              [
                -79.05013334357041,
                24.85731275564973
              ],
              [
                -79.0093917662247,
                24.80504136878269
              ],
              [
                -79.01261789968771,
                24.709133087896102
              ],
              [
                -79.11947775076524,
                24.511715383552925
              ],
              [
                -79.12911411802364,
                24.377938260788476
              ],
              [
                -79.07072717444885,
                24.078015677485684
              ],
              [
                -79.09853487353953,
                24.06924129539827
              ],
              [
                -79.0683193524099,
                23.96040065895691
              ],
              [
                -79.08376540794394,
                23.924330051445192
              ],
              [
                -79.03570078027863,
                23.780519269772704
              ],
              [
                -78.8935664352681,
                23.458409850741635
              ],
              [
                -78.88944750831008,
                23.37523993866856
              ],
              [
                -78.71916094292823,
                23.19233038049103
              ],
              [
                -78.5420073720251,
                23.09004169069458
              ],
              [
                -78.53784950244265,
                23.01900587343731
              ],
              [
                -78.46914706235445,
                22.968160532912645
              ],
              [
                -78.33934515008072,
                22.85986198373839
              ],
              [
                -78.1477894215126,
                22.852741713843148
              ],
              [
                -78.0900976275808,
                22.813426833375175
              ],
              [
                -78.02968567800852,
                22.79181168075074
              ],
              [
                -77.91716327211536,
                22.748523036852855
              ],
              [
                -77.56641080726712,
                22.48146189588708
              ],
              [
                -77.46876855091368,
                22.48804133611051
              ],
              [
                -77.0643585864356,
                22.557155078587694
              ],
              [
                -76.99624255807052,
                22.506982420364128
              ],
              [
                -76.88844848339889,
                22.472168559589132
              ],
              [
                -76.79093960357329,
                22.542994737465158
              ],
              [
                -76.71237981703824,
                22.588791713980836
              ],
              [
                -76.65076401716787,
                22.573870715739474
              ],
              [
                -76.63890453265496,
                22.546494727916567
              ],
              [
                -76.62079112265839,
                22.517838465583786
              ],
              [
                -76.62523823635566,
                22.45820127982391
              ],
              [
                -76.62146328817175,
                22.473435718989293
              ],
              [
                -76.60156291685057,
                22.475968572057972
              ],
              [
                -76.5716847101447,
                22.473121709357606
              ],
              [
                -76.62832336057427,
                22.434734815217265
              ],
              [
                -76.52602869367446,
                22.464548045737878
              ],
              [
                -76.46625079382895,
                22.434126294207825
              ],
              [
                -76.42577704565429,
                22.42266227054268
              ],
              [
                -76.37518071610208,
                22.41828552997334
              ],
              [
                -76.36031902209712,
                22.426617843838955
              ],
              [
                -76.34134227463483,
                22.447010818608536
              ],
              [
                -76.32236549336037,
                22.44963032168692
              ],
              [
                -76.28031117341915,
                22.487867019941792
              ],
              [
                -76.24513125954313,
                22.458844574797627
              ],
              [
                -76.21840878201036,
                22.378227476167858
              ],
              [
                -76.18788018688845,
                22.336313800960713
              ],
              [
                -76.16006117741813,
                22.30456288515698
              ],
              [
                -76.1339523994093,
                22.29947268603129
              ],
              [
                -76.11129387527585,
                22.291848904027265
              ],
              [
                -76.06597578662465,
                22.270246943971195
              ],
              [
                -76.05396492927328,
                22.265475742777006
              ],
              [
                -76.0385130359937,
                22.25245364522
              ],
              [
                -76.03335039560369,
                22.241652589708316
              ],
              [
                -75.98946573744654,
                22.219598381761354
              ],
              [
                -75.96344345506357,
                22.273817562985027
              ],
              [
                -75.85921025820953,
                22.17505184276757
              ],
              [
                -75.69467055128756,
                22.1395996809083
              ],
              [
                -75.70591348143824,
                22.16806197014962
              ],
              [
                -75.725397221678,
                22.18507135819601
              ],
              [
                -75.76306189429782,
                22.321047048463143
              ],
              [
                -75.81174449126407,
                22.358538302901238
              ],
              [
                -75.85138328274792,
                22.497625648251365
              ],
              [
                -75.8881175288394,
                22.490174229116462
              ],
              [
                -75.90255281331363,
                22.562869375866466
              ],
              [
                -75.9075718125019,
                22.630180327967093
              ],
              [
                -75.89880912422372,
                22.74502952597787
              ],
              [
                -75.91683988477334,
                22.753131279759433
              ],
              [
                -75.93555822655952,
                22.758698595532916
              ],
              [
                -75.92835961247421,
                22.803806703345945
              ],
              [
                -75.89265081666322,
                22.80348684200001
              ],
              [
                -75.88318375513091,
                22.837712962908668
              ],
              [
                -75.87673175136177,
                22.849767063141183
              ],
              [
                -75.87199724406305,
                22.86657796190353
              ],
              [
                -75.86293268003766,
                22.884757377798913
              ],
              [
                -75.85248914741837,
                22.912435617200998
              ],
              [
                -75.83875571511177,
                22.931088067999724
              ],
              [
                -75.82570608962021,
                22.935672145394893
              ],
              [
                -75.81574682282941,
                22.947924425146358
              ],
              [
                -75.8008095863576,
                22.95847646729592
              ],
              [
                -75.77625705281123,
                22.976615140038636
              ],
              [
                -75.75629902284513,
                22.993053099496482
              ],
              [
                -75.74486790413042,
                22.999102295554334
              ],
              [
                -75.73434466612514,
                23.000230404941963
              ],
              [
                -75.71420478356926,
                23.02790286719404
              ],
              [
                -75.6925188789962,
                23.04490424860725
              ],
              [
                -75.65023089247161,
                23.080857104180716
              ],
              [
                -75.6205723778923,
                23.10000871477906
              ],
              [
                -75.59361484460287,
                23.112168194501983
              ],
              [
                -75.56369614632067,
                23.127305336131762
              ],
              [
                -75.52827611729099,
                23.13052734188581
              ],
              [
                -75.48412682646993,
                23.146972952734835
              ],
              [
                -75.46125565382117,
                23.15426253886038
              ],
              [
                -75.430801059861,
                23.154150522284922
              ],
              [
                -75.41763262797058,
                23.154409428703048
              ],
              [
                -75.4003435466028,
                23.16098014909354
              ],
              [
                -75.37740442693246,
                23.16110779872338
              ],
              [
                -75.36991929576284,
                23.16025224023379
              ],
              [
                -75.35793734019073,
                23.150037695028807
              ],
              [
                -75.2779823268609,
                23.146123300194056
              ],
              [
                -75.21910423051119,
                23.13611969669342
              ],
              [
                -75.17765502822621,
                23.1222672986748
              ],
              [
                -75.14033761571459,
                23.1027247544187
              ],
              [
                -75.02642516637131,
                23.102247137485815
              ],
              [
                -75.09643163373467,
                23.188541729450655
              ],
              [
                -75.0980212428199,
                23.28603656623528
              ],
              [
                -75.13519808436958,
                23.37456756835173
              ],
              [
                -75.20252349845407,
                23.45809810218468
              ],
              [
                -75.26170472184072,
                23.574356320934047
              ],
              [
                -75.35277938712649,
                23.578426680074443
              ],
              [
                -75.46359053143135,
                23.362158390082417
              ],
              [
                -75.73212360066314,
                23.440962635443935
              ],
              [
                -75.8984351804286,
                23.399187428809114
              ],
              [
                -76.03438773374646,
                23.4432926382051
              ],
              [
                -76.00966840110826,
                23.547824765006265
              ],
              [
                -76.1950643958495,
                23.645983684738855
              ],
              [
                -76.12847103425753,
                23.693066746063042
              ],
              [
                -76.11952910671168,
                23.741398221642683
              ],
              [
                -76.24316114778128,
                23.848122674875025
              ],
              [
                -76.34832117590966,
                24.018814937617453
              ],
              [
                -76.3711785120749,
                24.04141909841271
              ],
              [
                -76.51641282070521,
                24.21334910165362
              ],
              [
                -76.60694408882752,
                24.283716269349572
              ],
              [
                -76.63025529686507,
                24.37283837312928
              ],
              [
                -76.67041396749026,
                24.36277710469882
              ],
              [
                -76.71263071517185,
                24.36709089021787
              ],
              [
                -76.73665577516725,
                24.393122693980303
              ],
              [
                -76.78689685925828,
                24.48208383029565
              ],
              [
                -76.8081265365844,
                24.588596026045714
              ],
              [
                -76.82902619261873,
                24.711979249679985
              ],
              [
                -76.85120238143915,
                24.729393167058422
              ],
              [
                -76.8411081914341,
                24.755538197879353
              ],
              [
                -76.81372187133907,
                24.843944754703447
              ],
              [
                -76.79341235074365,
                24.885891441837018
              ],
              [
                -76.80262214563619,
                24.89778647484796
              ],
              [
                -76.80084637147907,
                24.90874718077419
              ],
              [
                -76.76972330858476,
                24.940464377872892
              ],
              [
                -76.73722186533699,
                24.96034130711057
              ],
              [
                -76.68457630738776,
                24.955255751195242
              ],
              [
                -76.53673386278315,
                24.928788970217983
              ],
              [
                -76.4968253089957,
                24.888601657993622
              ],
              [
                -76.44457237366284,
                24.888260730635928
              ],
              [
                -76.39913380157222,
                24.872614577614087
              ],
              [
                -76.34412606391336,
                24.812748345256068
              ],
              [
                -76.32066673886811,
                24.795202269362576
              ],
              [
                -76.2326774911476,
                24.770032496953682
              ],
              [
                -76.18307713664694,
                24.78694750212571
              ],
              [
                -76.14011740116736,
                24.858033443516213
              ],
              [
                -76.15449131096067,
                24.898086207842635
              ],
              [
                -76.18189499393792,
                24.936868326435125
              ],
              [
                -76.13136733722766,
                25.015449689292282
              ],
              [
                -76.13573442619361,
                25.130059946464502
              ],
              [
                -76.2062725849322,
                25.17765836023851
              ],
              [
                -76.30643190290193,
                25.25880774708824
              ],
              [
                -76.3684750093761,
                25.348959359976725
              ],
              [
                -76.37837149440439,
                25.334860299508133
              ],
              [
                -76.4253789369348,
                25.334451418536975
              ],
              [
                -76.46487000239813,
                25.356409769110623
              ],
              [
                -76.51635545329131,
                25.374826820853386
              ],
              [
                -76.55800927710219,
                25.411862894763583
              ],
              [
                -76.60656818279986,
                25.438366431464026
              ],
              [
                -76.62405598195984,
                25.46781279083949
              ],
              [
                -76.63435134318713,
                25.54160729682101
              ],
              [
                -76.65359369407581,
                25.5553357691923
              ],
              [
                -76.73885505134804,
                25.556726611079743
              ],
              [
                -76.78172097772742,
                25.571878458955155
              ],
              [
                -76.88808474624975,
                25.519011710384312
              ],
              [
                -76.87692513665752,
                25.496282013850948
              ],
              [
                -76.844852544626,
                25.407388599142706
              ],
              [
                -76.84972285098446,
                25.357448734726532
              ],
              [
                -76.873762278288,
                25.31366092917117
              ],
              [
                -76.93411822680734,
                25.244135611510078
              ],
              [
                -77.05383732467108,
                25.169853254623355
              ],
              [
                -77.06117614900081,
                25.152987144215366
              ],
              [
                -77.10604054687307,
                25.137868685168257
              ],
              [
                -77.19774314168367,
                25.10281945388415
              ],
              [
                -77.26211562887661,
                25.09708689459541
              ],
              [
                -77.29626627882634,
                25.078901451633286
              ],
              [
                -77.24134019729611,
                25.03418141088845
              ],
              [
                -77.38404572055039,
                24.94461653009817
              ],
              [
                -77.52665962293604,
                24.994949134709447
              ],
              [
                -77.5072155339096,
                24.92324881397873
              ],
              [
                -77.53148048906793,
                24.896863253238095
              ],
              [
                -77.48936900878911,
                24.866530135459016
              ],
              [
                -77.4189530243023,
                24.73196607292518
              ],
              [
                -77.3826111887121,
                24.679066105151865
              ],
              [
                -77.33285967077458,
                24.63126375399531
              ],
              [
                -77.26358155784666,
                24.561631201581395
              ],
              [
                -77.21454811735599,
                24.534928424990355
              ],
              [
                -77.2245790282304,
                24.48448506875692
              ],
              [
                -77.20851069759601,
                24.412536032387152
              ],
              [
                -77.19040170698032,
                24.34183560600718
              ],
              [
                -77.18989765225339,
                24.287380529123855
              ],
              [
                -77.19635490801011,
                24.25128188721523
              ],
              [
                -77.19388407317403,
                24.213931073842012
              ],
              [
                -77.19718010752833,
                24.177427290532055
              ],
              [
                -77.18933060813451,
                24.128808208532877
              ],
              [
                -77.20344065625768,
                24.076429639268824
              ],
              [
                -77.16537598981905,
                24.021542519812964
              ],
              [
                -77.1424272108352,
                23.97684248736105
              ],
              [
                -77.10576166243592,
                23.95221242294577
              ],
              [
                -76.99122709167176,
                23.939350645424906
              ],
              [
                -76.82124086108236,
                23.958720782713524
              ],
              [
                -76.72133480462317,
                23.955628099188452
              ],
              [
                -76.63244159507735,
                23.922356253766004
              ],
              [
                -76.55211797041271,
                23.835800846958044
              ],
              [
                -76.53358323124867,
                23.75720766454311
              ],
              [
                -76.52945829561473,
                23.689328079220694
              ],
              [
                -76.52327892455114,
                23.617046715009323
              ],
              [
                -76.45876701487212,
                23.54845770424038
              ],
              [
                -76.4134150606329,
                23.411789859758976
              ],
              [
                -76.52118182938757,
                23.322325571183864
              ],
              [
                -76.65236646107765,
                23.276245909417135
              ],
              [
                -76.83638686165912,
                23.28759903352161
              ],
              [
                -77.01852290967302,
                23.311616521191212
              ],
              [
                -77.1992241769898,
                23.388000252966883
              ],
              [
                -77.3244708914498,
                23.450025218865317
              ],
              [
                -77.36308717216157,
                23.534589452833536
              ],
              [
                -77.35529189584243,
                23.5917927400538
              ],
              [
                -77.36466344449516,
                23.648996023297837
              ],
              [
                -77.40904624821948,
                23.752868088933347
              ],
              [
                -77.43651394124657,
                23.775532708348642
              ],
              [
                -77.45298904545544,
                23.81444623141142
              ],
              [
                -77.49418612401887,
                23.94504294673716
              ],
              [
                -77.51678070751827,
                23.949786460356286
              ],
              [
                -77.52169397680142,
                23.95787938110209
              ],
              [
                -77.52028811984421,
                23.963224579324812
              ],
              [
                -77.518905897206,
                23.978922437747407
              ],
              [
                -77.52165145101623,
                23.998368579757326
              ],
              [
                -77.52268054757074,
                24.009031204190357
              ],
              [
                -77.53361234204077,
                24.03804024398946
              ],
              [
                -77.54007486512147,
                24.072832797573405
              ],
              [
                -77.54928667536265,
                24.109662392647145
              ],
              [
                -77.56451276543821,
                24.13769331519345
              ],
              [
                -77.58039922418318,
                24.168780139135396
              ],
              [
                -77.59697561031217,
                24.202529157975462
              ],
              [
                -77.61777776633375,
                24.230565969851643
              ],
              [
                -77.69416703940989,
                24.379033395997816
              ],
              [
                -77.70798416097388,
                24.424984324202534
              ],
              [
                -77.70635639499191,
                24.47499873069849
              ],
              [
                -77.70704563429175,
                24.50904738796644
              ],
              [
                -77.69262447327655,
                24.551842444293342
              ],
              [
                -77.70086337599561,
                24.62901685988173
              ],
              [
                -77.71803054938052,
                24.670140411285296
              ],
              [
                -77.76118944563957,
                24.716928165752986
              ],
              [
                -77.79132968842927,
                24.74140851036787
              ],
              [
                -77.80798220317573,
                24.76674432376707
              ],
              [
                -77.83065433158272,
                24.79519772859279
              ],
              [
                -77.87053333632925,
                24.84679983423061
              ],
              [
                -77.88037972289466,
                24.860386222447413
              ],
              [
                -77.8864512278174,
                24.872726150946423
              ],
              [
                -77.89564955238008,
                24.910572877655135
              ],
              [
                -77.90823112135473,
                24.935511785894974
              ],
              [
                -77.93412810822264,
                25.023391052197425
              ],
              [
                -77.95561060352352,
                25.08112269168261
              ],
              [
                -77.99966436043714,
                25.150996479044007
              ],
              [
                -78.01947080207667,
                25.172853735499018
              ],
              [
                -78.02365889156614,
                25.17979515589559
              ],
              [
                -78.02980466633387,
                25.1835797347813
              ],
              [
                -78.0400370729178,
                25.180117595706434
              ],
              [
                -78.04822768792235,
                25.17458929931601
              ],
              [
                -78.05543419182192,
                25.210294381086687
              ],
              [
                -78.08931297346545,
                25.32782353003352
              ],
              [
                -78.13003303386674,
                25.37828249124023
              ],
              [
                -78.15430443279118,
                25.442382348408696
              ],
              [
                -78.15749267304767,
                25.461407394062082
              ],
              [
                -78.14694744051394,
                25.481051043475333
              ],
              [
                -78.09280518576514,
                25.477507453179204
              ],
              [
                -77.89041723797511,
                25.410615802146836
              ],
              [
                -77.75631012092266,
                25.410934854271673
              ],
              [
                -77.70475507906691,
                25.547968549086978
              ],
              [
                -77.76075905795815,
                25.678354845300806
              ],
              [
                -77.81239713180314,
                25.69650869021774
              ],
              [
                -77.87802375070802,
                25.749590136079522
              ],
              [
                -77.8997452929713,
                25.805132379919716
              ],
              [
                -77.94321357816395,
                25.814799198547703
              ],
              [
                -78.07452379131071,
                25.693079651220078
              ],
              [
                -78.27421427191906,
                25.613233163236654
              ],
              [
                -78.43488824104008,
                25.663994033837362
              ],
              [
                -78.52310065190518,
                25.680699918130106
              ],
              [
                -78.54817093143619,
                25.724610296662874
              ],
              [
                -78.51179201404707,
                25.769161139473773
              ],
              [
                -78.53786586553122,
                25.8371669673425
              ],
              [
                -78.66697283549077,
                25.90512149952874
              ],
              [
                -78.72873277873126,
                25.940319104865253
              ],
              [
                -78.85099256656522,
                25.992794664722446
              ],
              [
                -78.98073754125646,
                26.03853247181017
              ],
              [
                -79.058337129514,
                26.03730373968394
              ],
              [
                -79.21628549885543,
                25.9446443244236
              ],
              [
                -79.28220383163205,
                25.73947741392029
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -78.70035217816127,
                26.525198145307787
              ],
              [
                -78.39822815472377,
                26.64309610457356
              ],
              [
                -77.98624085003627,
                26.665188447064363
              ],
              [
                -77.90658997113002,
                26.653529132461
              ],
              [
                -77.72256897503627,
                26.370888375644842
              ],
              [
                -77.45889710003627,
                26.048079732121494
              ],
              [
                -77.34628723675502,
                26.00118595354751
              ],
              [
                -77.19247864300502,
                26.112219774133983
              ],
              [
                -77.19522522503627,
                26.19604212945165
              ],
              [
                -77.08810852581752,
                26.336432518305585
              ],
              [
                -77.07162903363002,
                26.496319225217068
              ],
              [
                -77.16104879521087,
                26.57259963239106
              ],
              [
                -77.28739156864837,
                26.606984849928565
              ],
              [
                -77.32859029911712,
                26.68063265000421
              ],
              [
                -77.37528219364837,
                26.73461082655807
              ],
              [
                -77.50986471317962,
                26.857193228065924
              ],
              [
                -77.61148824833587,
                26.896391598154995
              ],
              [
                -77.51673116825775,
                26.956387744342734
              ],
              [
                -77.56856516935413,
                26.982370796567512
              ],
              [
                -77.79344930790619,
                27.07200437676864
              ],
              [
                -77.85540902247645,
                27.076352688584414
              ],
              [
                -77.92425654928496,
                27.096560721750887
              ],
              [
                -78.10951116271737,
                27.163137197569416
              ],
              [
                -78.31147580675501,
                27.2666671464302
              ],
              [
                -78.38869738757867,
                27.28551024741577
              ],
              [
                -78.43851423718377,
                27.301828476086857
              ],
              [
                -78.47048177860931,
                27.29494771301166
              ],
              [
                -78.56627291608834,
                27.325724102633743
              ],
              [
                -78.65592668142155,
                27.366868060128372
              ],
              [
                -78.7830770543926,
                27.39725157961377
              ],
              [
                -78.84375072033875,
                27.382363952951923
              ],
              [
                -78.86202994393302,
                27.33304007372184
              ],
              [
                -78.87937522778437,
                27.32706884898237
              ],
              [
                -78.91954794071869,
                27.317522550744293
              ],
              [
                -78.93883614246784,
                27.305541321337806
              ],
              [
                -78.96224242344691,
                27.30819959595232
              ],
              [
                -78.97432341840333,
                27.324581269916223
              ],
              [
                -79.00014041879089,
                27.326319188730583
              ],
              [
                -79.02087124222369,
                27.32125148564952
              ],
              [
                -79.02786758344466,
                27.313742208576826
              ],
              [
                -79.04735625129713,
                27.317019605153884
              ],
              [
                -79.06409821163292,
                27.312973688372086
              ],
              [
                -79.0838362564143,
                27.29328179814753
              ],
              [
                -79.09258260868744,
                27.271147644109462
              ],
              [
                -79.16969534557099,
                27.23493805311014
              ],
              [
                -79.17698852311352,
                27.180487547806734
              ],
              [
                -79.17878370445369,
                27.1162635523077
              ],
              [
                -79.14888754032806,
                27.0083993597986
              ],
              [
                -79.10799703574868,
                27.005307771625283
              ],
              [
                -79.0822294234172,
                26.952037056681597
              ],
              [
                -79.06168356083587,
                26.816755680982844
              ],
              [
                -79.03896445157,
                26.781161995257616
              ],
              [
                -78.98333709232756,
                26.695315819763383
              ],
              [
                -78.91405477665619,
                26.63706343875239
              ],
              [
                -78.76779928349212,
                26.518544863217983
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -74.3790173049921,
                22.550615525827705
              ],
              [
                -74.37077755889835,
                22.536663622886795
              ],
              [
                -74.33369870147648,
                22.52905289969755
              ],
              [
                -74.3076061721796,
                22.513830195312597
              ],
              [
                -74.25679440460148,
                22.454191801708255
              ],
              [
                -74.24031491241398,
                22.388178993536233
              ],
              [
                -74.25542111358585,
                22.33991903816477
              ],
              [
                -74.26091427764835,
                22.30815995262425
              ],
              [
                -74.2691540237421,
                22.281476737317618
              ],
              [
                -74.28700680694523,
                22.233179881528773
              ],
              [
                -74.2746471878046,
                22.19400589859058
              ],
              [
                -74.29211447966232,
                22.163593525126988
              ],
              [
                -74.28571945256166,
                22.15877516160248
              ],
              [
                -74.27923975593087,
                22.167151335772395
              ],
              [
                -74.272415999454,
                22.174891263017123
              ],
              [
                -74.26151586279146,
                22.189891361670153
              ],
              [
                -74.24812550506535,
                22.197025783198814
              ],
              [
                -74.23456425628605,
                22.19925091977427
              ],
              [
                -74.22450139924409,
                22.197642462237667
              ],
              [
                -74.21109105855753,
                22.199927195102294
              ],
              [
                -74.20234720853246,
                22.203314484461245
              ],
              [
                -74.19102797630168,
                22.20662165193515
              ],
              [
                -74.17757267913761,
                22.22428127571006
              ],
              [
                -74.17143612070006,
                22.233020108677273
              ],
              [
                -74.1677021499628,
                22.234451064821418
              ],
              [
                -74.16281271748291,
                22.24350343203258
              ],
              [
                -74.15873629547242,
                22.2502546947073
              ],
              [
                -74.15283507359459,
                22.254266348406077
              ],
              [
                -74.14478535613956,
                22.26066664839905
              ],
              [
                -74.13903542048,
                22.27742583418662
              ],
              [
                -74.12830586395206,
                22.285130097552095
              ],
              [
                -74.1120486867664,
                22.28925948124984
              ],
              [
                -74.08856625518742,
                22.315465182325546
              ],
              [
                -74.02677007880006,
                22.31706066681255
              ],
              [
                -73.98934597930851,
                22.32626351726926
              ],
              [
                -73.93475766143742,
                22.418174279307713
              ],
              [
                -73.88703579864445,
                22.461330728513612
              ],
              [
                -73.86077160797062,
                22.503522203919886
              ],
              [
                -73.84343380889835,
                22.54316411676623
              ],
              [
                -73.84742602916656,
                22.567726618347702
              ],
              [
                -73.85759570406955,
                22.607349250695727
              ],
              [
                -73.86763806304874,
                22.644753939966662
              ],
              [
                -73.85098690948429,
                22.729486719237954
              ],
              [
                -73.8576396277441,
                22.739265024678186
              ],
              [
                -73.86806877701207,
                22.730201837745817
              ],
              [
                -73.8841193885079,
                22.72474133501391
              ],
              [
                -73.9138154784918,
                22.718882296750518
              ],
              [
                -73.94917721710148,
                22.70399320715875
              ],
              [
                -73.97595639190617,
                22.715552965680043
              ],
              [
                -74.00530474350522,
                22.72006860562729
              ],
              [
                -74.06316037139835,
                22.729170058780735
              ],
              [
                -74.16066403350773,
                22.712861054308306
              ],
              [
                -74.22658200225773,
                22.767322363069482
              ],
              [
                -74.25130124053898,
                22.80277386835006
              ],
              [
                -74.30073971710148,
                22.817964548916674
              ],
              [
                -74.33095211944523,
                22.80150790185211
              ],
              [
                -74.26778073272648,
                22.70526007762996
              ],
              [
                -74.2911266799921,
                22.652041432777043
              ],
              [
                -74.33095211944523,
                22.60387344671709
              ],
              [
                -74.36940426788273,
                22.56456601815248
              ]
            ]
          ],
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    wcmc = ee.FeatureCollection("projects/coral_atlas/global_datasets/wcmc_reefs_2018v4_dissolved"),
    flor_extent = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-85.74176953236804, 29.301352175756932],
          [-84.15973828236804, 29.435393954992637],
          [-83.34675000111804, 28.859691191651],
          [-83.28083203236804, 28.04833102109194],
          [-81.72077343861804, 25.180690862408717],
          [-83.63239453236804, 25.061324895096977],
          [-84.02790234486804, 24.462757252341],
          [-82.48981640736804, 24.082182665495107],
          [-81.17145703236804, 24.202487175151422],
          [-79.54548046986804, 24.88205782430196],
          [-79.54548046986804, 30.083931261534957],
          [-86.02741406361804, 30.045898424650336]]]),
    cuba_west_cut = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-83.96350550183911, 22.04822742875456],
          [-83.95835566053051, 22.032952286909733],
          [-83.96213221082348, 22.022449670722995],
          [-83.96110224256176, 22.01894862558832],
          [-83.94771265515942, 22.020221742920935],
          [-83.90891718396801, 22.042817671245732],
          [-83.89072107801098, 22.052045956570364],
          [-83.87149500379223, 22.055864381299664],
          [-83.84986567029614, 22.059046323150532],
          [-83.82926630506176, 22.060637267224266],
          [-83.81827997693676, 22.061273639841115],
          [-83.75545191297192, 22.044408797866403],
          [-83.73828577527661, 22.04345412404097],
          [-83.7211196375813, 22.035498258370172],
          [-83.71253656873364, 22.03581650158328],
          [-83.69640039930005, 22.030724524323933],
          [-83.68884729871411, 22.036452985863107],
          [-83.67992090711255, 22.03390703157303],
          [-83.66893457898755, 22.027541945541984],
          [-83.65588831433911, 22.013856041859114],
          [-83.63769220838208, 21.996985551259044],
          [-83.63219904431958, 21.986161915623683],
          [-83.61846613416333, 21.97979468545543],
          [-83.61022638806958, 21.96355695595898],
          [-83.57967066297192, 21.96037286974987],
          [-83.55014490613598, 21.955278183408367],
          [-83.53538202771801, 21.9600544572045],
          [-83.52817224988598, 21.956870292509606],
          [-83.52130579480786, 21.946998928613173],
          [-83.50413965711255, 21.94476981609939],
          [-83.48079370984692, 21.946043598957527],
          [-83.46568750867505, 21.949228006181862],
          [-83.45367121228833, 21.94668048610777],
          [-83.43959497937817, 21.939356111668953],
          [-83.42311548719067, 21.940311486247797],
          [-83.40217279920239, 21.94859113044251],
          [-83.34277796277661, 21.948909568668796],
          [-83.31393885144848, 21.95177548060968],
          [-83.2651870203938, 21.929483531994183],
          [-83.25111078748364, 21.917062217000808],
          [-83.26347040662426, 21.913558573253617],
          [-83.25179743299145, 21.906232494195095],
          [-83.24046778211255, 21.894446272266993],
          [-83.22501825818676, 21.87819880159592],
          [-83.21883844861645, 21.86609164004727],
          [-83.20338892469067, 21.83964348033821],
          [-83.20613550672192, 21.834544477143005],
          [-83.2215850306477, 21.854302101400844],
          [-83.20235895642895, 21.814784122683502],
          [-83.18381952771801, 21.755486697837267],
          [-83.18450617322583, 21.73507761458308],
          [-83.17832636365551, 21.72168257830501],
          [-83.18656610974926, 21.70318261998345],
          [-83.20441889295239, 21.703820589172608],
          [-83.20029901990551, 21.69106066827388],
          [-83.20373224744458, 21.675747271083114],
          [-83.20716547498364, 21.66107040547591],
          [-83.1996123743977, 21.641286180494696],
          [-83.1556670618977, 21.58894065063358],
          [-83.0622832728352, 21.51358094442707],
          [-82.90023493299145, 21.550627047806632],
          [-82.92632746228833, 21.67064244377647],
          [-83.01213732755136, 21.862592635686326],
          [-82.8548955062623, 21.9135644630992],
          [-82.82674304044198, 21.915475552112923],
          [-82.81713000333261, 21.907193981198887],
          [-82.78623095548105, 21.8899922574097],
          [-82.75327197110605, 21.876611704075522],
          [-82.73198596036386, 21.863229895934058],
          [-82.71516954055762, 21.846185172971573],
          [-82.801686874542, 21.816864763183354],
          [-82.7628868156001, 21.72856349654049],
          [-82.68839036575294, 21.723764569391214],
          [-82.63277207962014, 21.790726290614355],
          [-82.62384568801858, 21.832163118237432],
          [-82.60736619583108, 21.848097164777194],
          [-82.61491929641701, 21.86339217813221],
          [-82.61560594192483, 21.882508641081934],
          [-82.64307176223733, 21.881234289886308],
          [-82.64444505325295, 21.895251526835423],
          [-82.6581779634092, 21.91818585075719],
          [-82.65680467239358, 21.936658037129085],
          [-82.65337144485451, 21.947485445305734],
          [-82.65474473587014, 21.97168490554651],
          [-82.67191087356545, 21.97677900351667],
          [-82.70006333938576, 21.992060200687348],
          [-82.72272264114358, 21.986329944568695],
          [-82.76323472610451, 21.96213297935434],
          [-82.75568162551858, 21.97168490554651],
          [-82.7790275727842, 21.985693235159882],
          [-82.81129991165139, 21.995880242856607],
          [-82.94244920364358, 22.002246751181033],
          [-82.95000230422951, 22.029619479034597],
          [-82.93352281204201, 22.046167864597173],
          [-82.93352281204201, 22.06971415320571],
          [-82.94519578567483, 22.121883835081096],
          [-83.00630723587014, 22.132697086328623],
          [-82.97609483352639, 22.146689473532323],
          [-82.9438224946592, 22.140965483176963],
          [-82.93558274856545, 22.14859741860113],
          [-82.93352281204201, 22.156228940247704],
          [-82.89507066360451, 22.143509507619992],
          [-82.8339592134092, 22.108525144044595],
          [-82.83739244094826, 22.08180396644999],
          [-82.89095079055764, 22.072259463021783],
          [-82.89232408157326, 22.060168833119384],
          [-82.86829148879983, 22.067168797544277],
          [-82.85867845169045, 22.0690778185882],
          [-82.85799180618264, 22.060805207844712],
          [-82.84700547805764, 22.05825969175753],
          [-82.81061326614358, 22.06971415320571],
          [-82.76117478958108, 22.068441481105403],
          [-82.7570549165342, 22.04043979624092],
          [-82.69800340286233, 22.028346446170694],
          [-82.67259751907326, 22.01115938261365],
          [-82.66092454544045, 21.994606906897012],
          [-82.63757859817483, 21.975505496157265],
          [-82.62659227004983, 21.95321726882902],
          [-82.63689195266701, 21.93092554620236],
          [-82.63963853469826, 21.909267385690818],
          [-82.61835252395608, 21.899711267806243],
          [-82.58058702102639, 21.89461440959271],
          [-82.58058702102639, 21.85893130174744],
          [-82.57509385696389, 21.78243748642925],
          [-82.51741563430764, 21.736521590361857],
          [-82.44325791946389, 21.695695140110125],
          [-82.46523057571389, 21.66762023864263],
          [-82.42952500930764, 21.647198694649035],
          [-82.30592881790139, 21.585916736261964],
          [-82.10268174758889, 21.570592190661955],
          [-81.93788682571389, 21.64209285712888],
          [-81.90767442337014, 21.616560962105723],
          [-81.84450303665139, 21.619114354594224],
          [-81.67146836868264, 21.596132199231626],
          [-81.38033067337015, 21.626774261462746],
          [-81.2292686616514, 21.647198694649035],
          [-81.11665879837015, 21.652304351594637],
          [-81.11665879837015, 21.688038891258316],
          [-81.17159043899515, 21.7110064166322],
          [-81.1798301850889, 21.774785857225346],
          [-81.31990586868265, 21.84363581077332],
          [-81.42427598587015, 21.88951736915614],
          [-81.46822129837014, 21.940479569428263],
          [-81.51216661087014, 21.98887675363602],
          [-81.56984483352639, 21.996516906549857],
          [-81.61104356399514, 21.991423516991464],
          [-81.78133164993264, 22.016888635466103],
          [-82.14113389602639, 22.217901869105475],
          [-82.10542832962014, 22.276370738281383],
          [-81.93239366165139, 22.24586828632174],
          [-82.10268174758889, 22.309407555953907],
          [-82.19331895462014, 22.41608843752697],
          [-82.20430528274514, 22.52268744629164],
          [-82.35811387649514, 22.578492244699166],
          [-82.52840196243264, 22.52015032846833],
          [-82.64650498977639, 22.535372336526546],
          [-82.79756700149514, 22.586100240520597],
          [-82.87447129837014, 22.532835451677517],
          [-82.99806748977639, 22.497314172340584],
          [-83.05299913040139, 22.4211664397551],
          [-83.16286241165139, 22.314489449931102],
          [-83.27272569290139, 22.220444501199708],
          [-83.39357530227639, 22.131424982194133],
          [-83.49245225540139, 22.128880739465387],
          [-83.58858262649514, 22.146689473532323],
          [-83.86324082962014, 22.146689473532323],
          [-83.94563829055764, 22.11615883676264],
          [-83.96486436477639, 22.052532113014678]]]),
    cuba_east_cut = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-80.021700861283, 21.77429293155287],
          [-80.01758098661789, 21.744957796803508],
          [-79.9997281981424, 21.725822958877373],
          [-79.9750089528276, 21.71561667074816],
          [-79.95509622716938, 21.689459752237237],
          [-79.94067666715921, 21.666488784959974],
          [-79.88231178236758, 21.635216867328015],
          [-79.85553260001629, 21.625642477347032],
          [-79.8047208180846, 21.603299767467053],
          [-79.77107517864457, 21.58286912707266],
          [-79.70515719114286, 21.53561223524862],
          [-79.62962616376959, 21.468532138680935],
          [-79.578127736032, 21.416124284879984],
          [-79.55409513616617, 21.361779217474947],
          [-79.55375181270881, 21.29685839556794],
          [-79.52388272443005, 21.234469014574294],
          [-79.51152310162948, 21.1995520109237],
          [-79.49538692763429, 21.177144079982497],
          [-79.48646053355607, 21.169780732832923],
          [-79.48234065935232, 21.164658188207227],
          [-79.47822081628993, 21.162577071260284],
          [-79.47169765105413, 21.158574936199212],
          [-79.46998103681547, 21.15793457934329],
          [-79.46826442256635, 21.156013492131784],
          [-79.45521815431856, 21.14672788593418],
          [-79.44800837445852, 21.136481024172063],
          [-79.43084223208054, 21.13007637584466],
          [-79.40646630993807, 21.124952458024072],
          [-79.39410668754304, 21.13616079867454],
          [-79.37282067103979, 21.133919198483923],
          [-79.3535945916403, 21.1352001172157],
          [-79.34672813467567, 21.130076376360975],
          [-79.33505515782431, 21.119187839091243],
          [-79.32097892111003, 21.11790678221822],
          [-79.30449942440501, 21.105415897381803],
          [-79.29179647901584, 21.092923961384155],
          [-79.27186960943042, 21.060977753539476],
          [-79.28148264904814, 21.047200416089005],
          [-79.28216929470308, 21.04047148557173],
          [-79.24509042721868, 21.019962394224493],
          [-79.23410409613814, 21.01836000264861],
          [-79.22517770218592, 21.027653634377273],
          [-79.21831124524084, 21.022526185116487],
          [-79.20183174861407, 21.018680482481756],
          [-79.19599526022343, 21.016757593959337],
          [-79.19153206322667, 21.017078077122108],
          [-79.18603889768245, 21.01515516793587],
          [-79.17951576357939, 21.008104288769225],
          [-79.17230598379093, 21.002335139777692],
          [-79.16612617255015, 20.99880943893991],
          [-79.14690009312217, 20.98342358812234],
          [-79.12115087960528, 20.959700630211834],
          [-79.1081046114184, 20.94399011400078],
          [-79.09711828035728, 20.9439901140299],
          [-79.09299840620191, 20.941424975183306],
          [-79.08613194928267, 20.939180442647906],
          [-79.08269872081301, 20.93437061674994],
          [-79.07308568110551, 20.922826404424185],
          [-79.048023113371, 20.918978136045443],
          [-79.03257358529594, 20.906470581408463],
          [-79.01300418309042, 20.899093842261955],
          [-78.99034487526842, 20.883697740249143],
          [-78.98004518989877, 20.877282231774696],
          [-78.96631227608152, 20.874074374792315],
          [-78.96356569331508, 20.870545652991453],
          [-78.96493898469022, 20.865092010857303],
          [-78.96596895321483, 20.85514662466208],
          [-78.96081911052276, 20.842312896472713],
          [-78.95601259068813, 20.84006688149987],
          [-78.94708619672112, 20.848409053879916],
          [-78.94468293680045, 20.84327546407267],
          [-78.94124970834315, 20.836216492147766],
          [-78.93472657428764, 20.839425156794487],
          [-78.92030701479142, 20.840387742857466],
          [-78.91447052642194, 20.83621649216172],
          [-78.90897736089813, 20.831724246771568],
          [-78.90623077813498, 20.824343838407746],
          [-78.897991029852, 20.819209428004203],
          [-78.88151153328914, 20.81632124526309],
          [-78.86228545396817, 20.810865637951732],
          [-78.85267241431032, 20.80476796082892],
          [-78.82074338973757, 20.79181605031538],
          [-78.8190267755212, 20.782828778920898],
          [-78.81284696431807, 20.778013949134856],
          [-78.79739743631211, 20.7674207832357],
          [-78.76890164022008, 20.750405962524788],
          [-78.74624233245159, 20.758753094969116],
          [-78.70916346522874, 20.753616452523012],
          [-78.65285851864232, 20.768383828731096],
          [-78.62813927396259, 20.72728842192415],
          [-78.59037376110697, 20.71444381828795],
          [-78.54642843702459, 20.70994794958642],
          [-78.51346944396558, 20.706736533116533],
          [-78.48669026197167, 20.728572821794117],
          [-78.46334430846541, 20.740774082289835],
          [-78.44343158335911, 20.75939516192289],
          [-78.4338185434914, 20.793420862673738],
          [-78.4042927787968, 20.797914249704768],
          [-78.39399309354918, 20.78314976067055],
          [-78.35760087201963, 20.77929791709189],
          [-78.34730118677948, 20.765173650835507],
          [-78.3328816274511, 20.745269034814424],
          [-78.32189529654151, 20.729857210367292],
          [-78.32395523386532, 20.69710187484315],
          [-78.33356827368819, 20.673976200550538],
          [-78.35348099888469, 20.64377904683099],
          [-78.35622758184178, 20.616146610080744],
          [-78.35554093627198, 20.600078934402344],
          [-78.34867447944451, 20.59300862038659],
          [-78.34455460542308, 20.578867009001325],
          [-78.33494156583299, 20.573724279824944],
          [-78.32395523500419, 20.55122280310767],
          [-78.31640213261899, 20.528718012946932],
          [-78.31434219562837, 20.51971516978715],
          [-78.3047290965612, 20.51955460487756],
          [-78.29717606020698, 20.51746437287447],
          [-78.30404251338976, 20.50395892083311],
          [-78.28343515624258, 20.490624950541434],
          [-78.26386546307225, 20.478808590313893],
          [-78.24344016321929, 20.470324357081466],
          [-78.22533248491985, 20.46800960091109],
          [-78.21009912668976, 20.470710290901696],
          [-78.19321256420335, 20.4714162794408],
          [-78.1694599561364, 20.467616902579213],
          [-78.14886064647693, 20.46247046592309],
          [-78.13032113910506, 20.455072669232194],
          [-78.10010877604914, 20.446386618548203],
          [-78.07676284462443, 20.438665790241583],
          [-78.06783509161421, 20.429661300605122],
          [-78.05959509678759, 20.418726014846758],
          [-78.05170029680912, 20.410352759139535],
          [-78.03659408773764, 20.39587247979192],
          [-78.01084486611377, 20.374310439551266],
          [-77.98849485256257, 20.360154820546995],
          [-77.98043490003676, 20.357256864389722],
          [-77.96756851639394, 20.358864564011608],
          [-77.9589039797734, 20.359185736105236],
          [-77.95023940713011, 20.359506480818254],
          [-77.94144419106351, 20.361437558295854],
          [-77.9305889156258, 20.361436855918864],
          [-77.92158090170653, 20.352423488082955],
          [-77.91668113745628, 20.343404405601046],
          [-77.91388782238592, 20.335997811931076],
          [-77.90974436821355, 20.325855857639183],
          [-77.90594356244857, 20.319576085659282],
          [-77.89860169112372, 20.31007514148709],
          [-77.89057288609058, 20.307979971735502],
          [-77.88584502804768, 20.302179261057496],
          [-77.88071123186374, 20.298323585627028],
          [-77.87445003425623, 20.29647455841585],
          [-77.866815633322, 20.296234720639653],
          [-77.85368505144001, 20.29921836565651],
          [-77.84851420167264, 20.29738797430935],
          [-77.8440301315631, 20.29491344187811],
          [-77.83679984750434, 20.290184674495713],
          [-77.82957036507182, 20.27804910234439],
          [-77.81908733140348, 20.251582386007737],
          [-77.81202824873664, 20.2357440199339],
          [-77.80773947281831, 20.22152282125039],
          [-77.78440833135355, 20.204984295289773],
          [-77.77756172926337, 20.171045204605072],
          [-77.79819825024633, 20.14956985168561],
          [-77.79964584646487, 20.13884952162094],
          [-77.78469235406926, 20.136747895987984],
          [-77.76779257974786, 20.13052527029404],
          [-77.75501214611599, 20.142352453975462],
          [-77.74051393908142, 20.147086434915927],
          [-77.72464189668695, 20.14795130641985],
          [-77.70372479236805, 20.151409002189702],
          [-77.63305709640022, 20.13122451783677],
          [-77.59199098492783, 20.10114621317945],
          [-77.56589844585592, 20.07922078282237],
          [-77.52881958552251, 20.066966986820727],
          [-77.02825482885738, 20.310572159734246],
          [-76.94036417149802, 20.66819421022386],
          [-77.07769330914988, 20.670764004602106],
          [-78.70641688010475, 21.697698227118224],
          [-79.95885863570581, 21.78954017135712]]]),
    not_reef = 
    /* color: #ff2705 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-77.6908298412265, 17.939251182238742],
           [-78.014926520914, 17.68952937580111],
           [-78.03277930411713, 17.53507699179179],
           [-77.9215427318515, 17.456491321064465],
           [-77.57858671943977, 17.474591134093934],
           [-77.28195586006477, 17.401221189510085],
           [-77.18307890693977, 17.422187041414787],
           [-77.3067247743465, 17.71316271026819],
           [-77.28686729336015, 17.7779688370626],
           [-77.25082113799874, 17.88223019866347],
           [-77.36789419708077, 17.944952557251366],
           [-77.66301925382572, 17.959616187218742]]],
         [[[-83.01690576170415, 24.88280012027823],
           [-82.65435693357915, 24.773120340500828],
           [-82.48406884764165, 24.743190828730295],
           [-82.35346593519307, 24.716159508277997],
           [-82.04447545667745, 24.650025297105987],
           [-81.90714635511495, 24.62256306267632],
           [-81.75471105238057, 24.66812210467808],
           [-81.63248815198995, 24.73175208416546],
           [-81.57137670179463, 24.777271217309117],
           [-81.48976051950895, 24.803427689862843],
           [-81.4320822968527, 24.854528085146324],
           [-81.3277121796652, 24.880693287992354],
           [-81.2672873749777, 24.8582663103129],
           [-81.2233420624777, 24.822125402353972],
           [-81.2013694062277, 24.753553339479954],
           [-81.18900978708707, 24.731103346698955],
           [-80.88551247263395, 24.840820293007475],
           [-80.8553000702902, 24.889413791286202],
           [-80.77564919138395, 24.885676508121424],
           [-80.64381325388395, 24.99525643507288],
           [-80.57926857614957, 25.15447107454967],
           [-80.5641623749777, 25.33706310272239],
           [-80.89545732346333, 26.187344644893876],
           [-81.56562333908833, 27.55928025699306],
           [-83.21357255783833, 30.156868837088904],
           [-85.32294755783833, 30.422491697404215],
           [-86.48749833908833, 29.83336269866816],
           [-86.00409990158833, 28.779561312249186],
           [-84.57587724533833, 28.760300974368253],
           [-83.67499833908833, 27.129898289111296],
           [-83.19159990158833, 25.276847798301855]]],
         [[[-79.85915135145622, 27.093741751695887],
           [-79.71083592176872, 27.8443089332789],
           [-80.21071385145622, 28.666863837682545],
           [-80.77650974989372, 28.974878094316022],
           [-81.64442967176872, 29.066144120228167],
           [-81.67189549208122, 28.541473334329403],
           [-81.34779881239372, 27.751983553925765],
           [-81.16652439833122, 26.84405635406664],
           [-80.97975682020622, 26.47095321618231],
           [-80.77101658583122, 26.06703365755045],
           [-80.22170017958122, 26.534859871299503],
           [-80.21071385145622, 26.79503360454802],
           [-80.26564549208122, 27.030149059506883],
           [-79.92506932020622, 27.088851286645333]]]]),
    waves = ee.Image("users/danleeharris/reefwave/nth_cari_d2");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
///////////////////////////////
// Global coral atlas project - North Caribbean and Bahamas
// Contact: mitchell.lyons@gmail.com
// Description:
// - Developing a process to combine OBIA and supervised classification
// - This script loads the raw classification data (from *_classification script)
// - Then applied some cleanup and object-based relational rules
///////////////////////////////

// Table of contents
// 1. Setting constants
// 2. Data loads & vis
// 3. OBIA clean up rules
// 4. Export

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')
var param_module = require('users/mitchest/global_reefs:Modules/reef_params')

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.nth_cari  //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// 1. Setting constants

// These will get written to the asset metadata 

var vars = {
  
  // analysis type
  geomorphic: true, // map geomorphic zonation (when set to true) or benthic habitat (when set to false)

  // analysis parameters
  image_data_scale: ee.Number(sensor_params.pixel),
  small_object_geo: ee.Number(400).int(), // smallest object szie in pixels (geomorphic)
  small_object_benthic: ee.Number(130).int(), // smallest object szie in pixels (benthic)
  smooth_radius: ee.Number(3), // radius in pixels for initial smooth 
  
  //############
  /* This is a stop-gap until we figure out how to chain together vectorisations in GEE
  - GEOMORPHIC: for large regions, the first pass does the small object filter, then the second pass does the OBIA clean
  -           : *in an ideal world* for smaller regions, can do both at once, but not handling that at present
  - BENTHIC : can do both at once
            : production run should have obia_2nd_pass and obia_clean set to true (so it uses best geo map) */
  obia_2nd_pass: true,
  obia_clean: true, // run object-based relationship rules + small object clean up
  fast_clean: true, // run a faster (but less precise) version of the OBIA clean; only applies to geomorphic (`obia_clean: true` also)
  smooth_output: false, // run smoother over final output (includes noise removal) (should be false for second pass)
  //############
  
  // apply any manual touch ups
  manual_clean: true,
  
  // results/layers to show
  export_small_area: false,
  show_eg_area: false, // contrain the map add toe the corresponding example_area polygon geomtery (you can change that)
                              // - you can either set this, or have it false and just navigate to the area you want to see (keeping in mind ALL tiles in the zoom area will calcualte)
  reproject_display: true,
  //reproject_res: ee.Number(sensor_params.pixel).pow(2),
  
  // export options
  do_export: false, // export the results?
  geomorph_output_name: region_params.sname + '_geo-clean',
  benthic_output_name: region_params.sname + '_benthic-clean',
  asset_output: region_params.asset // asset path

}

/*
############################
MANUAL ADDITION
############################
*/

// This can be hand drawn or imported from elsewhere, or could just be a big box
reef_boundary = ee.FeatureCollection([ee.Feature(fl_cari_extent),ee.Feature(bahamas_extent)]).geometry()
Map.addLayer(reef_boundary, {}, "Manual reef outline", false)

if (vars.manual_clean) {
  
  vars.obia_2nd_pass = true
  vars.obia_clean = false
  vars.fast_clean = false
  vars.smooth_output = false
  vars.do_export = false
  
  print("Doing manual clean ups - make sure this is what you want to do")
  print("Export the manual map, check 'manual' layer and ignore the 'final' map layer")
  
  var depth = ee.Image(region_params.pixels).select('depth')
  var depth_cont = depth.lt(900)
  Map.addLayer(depth_cont, {}, "depth contour", false)
  
  Map.addLayer(waves.lt(0.4), {}, "0.4m Hs95 threshold", false)
  
  var baha_img = ee.Image().byte().paint(ee.Feature(baha_cut, {zone: 1}), "zone").clip(baha_cut)
  var baha_extent = ee.Image().byte().paint(ee.Feature(bahamas_extent, {zone: 1}), "zone").clip(bahamas_extent)
  var cuba_west = ee.Image().byte().paint(ee.Feature(cuba_west_cut, {zone: 1}), "zone").clip(cuba_west_cut)
  var cuba_east = ee.Image().byte().paint(ee.Feature(cuba_east_cut, {zone: 1}), "zone").clip(cuba_east_cut)
  
  // "not reef" extents to be moved over to _datagen script
  var wcmc_buff = wcmc.filterBounds(not_reef).geometry(100).buffer(2000)
  var not_reef_img = ee.Image().byte().paint(ee.Feature(wcmc_buff, {zone: 1}), "zone").clip(not_reef).unmask(0).uint8()
  
  // define the manually edited map
  var man_geo = ee.Image(region_params.geo_map_clean)
  
  // "NOT REEF" CLEAN
  // remove
  man_geo = man_geo.where({
    test: not_reef_img.eq(0),
                  //.and(man_geo.eq(15)),
    value: ee.Image(0)
  })
  
  
  // WAVE clean (to be integrated into RF classifier)
  // remove
  man_geo = man_geo.where({
    test: waves.lte(0.4)
               .and(man_geo.eq(22)),
    value: ee.Image(21)
  })
  
  //BAHAMAS clean
  // deep -> deep lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(depth_cont)
                     .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // deep -> deep lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(baha_img.eq(1))
                     .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // slope -> shallow lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(depth_cont)
                     .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  })
  
  // slope -> shallow lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(baha_img.eq(1))
                     .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  })
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: baha_img.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  })
  

  // CUBA WEST CLEAN
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24)).or(man_geo.eq(13)).or(man_geo.eq(14))),
    value: ee.Image(11)
  })
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  })
  
  
  //CUBA EAST
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24)).or(man_geo.eq(13)).or(man_geo.eq(14))),
    value: ee.Image(11)
  })
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  })
  
  
  
  // Add the manual layer to the map
  Map.addLayer(man_geo, map_palettes.geo, 'Manually cleaned GEO', false)
  // Export
  Export.image.toAsset({
    image: man_geo,
    description: vars.geomorph_output_name,
    assetId: vars.asset_output + 'in_out/' + vars.geomorph_output_name,
    region: reef_boundary,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  })
  
  
}
/*
############################
*/

/* TRIAL #######
    Looks like with the sentinel/ls8 depth we can try to retain full resolution,
    because theres more (good) data either side of the depth threshold/marginal areas
  ##############
  
  Used to be --> output resolution (bigger for geomorphic) - relates back to object size and the min mapping unit defined in classification stage
*/
//if (vars.geomorphic) vars.image_data_scale = ee.Number(sensor_params.pixel)//.pow(2)



// 2. Data loads & vis

// load input data
if (vars.obia_2nd_pass) {
  // if it's 2nd pass, you want to make sure you're loading the latest geo clean map
  // - could change the path in reef_params to a list, check if it length is > 1, then take last element??
  
  // OR run a separate operation that joins the east/west clean1 maps via EPSG:3832, load via one ee.Image(), then save here as EPSG:4326
  //var geo_map = geo1.unmask(0, false).add(geo2.unmask(0,false)).selfMask().clip(swp_extent)
  
  var geo_map = ee.Image(region_params.geo_map_clean)
} else {
  //print(ee.List(region_params.geo_map).length())
  if (ee.List(region_params.geo_map).length().getInfo() > 1) {
    var geo_map = ee.Image(region_params.geo_map[0]).unmask(0, false)
             .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
             .selfMask().clip(reef_boundary)
  } else {
    var geo_map = ee.Image(region_params.geo_map).clip(reef_boundary)
  }
}

//var benthic_map = (vars.obia_2nd_pass) ? ee.Image(region_params.benthic_map_clean) : ee.ImageCollection(region_params.benthic_map).mosaic()
//var benthic_map = ee.Image(region_params.benthic_map)

if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
    var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
             .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
             .selfMask().clip(reef_boundary)
} else {
    var benthic_map = ee.Image(region_params.benthic_map)
}


var depth = ee.Image(region_params.pixels).select('depth')
var image = ee.Image(region_params.image)

var display_pal = (vars.geomorphic) ? map_palettes.geo : map_palettes.benthic
//Map.centerObject(eg_area, 11)
Map.addLayer(depth, {min:0, max:2500}, 'Depth data', false)
Map.addLayer(image, {bands: ['b3','b2','b1'], min:200, max:1200}, 'Dove low tide', false)

if (vars.geomorphic) {
  if (vars.obia_2nd_pass) {
    if (ee.List(region_params.geo_map).length().getInfo() > 1) {
      var geo_map_display = ee.Image(region_params.geo_map[0]).unmask(0, false)
                       .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
                       .selfMask().clip(reef_boundary)
    } else {
    var geo_map_display = ee.Image(region_params.geo_map).clip(reef_boundary)
    }
    Map.addLayer(geo_map_display, display_pal, 'Raw GEO classification', false)
  } else {
    Map.addLayer(geo_map, display_pal, 'Raw GEO classification', false)
  }
}
if (!vars.geomorphic) {
  Map.addLayer(geo_map, map_palettes.geo, 'Clean GEO classification', false)
  Map.addLayer(benthic_map, display_pal, 'Raw BENTHIC classification', false)
}

// 3. Object-based re-classificaiton and cleaning

/*

// if we want to retain the land/waves flags, need to add them in before makign the mask

######## Not that straight forwards - the land and bright masks are a LOT of not land and not breakign waves... =(

// add in land, for geomorphic clean up rules
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-2).and(globcover.select('landcover').neq(210)),
    value: ee.Image(1)
  })
  
  // change -3 to reef rim, hope that clouds have been handleded by masking
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-3),
    value: ee.Image(15)
  })
  
  // remask
  geo_map = geo_map.updateMask(geo_map.gt(0))

*/

/* OUTPUT EXTENT
  - to the mapping extent just so it doesn't balloon out
  - to the 'reef boundary' extent for noise/deep removal
*/  
var class_extent_mask = geo_map.gt(0).clip(reef_boundary)


/*

########
Initial small object clean
 - this was originally at the end, but we needed to massively reduce the number of objects to 
   iterate through in the OBIA cleaning, so this happens first now
 - future collabs with google might fix this, but need to change the parallel serialisation of vector procesing
 
 - includes a possible special case for:
      - geomorphic to clean up turbid areas over size threshold; fix shallow vs. deep lagoon
      - benthic to allow breaking waves (temporal class) to grow into surrounding class
########

*/

if (vars.geomorphic && !vars.obia_2nd_pass) {
  
  // make a smooth map with masked area as a value
  var smooth_map = geo_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 2
                      })
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = geo_map.where({
    test: geo_map.connectedPixelCount(vars.small_object_geo, false).lt(vars.small_object_geo), 
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask)
  
  // shallow lagoon > 5m == deep lagoon
  clean_map = clean_map.where({
    test: clean_map.eq(11)
                   .and(depth.gt(500)),
    value: ee.Image(12)
  })
  
  /*// deep lagoon == deep (to hard to differentiate deep water vs. deep lagoon effectively over large areas)
  clean_map = clean_map.where({
    test: clean_map.eq(12),
    value: ee.Image(2)
  })*/
  
  // deep water in depth data == deep (s2 + ls8 data should be good enough for this)
  clean_map = clean_map.where({
    test: depth.gt(2000),
    value: ee.Image(2)
  })
  
  
  /*//CLEAN UP SMALL (but slightly larger) TURBID AREAS
  var smooth_noturbid = clean_map
                          .updateMask(clean_map.neq(3))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(1.5),
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          })
  
  clean_map = clean_map.where({
    test: clean_map.eq(3).connectedPixelCount(vars.small_object_geo.multiply(10), false).lt(vars.small_object_geo.multiply(10)), 
    value: smooth_noturbid
  }).updateMask(class_extent_mask)*/
}


if (!vars.geomorphic) {
  
  // make a smooth map with masked area as a value, and without temporal class (basically breaking waves)
  var smooth_map = benthic_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 1
                      })
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = benthic_map.where({
    test: benthic_map.connectedPixelCount(vars.small_object_benthic, false).lt(vars.small_object_benthic),
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask)
  
  
  /*// CLEAN UP ALL TEMPORAL AREAS
  var smooth_notemp = benthic_map
                          .updateMask(benthic_map.neq(2))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(2),
                            kernelType: 'circle', units: 'pixels', iterations: 3
                          })
  
  
  clean_map = clean_map1.where({
    test: benthic_map.eq(2), 
    value: smooth_notemp
  }).updateMask(clean_map1.gte(0))
  
  // this catches any left over unmasked temporal, and assigned it back to temporal
  clean_map = clean_map.where({
    test: clean_map.unmask(99).eq(99).and(clean_map1.eq(2)),
    value: ee.Image(2)
  })*/
  
}



if (vars.geomorphic && vars.obia_2nd_pass) {
  var clean_map = geo_map
}

Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Initial smooth classification', false)

if (vars.obia_clean) {
  
  if (vars.geomorphic && !vars.fast_clean) { // SHOULD TRY TO PUT THIS OUT TO A MODULE TO KEEP THE RULES THE SAME EVERYWEHRE?
    
    // #########
    // THE PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_properties = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
      // reduce the classes in the buffer zone
      var diff_classes = ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.frequencyHistogram(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        }).get('classification')
      )
      // calculate the percentages
      var diff_sum = diff_classes.toArray().reduce(ee.Reducer.sum(), [0]).get([0])
      var diff_percs = diff_classes.map(function(k,v){return(ee.Number(v).divide(diff_sum).multiply(100).toUint8())})
      
      /* NOW, we can try to do the class logic right here (see /users/mitchest/global_reefs/obia_dev),
         or we can return the neighbour % and do image logic via (painted) rasters */
      
      return(f.set(diff_percs))
    }
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours = function() {
      // reduce map to vectors
      var map_fc = clean_map
            .updateMask(segment_id).updateMask(clean_map.eq(classn)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            })
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_properties))
    }
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
    //Map.addLayer(segment_id.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))))
    Map.addLayer(clean_map.updateMask(segment_id).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    //var classn = ee.Number(15) // one class
    var classn = clean_map.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)), // shallow L 
      value: ee.Image(99) // 99 ensures it's ignored in logic
    })
    
    // Minimum size of object to reclass based on neighbourhood
    var max_size = ee.Number(1000).divide(vars.image_data_scale).pow(2) // the first number is the square dimension of the desired min size
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours()
    
    // #########
    // REEF RIM
    // #########
    
    var focus_class = ee.Number(15) //RR
    
    // start the object-based neighbourhood rules
    // paint out to rasters (only paint the layers needed)
    var objsize = ee.Image(30000).paint(map_fc_neighbours, 'count').rename('count')
    //var nb24 = ee.Image().byte().paint(map_fc_neighbours, '24').unmask(0).rename('nb24') //OCL
    var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22') //SL ex
    var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21') //Sl sh
    var nb16 = ee.Image().byte().paint(map_fc_neighbours, '16').unmask(0).rename('nb16') //TRF
    var nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    var nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    var nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    //var nb3 = ee.Image().byte().paint(map_fc_neighbours, '3').unmask(0).rename('nb3') //Turbid
    
    // RR surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // RR surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    })
    
    // RR with decent border to TRF --> TRF (often dark, probably seagrass)
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(40)),
      value: ee.Image(16)
    })
    
    /*// RR surrounded by OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb24.gt(75)),
      value: ee.Image(24)
    })*/
    
    /* with 2nd/3rd pass method, we don't really need this
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb13.add(nb14).gt(75))
              .and(nb21.add(nb22).lte(0)), // to not get rid of complex reef rims (if touching slope, it's probably RR)
      value: ee.Image(13) // could try assigning to a place-holder, then deal with at the end?
    })*/
    
    /*// small RR objects touching OCL + stuff --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(objsize.lte(max_size))
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb24.gt(1)),
      value: ee.Image(14)
    })*/
    
    // ####
    // ORF
    // ####
    
    focus_class = ee.Number(14) // ORF
    
    //classn = ee.Number(14)
    //map_fc_neighbours = reduce_neighbours()
    //var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22') //SL ex
    //var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21') //Sl sh
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    //var nb1 = ee.Image().byte().paint(map_fc_neighbours, '1').unmask(0).rename('nb1') //Land
    
    // ORF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // ORF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })
    
    // ORF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    })
    
    // ORF touching slope and RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb21.gt(0).or(nb22.gt(0)))
              .and(nb15.gt(0)),
      value: ee.Image(15)
    })
    
    /*// ORF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // IRF
    // ####
    
    focus_class = ee.Number(13) // IRF
    
    //classn = ee.Number(13)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    
    // IRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // IRF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })
    
    // IRF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    })
    
    /*// IRF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // TRF
    // ####
    
    focus_class = ee.Number(16) // TRF
    
    //classn = ee.Number(16)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    
    // TRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // TRF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // TRF surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    })
    
    /*// TRF not touching land --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.lt(10)),
      value: ee.Image(13)
    })*/
    
    
    // ####
    // LAGOONS
    // ####
    
    var nb11 = ee.Image().byte().paint(map_fc_neighbours, '11').unmask(0).rename('nb11') // shallow lag
    //var nb12 = ee.Image().byte().paint(map_fc_neighbours, '12').unmask(0).rename('nb12') //deep lag
    
    // DL touching SL --> SL
    /* 
    This is a stop-gap until we have better depth product - below are the rules we want,
    but too much band-aiding is required to make it work, so for the moment just err on the side
    of shallow lagoon when it's mixed.
    */
    /*clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(0)),
      value: ee.Image(11)
    })*/
    
    /*// SL sourrounded by DL --> DL
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(nb12.gt(75)),
      value: ee.Image(12)
    })*/
    
    /*// DL sourrounded by SL --> SL
    clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(75)),
      value: ee.Image(11)
    })*/
    
    /*// DL/SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    })*/
    
    // SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    })
    
    /*// DL/SL touching OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(nb24.gt(0)),
      value: ee.Image(24)
    })*/
    
    
    /*// ####
    // Turbid
    // ####
    
    focus_class = ee.Number(3) // turbid
    
    // Turb surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // Turb surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // Turb surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })*/
  
  } else if (vars.geomorphic && vars.fast_clean) {
    print("Executing the fast version OBIA")
    
    /* fast version of the geo clean up
      - blanket version assigns the underlying most common in neighbourhood
      - mode OBIA version iterates through objects+buffers but take the mode instead of doing the class percs, to see if that speeds things up
    */
    
    
    //############
    //# blanket version
    //############
    // make a very smooth map to capture the broader neighbourhood
    var smooth_map = clean_map
                        .focal_mode({
                          radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
    
    
    // first make a make size threshold, so we're not vectorising huge objects when we don't have t
    // - the unmask(99) captures small no data values/ data gaps
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt().multiply(2)).select('labels').pow(2).log().int()
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    
    // replace small objects with smooth underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: smooth_map
    }).selfMask()
    //############
    //############
    
    
    /*    
    //############
    //# mode OBIA version
    //############
    
    // #########
    // THE FASTER PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    //                 - BUT, just assign the mode of the neighbours, so save resouces even further??
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_mode = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
      // reduce the classes in the buffer zone
      var diff_mode = ee.Number(ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.mode(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        })).get('classification'))
      
      return(f.set('mode',diff_mode))
    }
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours_mode = function() {
      // reduce map to vectors
      var map_fc = clean_map.unmask(0)
            .updateMask(classn.gt(0)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            })
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_mode))
    }
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    var classn = segment_id.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)) // shallow L 
              .and(clean_map.unmask(0).neq(0)), // no data values (want to reclaim the small gaps 
      value: ee.Image(0) // 99 ensures it's ignored in logic
    })
    
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours_mode()
    
    //print(map_fc_neighbours.limit(10))
    
    var mode_map = ee.Image().byte().paint(map_fc_neighbours, 'mode').unmask(0).rename('mode') // paint out the mode values to an image
    //Map.addLayer(mode_map, display_pal, "mode map", false)
    
    // replace small objects with mode underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: mode_map
    }).selfMask()
    
    //############
    //############
    */
    
  } else {
    
    // BENTHIC CLEAN-UP RULES
    
    
    // reclaim shallow no data to surrounding class
    var smooth_map = clean_map
                        .focal_mode({
                          radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
    
    var clean_map = clean_map.unmask(0).where({
      test: geo_map.gt(2).and(clean_map.eq(0)), 
      value: smooth_map
    }).selfMask()
    
    // cut benthic off to < 10 m
    clean_map = clean_map.where({
      test: depth.gt(1000),
      value: ee.Image(0)
    })
    
    // Deep (or land or missing) in geo == masked from benthic
    clean_map = clean_map.where({
      test: geo_map.unmask(0).lte(2),
      value: ee.Image(0)
    })
    
    /*// Deep lagoon in geo == masked from benthic
    clean_map = clean_map.where({
      test: geo_map.eq(12),
      value: ee.Image(0)
    })*/
    
    /*// turbid in geo == turbid (temporal - class num 2)
    // ############## ---> need to decide here whether to push geo turbid through regardless of benthic class
    clean_map = clean_map.where({
      test: geo_map.eq(3),
      value: ee.Image(2)
    })*/
    
    /*
    // Ignore in benthic + ORF in geo == rock
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(14)),
      value: ee.Image(13)
    })
    
    // Ignore in benthic + IRF in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(13)),
      value: ee.Image(11)
    })
    
    // Ignore in benthic + TRF in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(16)),
      value: ee.Image(11)
    })
    
    // Ignore in benthic + RR in geo == rock
    */
    
    // seagrass in benthic + ORF or RR in geo == coral/algae
    clean_map = clean_map.where({
      test: clean_map.eq(14)
                     .and(geo_map.eq(14).or(geo_map.eq(15)).or(geo_map.eq(21)).or(geo_map.eq(22))),
      value: ee.Image(15)
    })
    
    // ####--> CR: "Seagrass neighbouring deep water or no data not shallow a rock or coral algae class"
    
    // coral or algae in benthic + TRF in geo == seagrass
    clean_map = clean_map.where({
      test: clean_map.eq(16)
                     .and(geo_map.eq(16)),
      value: ee.Image(14)
    })
    
    // BMA in benthic and slope/plat in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(18)
                     .and(geo_map.eq(2).or(geo_map.eq(12)).or(geo_map.eq(21)).or(geo_map.eq(22)).or(geo_map.eq(23))),
      value: ee.Image(11)
    })
    
    
  }
  
/*  // ####
  // Final small object clean (safety net for oddities with scaling and border buffers??)
  // ####
  
  var clean_size = (vars.geomorphic) ? vars.small_object_geo : vars.small_object_benthic
  
  var map_vsmooth = clean_map
                        .focal_mode({
                          radius: 10, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 1
                        })
                        .updateMask(class_extent_mask)
  
  clean_map = clean_map.where({
    test: clean_map.connectedPixelCount(clean_size, false).lt(clean_size), 
    value: map_vsmooth
  })*/

}

// final smooth
if (vars.smooth_output) {
  // smooth the output lightly to make nice edges, and get rid of noise
  var noise_smooth = clean_map.unmask(99) // unmasking to a value allows us to include masked areas in the smooth, then re-mask after
                        .focal_mode({
                          radius: 2, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
  clean_map = clean_map.updateMask(noise_smooth.neq(99)).updateMask(clean_map.gt(1)) // this ignores 0/land; make it .gt(2) if you want to mask deep too
} else {
  // just clip to the classified extent and move on
  if (vars.geomorphic) {
    clean_map = clean_map.updateMask(clean_map.gt(1)) // this ignores 0/land; make it .gt(2) if you want to mask deep too
  } else {
    clean_map = clean_map.updateMask(clean_map.gt(1)) // this ignores 0/land; make it .gt(2) if you want to mask deep too
  }
  
}


// 4. Export data

var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name


if (vars.do_export) {
  print("For export, the image data scale must be set to:", vars.image_data_scale)
  
  if (vars.export_small_area) {
    var export_convhull = export_small
  } else {
    //var export_convhull = clean_map.gt(2).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: region_extent, crs: "EPSG:4326"}).geometry().convexHull({maxError: 100})
    var export_convhull = reef_boundary
  }
  Map.addLayer(export_convhull, {}, "Export footprint", true)
  Export.image.toAsset({
    image: clean_map.set(vars),
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: export_convhull,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  })
  /*Export.image.toCloudStorage({
    image: clean_map,//.set(vars),
    description: 'swp_geo_clean',
    bucket: 'mitchest_unet_bucket',
    fileNamePrefix: 'swp_geo_clean',
    region: export_convhull,
    scale: 25,
    crs: 'EPSG:4326',
    maxPixels: 1e13
  })*/
  
  
} else {
  if (vars.show_eg_area) {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.clip(eg_area).reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name + '_final', false)
    } else {
      Map.addLayer(clean_map.clip(eg_area), display_pal, output_name + '_final', false)
    }
  } else {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name + '_final', false)
    } else {
      Map.addLayer(clean_map, display_pal, output_name + '_final', false)
    }
  }
}
