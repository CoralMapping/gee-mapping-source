/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var wcmc = ee.FeatureCollection("projects/coral_atlas/global_datasets/wcmc_reefs_2018v4_dissolved"),
    low_rrs = ee.Image("projects/coral_atlas/workflow/mapping/eastern_png_and_solomons/eastern_png_and_solomons_low_tide_normalized_sr_may2018_may2020_v2_shift_mosaic/20200530T220905Z/eastern_png_and_solomons_low_tide_normalized_sr_may2018_may2020_v2_shift_mosaic"),
    Artifact_layer = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[146.36672972500003, -2.075961645108414],
          [148.60794066250003, -6.369893939365255],
          [151.90383910000003, -5.320705253571391],
          [148.16848753750003, -3.699818635188096],
          [147.24563597500003, -1.8563645784535594]]]),
    image = ee.Image("projects/coral_atlas/workflow/mapping/eastern_png_and_solomons/eastern_png_and_solomons_high_tide_normalized_sr_may2018_may2020_v2_shift_mosaic/20200531T191050Z/eastern_png_and_solomons_high_tide_normalized_sr_may2018_may2020_v2_shift_mosaic_depth"),
    noReef_mask = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.MultiPoint();
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//Viewing script for looking at reefs and classifications for each region. In this case Indo
//From this region Hawaii onwards the map_viewer script is going to be used from the very beginning
//in the workflow.

//RB: I set initially this viewer for CR to draw artifact layers and set the mask 1) noReef_mask, 2) mid_mask and 3) refined_mask

// imports
/*
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')
*/
// choose where to centre (link this dynamically to map app?)

Map.setCenter(147.86087035000003, -7.199000717379121, 5)

/*
//4. add turbidity for reference
Map.addLayer(turbidity.focal_mode(5), {min:5, max:20, palette: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']}, "Accumulative turbidity (smooth)", false)
Map.addLayer(turbidity, {min:5, max:20, palette: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']}, "Accumulative turbidity", false)
*/


// add some background data
//Map.addLayer(any_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Any tide mosaic", false)
//Map.addLayer(high_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "High tide mosaic", false)

var imageVisParam = {"opacity":1,"bands":["b3","b2","b1"],"max":1536,"gamma":1};
Map.addLayer(low_rrs, imageVisParam, 'Dove sr lowtide', true)
//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)

//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)

/*
// Hawaii classification


Map.addLayer(ee.ImageCollection([hawaii_geo_west, hawaii_geo_east]).mosaic(), map_palettes.geo, "Geo RAW", false)
Map.addLayer(geo_clean_p2, map_palettes.geo, "Geo Clean Pass 2", false)
Map.addLayer(geo_clean_man, map_palettes.geo, "Geo Clean Manual (FINAL)", true)
Map.addLayer(ee.ImageCollection([hawaii_benthic_west, hawaii_benthic_east]).mosaic(), map_palettes.benthic, "Benthic RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Benthic Clean (FINAL)", true)

// wave data
//var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
//var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

//Map.addLayer(kd1, {}, "waves - kd1", false)
//Map.addLayer(kd2, {}, "waves - kd2", false)

// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)

*/

// WCMC

Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)
//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)

// wave data
//var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
//var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

//Map.addLayer(kd1, {}, "waves - kd1", false)
//Map.addLayer(kd2, {}, "waves - kd2", false)

region_wcmcBound = 
    ee.Geometry.Polygon(
        [[[133.27621531509237, -3.6964607454528933],
          [134.77035594009237, -4.6606761835234165],
          [138.02230906509237, -2.8189834208112403],
          [143.29574656509237, -4.485454607626794],
          [146.81137156509237, -8.32775342522801],
          [145.58090281509237, -9.369872642992746],
          [146.72348094009237, -10.408873647930577],
          [149.36019969009237, -11.960805457501285],
          [153.31527781509237, -12.5620026138334],
          [155.77621531509237, -12.132715510948076],
          [157.79769969009237, -10.235937480088639],
          [157.88559031509237, -11.616658821605727],
          [161.04965281509237, -14.101349060999887],
          [161.40121531509237, -13.24736423000143],
          [161.40121531509237, -12.390372354418293],
          [162.36801219009237, -11.874809336893126],
          [163.77426219009237, -9.369872642992746],
          [163.33480906509237, -7.544319839235769],
          [161.04965281509237, -4.6606761835234165],
          [149.88754344009237, -0.2712922865886533],
          [148.56918406509237, -1.2379938346478028],
          [147.07504344009237, -1.2379938346478028],
          [146.10824656509237, -0.09551200607302315],
          [142.76840281509237, -0.7107281976529471],
          [142.15316844009237, -2.467795559859385],
          [135.12191844009237, 0.6954864947804655],
          [133.45199656509237, -0.44707001364412374]]]);


var wcmc=wcmc.filterBounds(region_wcmcBound)

Map.addLayer(wcmc, {color:'#ffff00'}, "WCMC layer", false)

// #############
// example confidence layers




/*
// depth and nir combos
var depth_nir_flag = fiji_dove_ocean.select('b4').multiply(fiji_high_depth_ocean).gt(250000)
//Map.addLayer(depth_nir_flag, {}, "NIR flag", false)
var conf_flag = fiji_high_depth_ocean.eq(-1)
                        .or(fiji_high_depth_ocean.gt(1000))
                        .add(depth_nir_flag.eq(1))
                        .selfMask()
Map.addLayer(conf_flag, {min:1,max:2,palette:["#f7f7f7","#bababa"]}, "Confidence flag", false)

//straight depth missing/-1
var depth_flag = fiji_high_depth_ocean.gt(0).selfMask()
//Map.addLayer(depth_flag, {min:0,max:1,palette:["#ffff00"]}, "Valid depth retrievals", false)

//Map.addLayer(fiji_geo_clean.gt(0).updateMask(fiji_high_depth_ocean.lte(0)), {min:0,max:1,palette:["#ff0000"]}, "Unmapped area via original algorithm", false)
*/


////////// UI SET UP //////////

/*
//Generate title
var title = ui.Label({
  value: 'Coral Atlas map classes',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false)
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false)
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
pkg_vis.add_lgds([title, geo_legend, benthic_legend])//, mask_legend])
// generate the legend

var conf_str = {"opacity":1,"bands":["constant"],"min":0,"max":9,"palette":["4d004b","810f7c","88419d","8c6bb1","8c96c6","9ebcda","bfd3e6","e0ecf4","f7fcfd"]};
Map.addLayer(benthic_conf_clean,conf_str,'confidence_benthic',true);
Map.addLayer(geo_conf_clean,conf_str,'confidence_geo',true);


//Confidence layer panel

var legend=ui.Panel({
  style: {
    position: 'bottom-right',
    padding: "8px 15px"
  }
});

//var vis = {min: 'low', max: 'high', palette: 'ece2f0,a6bddb,1c9099'};
var vis = {min: 'low', max: 'high', palette: '4d004b,810f7c,88419d,8c6bb1,8c96c6,9ebcda,bfd3e6,e0ecf4,f7fcfd'};

function makeColorBarParams(palette) {
  return {
    bbox: [0, 0, 1, 0.1],
    dimensions: '100x10',
    format: 'png',
    min: 0,
    max: 1,
    palette: palette,
  };
}

var colorBar=ui.Thumbnail({
  image: ee.Image.pixelLonLat().select(0),
  params: makeColorBarParams(vis.palette),
  style:{stretch:'horizontal', margin: '0px 8px',maxHeight: '24px'}
})
// Create a panel with three numbers for the legend.
var legendLabels = ui.Panel({
  widgets: [
    ui.Label(vis.min, {margin: '4px 8px'}),
    ui.Label(
        (' '),
        {margin: '4px 8px', textAlign: 'center', stretch: 'horizontal'}),
    ui.Label(vis.max, {margin: '4px 8px'})
  ],
  layout: ui.Panel.Layout.flow('horizontal')
});

var legendTitle = ui.Label({
  value: 'Confidence Layer',
  style: {fontWeight: 'bold',position: 'bottom-right'}
});

legend.add(legendTitle);
legend.add(colorBar)
legend.add(legendLabels);

Map.add(legend)

*/