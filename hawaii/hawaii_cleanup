/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var eg_area = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[158.09700006133824, 6.98282032937242],
          [158.09700006133824, 6.954194253230618],
          [158.14678186065464, 6.954194253230618],
          [158.14678186065464, 6.98282032937242]]], null, false),
    export_small = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[157.9950896058224, 7.112454892191871],
          [157.9950896058224, 6.733464175742206],
          [158.4304228577755, 6.733464175742206],
          [158.4304228577755, 7.112454892191871]]], null, false),
    region_extent = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-85.98308517718672, 29.977841924871946],
          [-85.98308517718672, 16.51411805544282],
          [-70.33855392718672, 16.51411805544282],
          [-70.33855392718672, 29.977841924871946]]], null, false),
    reef_boundary = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-85.98308517718672, 29.977841924871946],
          [-85.98308517718672, 16.51411805544282],
          [-70.33855392718672, 16.51411805544282],
          [-70.33855392718672, 29.977841924871946]]], null, false),
    flor_cut = 
    /* color: #516ad6 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-81.88456494808199, 27.686438741723514],
          [-82.45585401058199, 28.26857738163213],
          [-82.34599072933199, 29.135841228878046],
          [-83.13700635433199, 29.900655091169604],
          [-85.07060010433199, 30.166968177621744],
          [-85.66386182308199, 29.862552012150267],
          [-85.64188916683199, 29.49984846966519],
          [-83.29081494808199, 28.982187416057798],
          [-83.26884229183199, 28.249223488196193],
          [-82.03837354183199, 25.604866468889778],
          [-81.42313916683199, 26.178108838339305]]]),
    baha_cut = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -79.29383962962757,
                25.613236311678587
              ],
              [
                -79.16749769829556,
                25.42486175976503
              ],
              [
                -79.0737784745865,
                25.335496487197535
              ],
              [
                -79.13388979557742,
                25.246129537321924
              ],
              [
                -79.07965180985197,
                25.098761948028333
              ],
              [
                -79.12978043406684,
                24.966311532025223
              ],
              [
                -79.05013334357041,
                24.85731275564973
              ],
              [
                -79.0093917662247,
                24.80504136878269
              ],
              [
                -79.01261789968771,
                24.709133087896102
              ],
              [
                -79.11947775076524,
                24.511715383552925
              ],
              [
                -79.12911411802364,
                24.377938260788476
              ],
              [
                -79.07072717444885,
                24.078015677485684
              ],
              [
                -79.09853487353953,
                24.06924129539827
              ],
              [
                -79.0683193524099,
                23.96040065895691
              ],
              [
                -79.08376540794394,
                23.924330051445192
              ],
              [
                -79.03570078027863,
                23.780519269772704
              ],
              [
                -78.8935664352681,
                23.458409850741635
              ],
              [
                -78.88944750831008,
                23.37523993866856
              ],
              [
                -78.71916094292823,
                23.19233038049103
              ],
              [
                -78.5420073720251,
                23.09004169069458
              ],
              [
                -78.53784950244265,
                23.01900587343731
              ],
              [
                -78.46914706235445,
                22.968160532912645
              ],
              [
                -78.33934515008072,
                22.85986198373839
              ],
              [
                -78.1477894215126,
                22.852741713843148
              ],
              [
                -78.0900976275808,
                22.813426833375175
              ],
              [
                -78.02968567800852,
                22.79181168075074
              ],
              [
                -77.91716327211536,
                22.748523036852855
              ],
              [
                -77.56641080726712,
                22.48146189588708
              ],
              [
                -77.55329640571988,
                22.43653255487586
              ],
              [
                -77.50584740833555,
                22.333153377773638
              ],
              [
                -77.45299994385748,
                22.298194134175983
              ],
              [
                -77.42014342955954,
                22.300822286575766
              ],
              [
                -77.41727107744025,
                22.294393471920248
              ],
              [
                -77.42029909058246,
                22.28927311585196
              ],
              [
                -77.42696337397427,
                22.280042153856687
              ],
              [
                -77.40891650826583,
                22.261273337774394
              ],
              [
                -77.40087847690293,
                22.256079778046658
              ],
              [
                -77.39767209933599,
                22.232452154716068
              ],
              [
                -77.39538848875992,
                22.221905882896667
              ],
              [
                -77.38635286008157,
                22.2051884108996
              ],
              [
                -77.37909168347308,
                22.2024672011164
              ],
              [
                -77.37513050507513,
                22.20176611519284
              ],
              [
                -77.37272079807711,
                22.20133607861931
              ],
              [
                -77.37116941171641,
                22.20019081046408
              ],
              [
                -77.36823747381193,
                22.199726216896558
              ],
              [
                -77.3655695583447,
                22.19710923014491
              ],
              [
                -77.36389244921236,
                22.193892542953638
              ],
              [
                -77.36305431712302,
                22.189422346071574
              ],
              [
                -77.35851617412527,
                22.1835304261302
              ],
              [
                -77.34886610150133,
                22.17851612839448
              ],
              [
                -77.34198037919364,
                22.173621980411273
              ],
              [
                -77.33321559793323,
                22.165767854043203
              ],
              [
                -77.3281461062654,
                22.15993010131457
              ],
              [
                -77.32526784941342,
                22.157645204412336
              ],
              [
                -77.3221118099036,
                22.16047647680752
              ],
              [
                -77.30800144278271,
                22.160143547107417
              ],
              [
                -77.28549376622703,
                22.175713826572704
              ],
              [
                -77.2835037648289,
                22.180320575267537
              ],
              [
                -77.28113480263114,
                22.18103504724596
              ],
              [
                -77.27582998391249,
                22.179961656960916
              ],
              [
                -77.2730050326399,
                22.180696182060572
              ],
              [
                -77.27073371211264,
                22.182811977643546
              ],
              [
                -77.26616433221666,
                22.19134080832922
              ],
              [
                -77.25752708606527,
                22.201486991055333
              ],
              [
                -77.24685543323686,
                22.209421809155966
              ],
              [
                -77.24409303270936,
                22.226738750162493
              ],
              [
                -77.24185326207011,
                22.228883443721198
              ],
              [
                -77.22940560324166,
                22.223857966379963
              ],
              [
                -77.22657107855969,
                22.23138616597138
              ],
              [
                -77.22305112210695,
                22.23594476454327
              ],
              [
                -77.22017534286364,
                22.239733596495984
              ],
              [
                -77.21335133281967,
                22.2476533806498
              ],
              [
                -77.20167684613786,
                22.255660652981735
              ],
              [
                -77.1942863758023,
                22.261762756966693
              ],
              [
                -77.1806341316644,
                22.266084727788872
              ],
              [
                -77.16114365566031,
                22.268660242866424
              ],
              [
                -77.14692181835147,
                22.277853387249795
              ],
              [
                -77.13586117218357,
                22.284672801074084
              ],
              [
                -77.11608211890086,
                22.28808193043038
              ],
              [
                -77.09698795115013,
                22.287201030503073
              ],
              [
                -77.07840313148559,
                22.295893235248982
              ],
              [
                -77.06920480076035,
                22.293618108837038
              ],
              [
                -77.04163970489022,
                22.28403522480208
              ],
              [
                -77.01810517909456,
                22.293027780542047
              ],
              [
                -76.99423059719145,
                22.3000631684473
              ],
              [
                -76.98391976013282,
                22.2984965792168
              ],
              [
                -76.96794841738664,
                22.300253371398924
              ],
              [
                -76.95824381443123,
                22.301766250648065
              ],
              [
                -76.94103051498183,
                22.298551895759484
              ],
              [
                -76.93001836624308,
                22.29916738624824
              ],
              [
                -76.88982177441451,
                22.296934620452888
              ],
              [
                -76.81845183368031,
                22.292330110558805
              ],
              [
                -76.76762927468212,
                22.277311493362365
              ],
              [
                -76.72090842735695,
                22.260262705429543
              ],
              [
                -76.70612569330751,
                22.260446656325982
              ],
              [
                -76.69134372572492,
                22.25300351670442
              ],
              [
                -76.65251245697786,
                22.22967137331468
              ],
              [
                -76.62208448179689,
                22.209098766931135
              ],
              [
                -76.53757774361404,
                22.137217998273048
              ],
              [
                -76.50529507232329,
                22.083724855423608
              ],
              [
                -76.44458806899137,
                22.07686978514454
              ],
              [
                -76.41617900641103,
                22.06366187336222
              ],
              [
                -76.38893113288907,
                22.040507098671466
              ],
              [
                -76.34520676619131,
                22.051711676686086
              ],
              [
                -76.26811715715878,
                22.062203901128463
              ],
              [
                -76.23220516674422,
                22.104493278082337
              ],
              [
                -76.22907207977558,
                22.155365798111408
              ],
              [
                -76.22858564384188,
                22.167476834055446
              ],
              [
                -76.22535220030312,
                22.18753638713023
              ],
              [
                -76.22083137762351,
                22.21021665013985
              ],
              [
                -76.21150195489784,
                22.229718109220062
              ],
              [
                -76.18916694535602,
                22.262757922460853
              ],
              [
                -76.1682090370495,
                22.27464749686832
              ],
              [
                -76.15026728842986,
                22.27993222802423
              ],
              [
                -76.14733132075968,
                22.28056496023474
              ],
              [
                -76.13741699884916,
                22.281041979519237
              ],
              [
                -76.12958617903303,
                22.28191666783514
              ],
              [
                -76.12021046535958,
                22.280090553375487
              ],
              [
                -76.11227101694047,
                22.2801117249663
              ],
              [
                -76.10716420856026,
                22.279815178276955
              ],
              [
                -76.09806774984166,
                22.278031169628637
              ],
              [
                -76.09370273313473,
                22.275643304239914
              ],
              [
                -76.08987868917903,
                22.27296689275722
              ],
              [
                -76.0787590662238,
                22.262982782071244
              ],
              [
                -76.07308933457678,
                22.253731778072318
              ],
              [
                -76.07119636167292,
                22.250000716954965
              ],
              [
                -76.07005316114271,
                22.246928867011665
              ],
              [
                -76.06629969784528,
                22.23942125179252
              ],
              [
                -76.06271781195639,
                22.228417626503667
              ],
              [
                -76.0623269953003,
                22.21999580725545
              ],
              [
                -76.05940961319679,
                22.215016760748686
              ],
              [
                -76.05973995105218,
                22.20723095126558
              ],
              [
                -76.0627827848018,
                22.195750011361557
              ],
              [
                -76.06702739426375,
                22.187049941352768
              ],
              [
                -76.06689044910989,
                22.18180618617251
              ],
              [
                -76.06543404481808,
                22.16726771182762
              ],
              [
                -76.06539139994587,
                22.15749145956244
              ],
              [
                -76.06497264443082,
                22.1465658590773
              ],
              [
                -76.0545579977086,
                22.14214985665811
              ],
              [
                -75.99764436495278,
                22.141055874417567
              ],
              [
                -75.96291795239138,
                22.111497282153852
              ],
              [
                -75.90896844052038,
                22.08334955607617
              ],
              [
                -75.85265856663932,
                22.049030991883466
              ],
              [
                -75.82650687328625,
                22.018709984757784
              ],
              [
                -75.81346138626218,
                22.009956926501605
              ],
              [
                -75.80367720264027,
                22.00693390297571
              ],
              [
                -75.78102333991781,
                22.001676295006856
              ],
              [
                -75.73231783704921,
                21.958061980774303
              ],
              [
                -75.7105849583886,
                22.00505260328
              ],
              [
                -75.7016022732986,
                22.004036644946158
              ],
              [
                -75.69213242940381,
                22.012759219830944
              ],
              [
                -75.68808370463063,
                22.01712046050343
              ],
              [
                -75.68781131461077,
                22.026892463990492
              ],
              [
                -75.69616495186646,
                22.048614139365412
              ],
              [
                -75.70016846201909,
                22.069149167868602
              ],
              [
                -75.6986107105451,
                22.08203736399979
              ],
              [
                -75.69317820082544,
                22.090819048235154
              ],
              [
                -75.69321584245502,
                22.09791492367714
              ],
              [
                -75.69548004563973,
                22.103265168356145
              ],
              [
                -75.69675033928416,
                22.11721795439731
              ],
              [
                -75.69149709292633,
                22.13212489327294
              ],
              [
                -75.69089400099459,
                22.138963661447036
              ],
              [
                -75.69514160656264,
                22.15287698801331
              ],
              [
                -75.70591348143824,
                22.16806197014962
              ],
              [
                -75.725397221678,
                22.18507135819601
              ],
              [
                -75.76306189429782,
                22.321047048463143
              ],
              [
                -75.81174449126407,
                22.358538302901238
              ],
              [
                -75.85138328274792,
                22.497625648251365
              ],
              [
                -75.87970698416937,
                22.478991888077015
              ],
              [
                -75.89155075637848,
                22.494615117346097
              ],
              [
                -75.90151272024396,
                22.527790536645295
              ],
              [
                -75.90529939534488,
                22.562869375866466
              ],
              [
                -75.90661506396087,
                22.578494177022392
              ],
              [
                -75.9024375554446,
                22.594118978157756
              ],
              [
                -75.87622439969762,
                22.619027982435504
              ],
              [
                -75.89246561133002,
                22.628278977619498
              ],
              [
                -75.90730899052168,
                22.689188332967316
              ],
              [
                -75.89880912422372,
                22.74502952597787
              ],
              [
                -75.91683988477334,
                22.753131279759433
              ],
              [
                -75.97057714745796,
                22.75553263466954
              ],
              [
                -75.97907469216368,
                22.77124135686559
              ],
              [
                -75.96903837197812,
                22.804041673609515
              ],
              [
                -75.93934594059921,
                22.812668072357855
              ],
              [
                -75.89265081666322,
                22.80348684200001
              ],
              [
                -75.88318375513091,
                22.837712962908668
              ],
              [
                -75.87673175136177,
                22.849767063141183
              ],
              [
                -75.87199724406305,
                22.86657796190353
              ],
              [
                -75.86293268003766,
                22.884757377798913
              ],
              [
                -75.85248914741837,
                22.912435617200998
              ],
              [
                -75.83875571511177,
                22.931088067999724
              ],
              [
                -75.82570608962021,
                22.935672145394893
              ],
              [
                -75.81574682282941,
                22.947924425146358
              ],
              [
                -75.8008095863576,
                22.95847646729592
              ],
              [
                -75.77625705281123,
                22.976615140038636
              ],
              [
                -75.75629902284513,
                22.993053099496482
              ],
              [
                -75.74486790413042,
                22.999102295554334
              ],
              [
                -75.73434466612514,
                23.000230404941963
              ],
              [
                -75.71420478356926,
                23.02790286719404
              ],
              [
                -75.6925188789962,
                23.04490424860725
              ],
              [
                -75.65023089247161,
                23.080857104180716
              ],
              [
                -75.6205723778923,
                23.10000871477906
              ],
              [
                -75.59361484460287,
                23.112168194501983
              ],
              [
                -75.56369614632067,
                23.127305336131762
              ],
              [
                -75.52827611729099,
                23.13052734188581
              ],
              [
                -75.48412682646993,
                23.146972952734835
              ],
              [
                -75.46125565382117,
                23.15426253886038
              ],
              [
                -75.430801059861,
                23.154150522284922
              ],
              [
                -75.41763262797058,
                23.154409428703048
              ],
              [
                -75.4003435466028,
                23.16098014909354
              ],
              [
                -75.37740442693246,
                23.16110779872338
              ],
              [
                -75.36991929576284,
                23.16025224023379
              ],
              [
                -75.35793734019073,
                23.150037695028807
              ],
              [
                -75.31143611736316,
                23.148716902375597
              ],
              [
                -75.27798232686088,
                23.152752565635865
              ],
              [
                -75.24030170606224,
                23.149489826699455
              ],
              [
                -75.2139543892026,
                23.143380845528217
              ],
              [
                -75.17765502822621,
                23.1222672986748
              ],
              [
                -75.14033761571459,
                23.1027247544187
              ],
              [
                -75.02642516637131,
                23.102247137485815
              ],
              [
                -75.0645070368124,
                23.14381984449357
              ],
              [
                -75.09643163373467,
                23.188541729450655
              ],
              [
                -75.0980212428199,
                23.28603656623528
              ],
              [
                -75.13519808436958,
                23.37456756835173
              ],
              [
                -75.20252349845407,
                23.45809810218468
              ],
              [
                -75.26170472184072,
                23.574356320934047
              ],
              [
                -75.35277938712649,
                23.578426680074443
              ],
              [
                -75.39861732470698,
                23.451405858781687
              ],
              [
                -75.4764334841141,
                23.437028734904278
              ],
              [
                -75.46359053143135,
                23.362158390082417
              ],
              [
                -75.73212360066314,
                23.440962635443935
              ],
              [
                -75.8984351804286,
                23.399187428809114
              ],
              [
                -76.03438773374646,
                23.4432926382051
              ],
              [
                -76.00966840110826,
                23.547824765006265
              ],
              [
                -76.1950643958495,
                23.645983684738855
              ],
              [
                -76.12847103425753,
                23.693066746063042
              ],
              [
                -76.11952910671168,
                23.741398221642683
              ],
              [
                -76.24316114778128,
                23.848122674875025
              ],
              [
                -76.34832117590966,
                24.018814937617453
              ],
              [
                -76.3711785120749,
                24.04141909841271
              ],
              [
                -76.51641282070521,
                24.21334910165362
              ],
              [
                -76.60694408882752,
                24.283716269349572
              ],
              [
                -76.63025529686507,
                24.37283837312928
              ],
              [
                -76.67041396749026,
                24.36277710469882
              ],
              [
                -76.71263071517185,
                24.36709089021787
              ],
              [
                -76.73665577516725,
                24.393122693980303
              ],
              [
                -76.78689685925828,
                24.48208383029565
              ],
              [
                -76.8081265365844,
                24.588596026045714
              ],
              [
                -76.82902619261873,
                24.711979249679985
              ],
              [
                -76.85120238143915,
                24.729393167058422
              ],
              [
                -76.8411081914341,
                24.755538197879353
              ],
              [
                -76.81372187133907,
                24.843944754703447
              ],
              [
                -76.79341235074365,
                24.885891441837018
              ],
              [
                -76.80262214563619,
                24.89778647484796
              ],
              [
                -76.80084637147907,
                24.90874718077419
              ],
              [
                -76.76972330858476,
                24.940464377872892
              ],
              [
                -76.73722186533699,
                24.96034130711057
              ],
              [
                -76.68457630738776,
                24.955255751195242
              ],
              [
                -76.53673386278315,
                24.928788970217983
              ],
              [
                -76.4968253089957,
                24.888601657993622
              ],
              [
                -76.44457237366284,
                24.888260730635928
              ],
              [
                -76.39913380157222,
                24.872614577614087
              ],
              [
                -76.34412606391336,
                24.812748345256068
              ],
              [
                -76.32066673886811,
                24.795202269362576
              ],
              [
                -76.2326774911476,
                24.770032496953682
              ],
              [
                -76.18307713664694,
                24.78694750212571
              ],
              [
                -76.14011740116736,
                24.858033443516213
              ],
              [
                -76.15449131096067,
                24.898086207842635
              ],
              [
                -76.18189499393792,
                24.936868326435125
              ],
              [
                -76.13136733722766,
                25.015449689292282
              ],
              [
                -76.13573442619361,
                25.130059946464502
              ],
              [
                -76.2062725849322,
                25.17765836023851
              ],
              [
                -76.30643190290193,
                25.25880774708824
              ],
              [
                -76.3684750093761,
                25.348959359976725
              ],
              [
                -76.37837149440439,
                25.334860299508133
              ],
              [
                -76.4253789369348,
                25.334451418536975
              ],
              [
                -76.46487000239813,
                25.356409769110623
              ],
              [
                -76.51635545329131,
                25.374826820853386
              ],
              [
                -76.55800927710219,
                25.411862894763583
              ],
              [
                -76.60656818279986,
                25.438366431464026
              ],
              [
                -76.62405598195984,
                25.46781279083949
              ],
              [
                -76.63435134318713,
                25.54160729682101
              ],
              [
                -76.65359369407581,
                25.5553357691923
              ],
              [
                -76.73885505134804,
                25.556726611079743
              ],
              [
                -76.78172097772742,
                25.571878458955155
              ],
              [
                -76.88808474624975,
                25.519011710384312
              ],
              [
                -76.87692513665752,
                25.496282013850948
              ],
              [
                -76.844852544626,
                25.407388599142706
              ],
              [
                -76.84972285098446,
                25.357448734726532
              ],
              [
                -76.873762278288,
                25.31366092917117
              ],
              [
                -76.93411822680734,
                25.244135611510078
              ],
              [
                -77.05383732467108,
                25.169853254623355
              ],
              [
                -77.06117614900081,
                25.152987144215366
              ],
              [
                -77.10604054687307,
                25.137868685168257
              ],
              [
                -77.19774314168367,
                25.10281945388415
              ],
              [
                -77.26211562887661,
                25.09708689459541
              ],
              [
                -77.29626627882634,
                25.078901451633286
              ],
              [
                -77.24134019729611,
                25.03418141088845
              ],
              [
                -77.38404572055039,
                24.94461653009817
              ],
              [
                -77.52665962293604,
                24.994949134709447
              ],
              [
                -77.5072155339096,
                24.92324881397873
              ],
              [
                -77.53148048906793,
                24.896863253238095
              ],
              [
                -77.48936900878911,
                24.866530135459016
              ],
              [
                -77.40333014577476,
                24.81421112266778
              ],
              [
                -77.31320961609917,
                24.725729287769003
              ],
              [
                -77.28098765355585,
                24.66658692381733
              ],
              [
                -77.24908891882146,
                24.62127668573716
              ],
              [
                -77.21414308128416,
                24.56662721533717
              ],
              [
                -77.21454811735599,
                24.534928424990355
              ],
              [
                -77.16690080557414,
                24.45573648245576
              ],
              [
                -77.14533931087728,
                24.376266048720236
              ],
              [
                -77.14233652143345,
                24.326820208648837
              ],
              [
                -77.1530707680818,
                24.259531095532854
              ],
              [
                -77.16105854092527,
                24.21350603103592
              ],
              [
                -77.16339592363511,
                24.182397646171115
              ],
              [
                -77.17053812590841,
                24.145026644889075
              ],
              [
                -77.1738341602627,
                24.11351707657814
              ],
              [
                -77.17559769797826,
                24.08869616802776
              ],
              [
                -77.1759748359452,
                24.067652616061416
              ],
              [
                -77.16537598981905,
                24.021542519812964
              ],
              [
                -77.1424272108352,
                23.97684248736105
              ],
              [
                -77.10576166243592,
                23.95221242294577
              ],
              [
                -77.06909180460352,
                23.948145385119375
              ],
              [
                -77.03599522974119,
                23.945478655855613
              ],
              [
                -76.99191373717959,
                23.94342983251765
              ],
              [
                -76.94400453756518,
                23.946706169820708
              ],
              [
                -76.92691419358333,
                23.949588076574344
              ],
              [
                -76.88163249872854,
                23.963575702084125
              ],
              [
                -76.83426997366318,
                23.96146493050212
              ],
              [
                -76.82124086108236,
                23.958720782713524
              ],
              [
                -76.79737976311254,
                23.957496266110162
              ],
              [
                -76.72476803216222,
                23.947784135863905
              ],
              [
                -76.69576640446125,
                23.93758745813851
              ],
              [
                -76.66856532799281,
                23.925267843095405
              ],
              [
                -76.63003833580001,
                23.91513796465279
              ],
              [
                -76.59621605500948,
                23.897134610523086
              ],
              [
                -76.56454875416293,
                23.86741119169462
              ],
              [
                -76.55211797041271,
                23.835800846958044
              ],
              [
                -76.53941457039312,
                23.795876261080384
              ],
              [
                -76.53375188532598,
                23.7765419901829
              ],
              [
                -76.53015000370962,
                23.756264971546898
              ],
              [
                -76.52465421957476,
                23.744482309816025
              ],
              [
                -76.52225024695191,
                23.714076238722026
              ],
              [
                -76.5277416818452,
                23.688384895310964
              ],
              [
                -76.52001653071727,
                23.654917173670952
              ],
              [
                -76.52130464080244,
                23.636296474286237
              ],
              [
                -76.51881572875035,
                23.61704671500932
              ],
              [
                -76.52792232079852,
                23.560098373130746
              ],
              [
                -76.45876701487212,
                23.54845770424038
              ],
              [
                -76.4134150606329,
                23.411789859758976
              ],
              [
                -76.45289706509874,
                23.320414415250784
              ],
              [
                -76.47792316239538,
                23.245377299175345
              ],
              [
                -76.70867139271827,
                23.19800877024618
              ],
              [
                -76.99500197396381,
                23.228930475055023
              ],
              [
                -77.07070796826677,
                23.28765186642512
              ],
              [
                -77.14111988294398,
                23.33281213154708
              ],
              [
                -77.21295708714605,
                23.378546477860755
              ],
              [
                -77.28723873647557,
                23.37869385742923
              ],
              [
                -77.38626898715293,
                23.456954308404654
              ],
              [
                -77.39322092216366,
                23.52032892043581
              ],
              [
                -77.37476014579438,
                23.544661543560984
              ],
              [
                -77.35529189584243,
                23.5917927400538
              ],
              [
                -77.36466344449516,
                23.648996023297837
              ],
              [
                -77.40904624821948,
                23.752868088933347
              ],
              [
                -77.43651394124657,
                23.775532708348642
              ],
              [
                -77.45298904545544,
                23.81444623141142
              ],
              [
                -77.49418612401887,
                23.94504294673716
              ],
              [
                -77.51678070751827,
                23.949786460356286
              ],
              [
                -77.52169397680142,
                23.95787938110209
              ],
              [
                -77.52028811984421,
                23.963224579324812
              ],
              [
                -77.518905897206,
                23.978922437747407
              ],
              [
                -77.52165145101623,
                23.998368579757326
              ],
              [
                -77.52268054757074,
                24.009031204190357
              ],
              [
                -77.53361234204077,
                24.03804024398946
              ],
              [
                -77.54007486512147,
                24.072832797573405
              ],
              [
                -77.54928667536265,
                24.109662392647145
              ],
              [
                -77.56451276543821,
                24.13769331519345
              ],
              [
                -77.58039922418318,
                24.168780139135396
              ],
              [
                -77.59697561031217,
                24.202529157975462
              ],
              [
                -77.61777776633375,
                24.230565969851643
              ],
              [
                -77.69416703940989,
                24.379033395997816
              ],
              [
                -77.70798416097388,
                24.424984324202534
              ],
              [
                -77.70635639499191,
                24.47499873069849
              ],
              [
                -77.70704563429175,
                24.50904738796644
              ],
              [
                -77.69262447327655,
                24.551842444293342
              ],
              [
                -77.70086337599561,
                24.62901685988173
              ],
              [
                -77.71803054938052,
                24.670140411285296
              ],
              [
                -77.76118944563957,
                24.716928165752986
              ],
              [
                -77.79132968842927,
                24.74140851036787
              ],
              [
                -77.80798220317573,
                24.76674432376707
              ],
              [
                -77.83065433158272,
                24.79519772859279
              ],
              [
                -77.87053333632925,
                24.84679983423061
              ],
              [
                -77.88037972289466,
                24.860386222447413
              ],
              [
                -77.8864512278174,
                24.872726150946423
              ],
              [
                -77.89564955238008,
                24.910572877655135
              ],
              [
                -77.90823112135473,
                24.935511785894974
              ],
              [
                -77.93412810822264,
                25.023391052197425
              ],
              [
                -77.95561060352352,
                25.08112269168261
              ],
              [
                -77.99966436043714,
                25.150996479044007
              ],
              [
                -78.01947080207667,
                25.172853735499018
              ],
              [
                -78.02365889156614,
                25.17979515589559
              ],
              [
                -78.02980466633387,
                25.1835797347813
              ],
              [
                -78.0400370729178,
                25.180117595706434
              ],
              [
                -78.04822768792235,
                25.17458929931601
              ],
              [
                -78.05543419182192,
                25.210294381086687
              ],
              [
                -78.08931297346545,
                25.32782353003352
              ],
              [
                -78.13003303386674,
                25.37828249124023
              ],
              [
                -78.15430443279118,
                25.442382348408696
              ],
              [
                -78.15749267304767,
                25.461407394062082
              ],
              [
                -78.14694744051394,
                25.481051043475333
              ],
              [
                -78.09280518576514,
                25.477507453179204
              ],
              [
                -77.89041723797511,
                25.410615802146836
              ],
              [
                -77.76729644904766,
                25.419617550270647
              ],
              [
                -77.71436811617629,
                25.550446557181882
              ],
              [
                -77.76075905795815,
                25.678354845300806
              ],
              [
                -77.81239713180314,
                25.69650869021774
              ],
              [
                -77.87802375070802,
                25.749590136079522
              ],
              [
                -77.8997452929713,
                25.805132379919716
              ],
              [
                -77.94321357816395,
                25.814799198547703
              ],
              [
                -78.07452379131071,
                25.693079651220078
              ],
              [
                -78.27421427191906,
                25.613233163236654
              ],
              [
                -78.38819634650883,
                25.588463430656482
              ],
              [
                -78.48036464671928,
                25.615404517228676
              ],
              [
                -78.52310065190518,
                25.680699918130106
              ],
              [
                -78.5426777673737,
                25.65406985302725
              ],
              [
                -78.55985719959395,
                25.670182242724294
              ],
              [
                -78.60653041631247,
                25.675138815783722
              ],
              [
                -78.69031878275639,
                25.766686761086635
              ],
              [
                -78.76031847209065,
                25.84395504143648
              ],
              [
                -78.84824598453397,
                25.96563513493926
              ],
              [
                -78.93129906469396,
                25.8706021042819
              ],
              [
                -79.01576510802963,
                25.91508274752583
              ],
              [
                -79.06459698596535,
                25.902007970109448
              ],
              [
                -79.18057993244918,
                25.766686579254323
              ],
              [
                -79.24515337258927,
                25.796325213106726
              ],
              [
                -79.28220383163205,
                25.73947741392029
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -78.70035217816127,
                26.525198145307787
              ],
              [
                -78.39822815472377,
                26.64309610457356
              ],
              [
                -77.98624085003627,
                26.665188447064363
              ],
              [
                -77.90658997113002,
                26.653529132461
              ],
              [
                -77.72256897503627,
                26.370888375644842
              ],
              [
                -77.45889710003627,
                26.048079732121494
              ],
              [
                -77.34628723675502,
                26.00118595354751
              ],
              [
                -77.19247864300502,
                26.112219774133983
              ],
              [
                -77.19522522503627,
                26.19604212945165
              ],
              [
                -77.08810852581752,
                26.336432518305585
              ],
              [
                -77.07162903363002,
                26.496319225217068
              ],
              [
                -77.16104879521087,
                26.57259963239106
              ],
              [
                -77.28739156864837,
                26.606984849928565
              ],
              [
                -77.32859029911712,
                26.68063265000421
              ],
              [
                -77.37528219364837,
                26.73461082655807
              ],
              [
                -77.50986471317962,
                26.857193228065924
              ],
              [
                -77.61148824833587,
                26.896391598154995
              ],
              [
                -77.5363005652304,
                26.95546967650378
              ],
              [
                -77.58504466154163,
                26.971050049251073
              ],
              [
                -77.76220693730072,
                27.020939738542502
              ],
              [
                -77.85540902247645,
                27.076352688584414
              ],
              [
                -77.88068864563597,
                27.056269056581204
              ],
              [
                -77.93480419510988,
                27.067358569232503
              ],
              [
                -77.9482891420584,
                27.09503251282749
              ],
              [
                -78.10951116271737,
                27.163137197569416
              ],
              [
                -78.13121467675205,
                27.165695592570128
              ],
              [
                -78.1268235965021,
                27.1364843158256
              ],
              [
                -78.1448165717859,
                27.12449421669674
              ],
              [
                -78.17119128835556,
                27.14755978810843
              ],
              [
                -78.19167897636439,
                27.180234257109678
              ],
              [
                -78.22992354259625,
                27.20402454783194
              ],
              [
                -78.25629072942066,
                27.2015103702456
              ],
              [
                -78.3159390025558,
                27.241640056579403
              ],
              [
                -78.37068268876874,
                27.24160690224568
              ],
              [
                -78.38415145557134,
                27.26508476568
              ],
              [
                -78.38869738757867,
                27.28551024741577
              ],
              [
                -78.42443800427361,
                27.28291206037074
              ],
              [
                -78.45537557743744,
                27.256804115568727
              ],
              [
                -78.5425836460688,
                27.23296178097659
              ],
              [
                -78.58964724280905,
                27.29002502019126
              ],
              [
                -78.65077684011295,
                27.298854816161427
              ],
              [
                -78.68345363491055,
                27.318480427956153
              ],
              [
                -78.69312649286917,
                27.334136918370124
              ],
              [
                -78.70127177746765,
                27.346385116219384
              ],
              [
                -78.74199911812366,
                27.33757551300831
              ],
              [
                -78.76658621834709,
                27.320534710381114
              ],
              [
                -78.80201407590258,
                27.30556550199588
              ],
              [
                -78.86126987375259,
                27.289842565681642
              ],
              [
                -78.87040045567744,
                27.320796106468023
              ],
              [
                -78.87355558230794,
                27.325959333473353
              ],
              [
                -78.87533766140034,
                27.33173253854412
              ],
              [
                -78.88727165112421,
                27.329203885046855
              ],
              [
                -78.90049231616723,
                27.322754847767364
              ],
              [
                -78.92160787724212,
                27.3190477119807
              ],
              [
                -78.92902070937458,
                27.315497939749626
              ],
              [
                -78.93849281971393,
                27.309812181144675
              ],
              [
                -78.96224242344691,
                27.30819959595232
              ],
              [
                -78.97432341840333,
                27.324581269916223
              ],
              [
                -78.98448523540975,
                27.32575583446235
              ],
              [
                -78.99334270717583,
                27.327562787251054
              ],
              [
                -79.0008270642987,
                27.3281492345332
              ],
              [
                -79.00947594203696,
                27.327903221319186
              ],
              [
                -79.016064723669,
                27.325826752612482
              ],
              [
                -79.02471280671156,
                27.322682447117135
              ],
              [
                -79.03061416547591,
                27.318012752727483
              ],
              [
                -79.04632628303541,
                27.317019605153884
              ],
              [
                -79.04673534332579,
                27.323329102957977
              ],
              [
                -79.05710088902119,
                27.31987762904929
              ],
              [
                -79.0621448163507,
                27.312460254787126
              ],
              [
                -79.07199463497277,
                27.310533286714843
              ],
              [
                -79.09422612640036,
                27.28634712373728
              ],
              [
                -79.09688252106274,
                27.274363926596653
              ],
              [
                -79.10675074005913,
                27.27702835039307
              ],
              [
                -79.11867513798431,
                27.269316658401564
              ],
              [
                -79.12575003307099,
                27.253862633842378
              ],
              [
                -79.14321265299071,
                27.24192078008767
              ],
              [
                -79.16410675570211,
                27.24157687085939
              ],
              [
                -79.18179504166821,
                27.2360583717847
              ],
              [
                -79.19573873429161,
                27.1202642644894
              ],
              [
                -79.17603712242244,
                27.104039448481654
              ],
              [
                -79.14888754032806,
                27.0083993597986
              ],
              [
                -79.10799703574868,
                27.005307771625283
              ],
              [
                -79.0822294234172,
                26.952037056681597
              ],
              [
                -79.06168356083587,
                26.816755680982844
              ],
              [
                -79.03896445157,
                26.781161995257616
              ],
              [
                -78.98333709232756,
                26.695315819763383
              ],
              [
                -78.91405477665619,
                26.63706343875239
              ],
              [
                -78.76779928349212,
                26.518544863217983
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -74.3790173049921,
                22.550615525827705
              ],
              [
                -74.37077755889835,
                22.536663622886795
              ],
              [
                -74.33369870147648,
                22.52905289969755
              ],
              [
                -74.3076061721796,
                22.513830195312597
              ],
              [
                -74.25679440460148,
                22.454191801708255
              ],
              [
                -74.24031491241398,
                22.388178993536233
              ],
              [
                -74.25542111358585,
                22.33991903816477
              ],
              [
                -74.26091427764835,
                22.30815995262425
              ],
              [
                -74.2691540237421,
                22.281476737317618
              ],
              [
                -74.28700680694523,
                22.233179881528773
              ],
              [
                -74.2746471878046,
                22.19400589859058
              ],
              [
                -74.29211447966232,
                22.163593525126988
              ],
              [
                -74.28571945256166,
                22.15877516160248
              ],
              [
                -74.27923975593087,
                22.167151335772395
              ],
              [
                -74.272415999454,
                22.174891263017123
              ],
              [
                -74.26151586279146,
                22.189891361670153
              ],
              [
                -74.24812550506535,
                22.197025783198814
              ],
              [
                -74.23456425628605,
                22.19925091977427
              ],
              [
                -74.22450139924409,
                22.197642462237667
              ],
              [
                -74.21109105855753,
                22.199927195102294
              ],
              [
                -74.20234720853246,
                22.203314484461245
              ],
              [
                -74.19102797630168,
                22.20662165193515
              ],
              [
                -74.17757267913761,
                22.22428127571006
              ],
              [
                -74.17143612070006,
                22.233020108677273
              ],
              [
                -74.1677021499628,
                22.234451064821418
              ],
              [
                -74.16281271748291,
                22.24350343203258
              ],
              [
                -74.15873629547242,
                22.2502546947073
              ],
              [
                -74.15283507359459,
                22.254266348406077
              ],
              [
                -74.14478535613956,
                22.26066664839905
              ],
              [
                -74.13903542048,
                22.27742583418662
              ],
              [
                -74.12830586395206,
                22.285130097552095
              ],
              [
                -74.1120486867664,
                22.28925948124984
              ],
              [
                -74.08856625518742,
                22.315465182325546
              ],
              [
                -74.02677007880006,
                22.31706066681255
              ],
              [
                -73.98934597930851,
                22.32626351726926
              ],
              [
                -73.93475766143742,
                22.418174279307713
              ],
              [
                -73.88703579864445,
                22.461330728513612
              ],
              [
                -73.86077160797062,
                22.503522203919886
              ],
              [
                -73.84343380889835,
                22.54316411676623
              ],
              [
                -73.84742602916656,
                22.567726618347702
              ],
              [
                -73.85759570406955,
                22.607349250695727
              ],
              [
                -73.86763806304874,
                22.644753939966662
              ],
              [
                -73.85098690948429,
                22.729486719237954
              ],
              [
                -73.8576396277441,
                22.739265024678186
              ],
              [
                -73.86806877701207,
                22.730201837745817
              ],
              [
                -73.8841193885079,
                22.72474133501391
              ],
              [
                -73.9138154784918,
                22.718882296750518
              ],
              [
                -73.94917721710148,
                22.70399320715875
              ],
              [
                -73.97595639190617,
                22.715552965680043
              ],
              [
                -74.00530474350522,
                22.72006860562729
              ],
              [
                -74.06316037139835,
                22.729170058780735
              ],
              [
                -74.16066403350773,
                22.712861054308306
              ],
              [
                -74.22658200225773,
                22.767322363069482
              ],
              [
                -74.25130124053898,
                22.80277386835006
              ],
              [
                -74.30073971710148,
                22.817964548916674
              ],
              [
                -74.33095211944523,
                22.80150790185211
              ],
              [
                -74.26778073272648,
                22.70526007762996
              ],
              [
                -74.2911266799921,
                22.652041432777043
              ],
              [
                -74.33095211944523,
                22.60387344671709
              ],
              [
                -74.36940426788273,
                22.56456601815248
              ]
            ]
          ],
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    flor_extent = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-85.74176953236804, 29.301352175756932],
          [-84.15973828236804, 29.435393954992637],
          [-83.34675000111804, 28.859691191651],
          [-83.28083203236804, 28.04833102109194],
          [-81.72077343861804, 25.180690862408717],
          [-83.63239453236804, 25.061324895096977],
          [-84.02790234486804, 24.462757252341],
          [-82.48981640736804, 24.082182665495107],
          [-81.17145703236804, 24.202487175151422],
          [-79.54548046986804, 24.88205782430196],
          [-79.54548046986804, 30.083931261534957],
          [-86.02741406361804, 30.045898424650336]]]),
    cuba_west_cut = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-83.96350550183911, 22.04822742875456],
          [-83.95835566053051, 22.032952286909733],
          [-83.96213221082348, 22.022449670722995],
          [-83.96110224256176, 22.01894862558832],
          [-83.94771265515942, 22.020221742920935],
          [-83.90891718396801, 22.042817671245732],
          [-83.89072107801098, 22.052045956570364],
          [-83.87149500379223, 22.055864381299664],
          [-83.84986567029614, 22.059046323150532],
          [-83.82926630506176, 22.060637267224266],
          [-83.81827997693676, 22.061273639841115],
          [-83.75545191297192, 22.044408797866403],
          [-83.73828577527661, 22.04345412404097],
          [-83.7211196375813, 22.035498258370172],
          [-83.71253656873364, 22.03581650158328],
          [-83.69640039930005, 22.030724524323933],
          [-83.68884729871411, 22.036452985863107],
          [-83.67992090711255, 22.03390703157303],
          [-83.66893457898755, 22.027541945541984],
          [-83.65588831433911, 22.013856041859114],
          [-83.63769220838208, 21.996985551259044],
          [-83.63219904431958, 21.986161915623683],
          [-83.61846613416333, 21.97979468545543],
          [-83.61022638806958, 21.96355695595898],
          [-83.57967066297192, 21.96037286974987],
          [-83.55014490613598, 21.955278183408367],
          [-83.53538202771801, 21.9600544572045],
          [-83.52817224988598, 21.956870292509606],
          [-83.52130579480786, 21.946998928613173],
          [-83.50413965711255, 21.94476981609939],
          [-83.48079370984692, 21.946043598957527],
          [-83.46568750867505, 21.949228006181862],
          [-83.45367121228833, 21.94668048610777],
          [-83.43959497937817, 21.939356111668953],
          [-83.42311548719067, 21.940311486247797],
          [-83.40217279920239, 21.94859113044251],
          [-83.34277796277661, 21.948909568668796],
          [-83.31393885144848, 21.95177548060968],
          [-83.2651870203938, 21.929483531994183],
          [-83.25111078748364, 21.917062217000808],
          [-83.26347040662426, 21.913558573253617],
          [-83.25179743299145, 21.906232494195095],
          [-83.24046778211255, 21.894446272266993],
          [-83.22501825818676, 21.87819880159592],
          [-83.21883844861645, 21.86609164004727],
          [-83.20338892469067, 21.83964348033821],
          [-83.20613550672192, 21.834544477143005],
          [-83.2215850306477, 21.854302101400844],
          [-83.20235895642895, 21.814784122683502],
          [-83.18381952771801, 21.755486697837267],
          [-83.18450617322583, 21.73507761458308],
          [-83.17832636365551, 21.72168257830501],
          [-83.18656610974926, 21.70318261998345],
          [-83.20441889295239, 21.703820589172608],
          [-83.20029901990551, 21.69106066827388],
          [-83.20373224744458, 21.675747271083114],
          [-83.20716547498364, 21.66107040547591],
          [-83.1996123743977, 21.641286180494696],
          [-83.1556670618977, 21.58894065063358],
          [-83.0622832728352, 21.51358094442707],
          [-82.90023493299145, 21.550627047806632],
          [-82.92632746228833, 21.67064244377647],
          [-83.01213732755136, 21.862592635686326],
          [-82.8548955062623, 21.9135644630992],
          [-82.82674304044198, 21.915475552112923],
          [-82.81713000333261, 21.907193981198887],
          [-82.78623095548105, 21.8899922574097],
          [-82.75327197110605, 21.876611704075522],
          [-82.73198596036386, 21.863229895934058],
          [-82.71516954055762, 21.846185172971573],
          [-82.801686874542, 21.816864763183354],
          [-82.7628868156001, 21.72856349654049],
          [-82.68839036575294, 21.723764569391214],
          [-82.63277207962014, 21.790726290614355],
          [-82.62384568801858, 21.832163118237432],
          [-82.60736619583108, 21.848097164777194],
          [-82.61491929641701, 21.86339217813221],
          [-82.61560594192483, 21.882508641081934],
          [-82.64307176223733, 21.881234289886308],
          [-82.64444505325295, 21.895251526835423],
          [-82.6581779634092, 21.91818585075719],
          [-82.65680467239358, 21.936658037129085],
          [-82.65337144485451, 21.947485445305734],
          [-82.65474473587014, 21.97168490554651],
          [-82.67191087356545, 21.97677900351667],
          [-82.70006333938576, 21.992060200687348],
          [-82.72272264114358, 21.986329944568695],
          [-82.76323472610451, 21.96213297935434],
          [-82.75568162551858, 21.97168490554651],
          [-82.7790275727842, 21.985693235159882],
          [-82.81129991165139, 21.995880242856607],
          [-82.94244920364358, 22.002246751181033],
          [-82.95000230422951, 22.029619479034597],
          [-82.93352281204201, 22.046167864597173],
          [-82.93352281204201, 22.06971415320571],
          [-82.94519578567483, 22.121883835081096],
          [-83.00630723587014, 22.132697086328623],
          [-82.97609483352639, 22.146689473532323],
          [-82.9438224946592, 22.140965483176963],
          [-82.93558274856545, 22.14859741860113],
          [-82.93352281204201, 22.156228940247704],
          [-82.89507066360451, 22.143509507619992],
          [-82.8339592134092, 22.108525144044595],
          [-82.83739244094826, 22.08180396644999],
          [-82.89095079055764, 22.072259463021783],
          [-82.89232408157326, 22.060168833119384],
          [-82.86829148879983, 22.067168797544277],
          [-82.85867845169045, 22.0690778185882],
          [-82.85799180618264, 22.060805207844712],
          [-82.84700547805764, 22.05825969175753],
          [-82.81061326614358, 22.06971415320571],
          [-82.76117478958108, 22.068441481105403],
          [-82.7570549165342, 22.04043979624092],
          [-82.69800340286233, 22.028346446170694],
          [-82.67259751907326, 22.01115938261365],
          [-82.66092454544045, 21.994606906897012],
          [-82.63757859817483, 21.975505496157265],
          [-82.62659227004983, 21.95321726882902],
          [-82.63689195266701, 21.93092554620236],
          [-82.63963853469826, 21.909267385690818],
          [-82.61835252395608, 21.899711267806243],
          [-82.58058702102639, 21.89461440959271],
          [-82.58058702102639, 21.85893130174744],
          [-82.57509385696389, 21.78243748642925],
          [-82.50436936965919, 21.723764569391214],
          [-82.50591053759098, 21.71228507567808],
          [-82.47338015196384, 21.710373339502528],
          [-82.43467485061622, 21.69250508587979],
          [-82.44806924227538, 21.671696917761004],
          [-82.45442260545056, 21.66591954744198],
          [-82.45768569513993, 21.65695140354488],
          [-82.46421332649496, 21.641407915320794],
          [-82.45529285867389, 21.635117404254142],
          [-82.44260217928812, 21.630676087716278],
          [-82.42167137637988, 21.638360363198142],
          [-82.42137624898947, 21.624423116162696],
          [-82.4180408856641, 21.61697499423994],
          [-82.4024482312158, 21.615482618967278],
          [-82.38843267452454, 21.61696394088982],
          [-82.38718347174955, 21.60460901903866],
          [-82.37370586006081, 21.592667235071556],
          [-82.36117401455039, 21.594955839887223],
          [-82.35052987822749, 21.60654889275752],
          [-82.33473981094248, 21.60610872489216],
          [-82.33062835774193, 21.602036263013492],
          [-82.33682786575294, 21.588789908073803],
          [-82.32858811965919, 21.574423479024883],
          [-82.29789174925213, 21.572926250739993],
          [-82.25660728460684, 21.57936225783061],
          [-82.23524105095797, 21.57652815400521],
          [-82.21799476528427, 21.57880002301384],
          [-82.21114003396545, 21.58565431569286],
          [-82.17168962112403, 21.59453608065794],
          [-82.10268174758889, 21.570592190661955],
          [-81.93788682571389, 21.64209285712888],
          [-81.90767442337014, 21.616560962105723],
          [-81.89394179212545, 21.584642729634652],
          [-81.77034532180762, 21.540576928794785],
          [-81.57327806106544, 21.556543266895662],
          [-81.33707200637798, 21.59996281199508],
          [-81.16953050247173, 21.616560962105723],
          [-81.09468614212017, 21.606346941270793],
          [-81.00130235305767, 21.556543266895662],
          [-80.93676307880281, 21.598350776153882],
          [-80.89965757096613, 21.647803962422174],
          [-81.06172715774517, 21.759481374304485],
          [-81.17845689407329, 21.823239276583223],
          [-81.29655992141704, 21.892065912150205],
          [-81.34737168899517, 21.900985453883298],
          [-81.39818345657325, 21.94430099905593],
          [-81.43526231399512, 21.982509645267143],
          [-81.4668480073545, 22.007976364283905],
          [-81.49843370071387, 22.048713598322795],
          [-81.57259141555762, 22.099618646996145],
          [-81.59044419876075, 22.163224138168466],
          [-81.8074241792295, 22.217901869105475],
          [-81.93239366165139, 22.24586828632174],
          [-82.10268174758889, 22.309407555953907],
          [-82.19331895462014, 22.41608843752697],
          [-82.20430528274514, 22.52268744629164],
          [-82.35811387649514, 22.578492244699166],
          [-82.52840196243264, 22.52015032846833],
          [-82.64650498977639, 22.535372336526546],
          [-82.79756700149514, 22.586100240520597],
          [-82.87447129837014, 22.532835451677517],
          [-82.99806748977639, 22.497314172340584],
          [-83.05299913040139, 22.4211664397551],
          [-83.16286241165139, 22.314489449931102],
          [-83.27272569290139, 22.220444501199708],
          [-83.39357530227639, 22.131424982194133],
          [-83.49245225540139, 22.128880739465387],
          [-83.58858262649514, 22.146689473532323],
          [-83.86324082962014, 22.146689473532323],
          [-83.94563829055764, 22.11615883676264],
          [-83.96486436477639, 22.052532113014678]]]),
    cuba_east_cut = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-80.021700861283, 21.77429293155287],
          [-80.01758098661789, 21.744957796803508],
          [-79.9997281981424, 21.725822958877373],
          [-79.9750089528276, 21.71561667074816],
          [-79.95509622716938, 21.689459752237237],
          [-79.94067666715921, 21.666488784959974],
          [-79.88231178236758, 21.635216867328015],
          [-79.85553260001629, 21.625642477347032],
          [-79.8047208180846, 21.603299767467053],
          [-79.77107517864457, 21.58286912707266],
          [-79.70515719114286, 21.53561223524862],
          [-79.6351193278321, 21.468532138680935],
          [-79.62584448769691, 21.441691501505726],
          [-79.6129703507564, 21.412289988107947],
          [-79.59529387372731, 21.37520753442496],
          [-79.5884274115568, 21.36050026732856],
          [-79.58275882599449, 21.331238664559223],
          [-79.57718001318138, 21.312130097864088],
          [-79.57439169573986, 21.302255607897973],
          [-79.56817136837287, 21.287581651430845],
          [-79.57177225930165, 21.276703766549367],
          [-79.57151332893504, 21.25494814492705],
          [-79.56245925043409, 21.235110208857325],
          [-79.5537518040199, 21.219747671509527],
          [-79.51770291119979, 21.20115244698221],
          [-79.49693097606776, 21.202272617615737],
          [-79.47513088515383, 21.19571088769664],
          [-79.46603332769176, 21.182425778923506],
          [-79.4662044910756, 21.173302378453585],
          [-79.46551784441091, 21.167859798533495],
          [-79.46689116541104, 21.163217407871553],
          [-79.46895106902288, 21.15889511350802],
          [-79.46998103681547, 21.15793457934329],
          [-79.46826442256635, 21.156013492131784],
          [-79.45521815431856, 21.14672788593418],
          [-79.44800837445852, 21.136481024172063],
          [-79.43084223208054, 21.13007637584466],
          [-79.40646630993807, 21.124952458024072],
          [-79.39410668754304, 21.13616079867454],
          [-79.37282067103979, 21.133919198483923],
          [-79.3535945916403, 21.1352001172157],
          [-79.34672813467567, 21.130076376360975],
          [-79.33505515782431, 21.119187839091243],
          [-79.32097892111003, 21.11790678221822],
          [-79.30449942440501, 21.105415897381803],
          [-79.29179647901584, 21.092923961384155],
          [-79.27186960943042, 21.060977753539476],
          [-79.28148264904814, 21.047200416089005],
          [-79.28216929470308, 21.04047148557173],
          [-79.24509042721868, 21.019962394224493],
          [-79.23410409613814, 21.01836000264861],
          [-79.22517770218592, 21.027653634377273],
          [-79.21831124524084, 21.022526185116487],
          [-79.20183174861407, 21.018680482481756],
          [-79.19599526022343, 21.016757593959337],
          [-79.19153206322667, 21.017078077122108],
          [-79.18603889768245, 21.01515516793587],
          [-79.17951576357939, 21.008104288769225],
          [-79.17230598379093, 21.002335139777692],
          [-79.16612617255015, 20.99880943893991],
          [-79.14690009312217, 20.98342358812234],
          [-79.12115087960528, 20.959700630211834],
          [-79.1081046114184, 20.94399011400078],
          [-79.09711828035728, 20.9439901140299],
          [-79.09299840620191, 20.941424975183306],
          [-79.08613194928267, 20.939180442647906],
          [-79.08269872081301, 20.93437061674994],
          [-79.07308568110551, 20.922826404424185],
          [-79.048023113371, 20.918978136045443],
          [-79.03257358529594, 20.906470581408463],
          [-79.01300418309042, 20.899093842261955],
          [-78.99034487526842, 20.883697740249143],
          [-78.98004518989877, 20.877282231774696],
          [-78.96631227608152, 20.874074374792315],
          [-78.96356569331508, 20.870545652991453],
          [-78.96493898469022, 20.865092010857303],
          [-78.96596895321483, 20.85514662466208],
          [-78.96081911052276, 20.842312896472713],
          [-78.95601259068813, 20.84006688149987],
          [-78.94708619672112, 20.848409053879916],
          [-78.94468293680045, 20.84327546407267],
          [-78.94124970834315, 20.836216492147766],
          [-78.93472657428764, 20.839425156794487],
          [-78.92030701479142, 20.840387742857466],
          [-78.91447052642194, 20.83621649216172],
          [-78.90897736089813, 20.831724246771568],
          [-78.90623077813498, 20.824343838407746],
          [-78.897991029852, 20.819209428004203],
          [-78.88151153328914, 20.81632124526309],
          [-78.86228545396817, 20.810865637951732],
          [-78.85267241431032, 20.80476796082892],
          [-78.82074338973757, 20.79181605031538],
          [-78.8190267755212, 20.782828778920898],
          [-78.81284696431807, 20.778013949134856],
          [-78.79739743631211, 20.7674207832357],
          [-78.76890164022008, 20.750405962524788],
          [-78.74624233245159, 20.758753094969116],
          [-78.70916346522874, 20.753616452523012],
          [-78.65285851864232, 20.768383828731096],
          [-78.62813927396259, 20.72728842192415],
          [-78.59037376110697, 20.71444381828795],
          [-78.54642843702459, 20.70994794958642],
          [-78.51346944396558, 20.706736533116533],
          [-78.48669026197167, 20.728572821794117],
          [-78.46334430846541, 20.740774082289835],
          [-78.44343158335911, 20.75939516192289],
          [-78.4338185434914, 20.793420862673738],
          [-78.4042927787968, 20.797914249704768],
          [-78.39399309354918, 20.78314976067055],
          [-78.35760087201963, 20.77929791709189],
          [-78.34730118677948, 20.765173650835507],
          [-78.3328816274511, 20.745269034814424],
          [-78.32189529654151, 20.729857210367292],
          [-78.32395523386532, 20.69710187484315],
          [-78.33356827368819, 20.673976200550538],
          [-78.35348099888469, 20.64377904683099],
          [-78.35622758184178, 20.616146610080744],
          [-78.35554093627198, 20.600078934402344],
          [-78.34867447944451, 20.59300862038659],
          [-78.34455460542308, 20.578867009001325],
          [-78.33494156583299, 20.573724279824944],
          [-78.32395523500419, 20.55122280310767],
          [-78.31640213261899, 20.528718012946932],
          [-78.31434219562837, 20.51971516978715],
          [-78.3047290965612, 20.51955460487756],
          [-78.29717606020698, 20.51746437287447],
          [-78.30404251338976, 20.50395892083311],
          [-78.28343515624258, 20.490624950541434],
          [-78.26386546307225, 20.478808590313893],
          [-78.24344016321929, 20.470324357081466],
          [-78.22533248491985, 20.46800960091109],
          [-78.21009912668976, 20.470710290901696],
          [-78.19321256420335, 20.4714162794408],
          [-78.1694599561364, 20.467616902579213],
          [-78.14886064647693, 20.46247046592309],
          [-78.13032113910506, 20.455072669232194],
          [-78.10010877604914, 20.446386618548203],
          [-78.07676284462443, 20.438665790241583],
          [-78.06783509161421, 20.429661300605122],
          [-78.05959509678759, 20.418726014846758],
          [-78.05170029680912, 20.410352759139535],
          [-78.03659408773764, 20.39587247979192],
          [-78.01084486611377, 20.374310439551266],
          [-77.98849485256257, 20.360154820546995],
          [-77.98043490003676, 20.357256864389722],
          [-77.96756851639394, 20.358864564011608],
          [-77.9589039797734, 20.359185736105236],
          [-77.95023940713011, 20.359506480818254],
          [-77.94144419106351, 20.361437558295854],
          [-77.9305889156258, 20.361436855918864],
          [-77.92158090170653, 20.352423488082955],
          [-77.91668113745628, 20.343404405601046],
          [-77.91388782238592, 20.335997811931076],
          [-77.90974436821355, 20.325855857639183],
          [-77.90594356244857, 20.319576085659282],
          [-77.89860169112372, 20.31007514148709],
          [-77.89057288609058, 20.307979971735502],
          [-77.88584502804768, 20.302179261057496],
          [-77.88071123186374, 20.298323585627028],
          [-77.87445003425623, 20.29647455841585],
          [-77.866815633322, 20.296234720639653],
          [-77.85368505144001, 20.29921836565651],
          [-77.84851420167264, 20.29738797430935],
          [-77.8440301315631, 20.29491344187811],
          [-77.83679984750434, 20.290184674495713],
          [-77.82957036507182, 20.27804910234439],
          [-77.81908733140348, 20.251582386007737],
          [-77.81202824873664, 20.2357440199339],
          [-77.80773947281831, 20.22152282125039],
          [-77.78440833135355, 20.204984295289773],
          [-77.77756172926337, 20.171045204605072],
          [-77.79819825024633, 20.14956985168561],
          [-77.79964584646487, 20.13884952162094],
          [-77.78469235406926, 20.136747895987984],
          [-77.76779257974786, 20.13052527029404],
          [-77.75501214611599, 20.142352453975462],
          [-77.74051393908142, 20.147086434915927],
          [-77.72464189668695, 20.14795130641985],
          [-77.70372479236805, 20.151409002189702],
          [-77.63305709640022, 20.13122451783677],
          [-77.59199098492783, 20.10114621317945],
          [-77.56589844585592, 20.07922078282237],
          [-77.52881958552251, 20.066966986820727],
          [-77.02825482885738, 20.310572159734246],
          [-76.94036417149802, 20.66819421022386],
          [-77.07769330914988, 20.670764004602106],
          [-78.70641688010475, 21.697698227118224],
          [-79.95885863570581, 21.78954017135712]]]),
    not_reef = 
    /* color: #ff2705 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-77.6908298412265, 17.939251182238742],
           [-78.014926520914, 17.68952937580111],
           [-78.03277930411713, 17.53507699179179],
           [-77.9215427318515, 17.456491321064465],
           [-77.57858671943977, 17.474591134093934],
           [-77.28195586006477, 17.401221189510085],
           [-77.18307890693977, 17.422187041414787],
           [-77.3067247743465, 17.71316271026819],
           [-77.28686729336015, 17.7779688370626],
           [-77.25082113799874, 17.88223019866347],
           [-77.36789419708077, 17.944952557251366],
           [-77.66301925382572, 17.959616187218742]]],
         [[[-83.01690576170415, 24.88280012027823],
           [-82.65435693357915, 24.773120340500828],
           [-82.48406884764165, 24.743190828730295],
           [-82.35346593519307, 24.716159508277997],
           [-82.04447545667745, 24.650025297105987],
           [-81.90714635511495, 24.62256306267632],
           [-81.75471105238057, 24.66812210467808],
           [-81.63248815198995, 24.73175208416546],
           [-81.57137670179463, 24.777271217309117],
           [-81.48976051950895, 24.803427689862843],
           [-81.4320822968527, 24.854528085146324],
           [-81.3277121796652, 24.880693287992354],
           [-81.2672873749777, 24.8582663103129],
           [-81.2233420624777, 24.822125402353972],
           [-81.2013694062277, 24.753553339479954],
           [-81.18900978708707, 24.731103346698955],
           [-80.88551247263395, 24.840820293007475],
           [-80.8553000702902, 24.889413791286202],
           [-80.77564919138395, 24.885676508121424],
           [-80.64381325388395, 24.99525643507288],
           [-80.57926857614957, 25.15447107454967],
           [-80.5641623749777, 25.33706310272239],
           [-80.89545732346333, 26.187344644893876],
           [-81.56562333908833, 27.55928025699306],
           [-83.21357255783833, 30.156868837088904],
           [-85.32294755783833, 30.422491697404215],
           [-86.48749833908833, 29.83336269866816],
           [-86.00409990158833, 28.779561312249186],
           [-84.57587724533833, 28.760300974368253],
           [-83.67499833908833, 27.129898289111296],
           [-83.19159990158833, 25.276847798301855]]],
         [[[-79.85915135145622, 27.093741751695887],
           [-79.71083592176872, 27.8443089332789],
           [-80.21071385145622, 28.666863837682545],
           [-80.77650974989372, 28.974878094316022],
           [-81.64442967176872, 29.066144120228167],
           [-81.67189549208122, 28.541473334329403],
           [-81.34779881239372, 27.751983553925765],
           [-81.16652439833122, 26.84405635406664],
           [-80.97975682020622, 26.47095321618231],
           [-80.77101658583122, 26.06703365755045],
           [-80.22170017958122, 26.534859871299503],
           [-80.21071385145622, 26.79503360454802],
           [-80.26564549208122, 27.030149059506883],
           [-79.92506932020622, 27.088851286645333]]]]),
    cuba_west_cut2 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-84.00071513329121, 22.65069839505786],
           [-84.02680766258808, 22.703917561076125],
           [-84.07487284813496, 22.73305263182036],
           [-84.65028178368183, 22.413496442996383],
           [-84.87138163719746, 22.13009983545922],
           [-85.02793681297871, 21.940426467212085],
           [-84.99223124657246, 21.84740670014392],
           [-84.93317973290058, 21.867799785873586],
           [-84.76701152000996, 21.885641346620098],
           [-84.61251628075215, 21.93915263404405],
           [-84.48480021629902, 21.971631814988264],
           [-84.34884440575215, 21.9652639331799],
           [-84.21838175926777, 22.013652670975606],
           [-84.22387492333027, 22.102746561944453],
           [-84.3186320034084, 22.15108828192084],
           [-84.35983073387715, 22.279494719980292],
           [-84.31039225731465, 22.386198492016938],
           [-84.12225138817402, 22.5372220930426]]],
         [[[-81.37284740513017, 23.175408597761],
           [-81.27946361606767, 22.978318320127766],
           [-77.21399354428203, 21.391977558005646],
           [-77.05194520443828, 21.49423619885392],
           [-77.10550355404766, 21.58237660116005],
           [-77.33758973568828, 21.69598576072952],
           [-77.53809022396953, 21.870692111869374],
           [-77.74820374936016, 22.01335913497865],
           [-78.07504701107891, 22.29953259967429],
           [-78.23434876889141, 22.41002983075926],
           [-78.37030457943828, 22.482376979819797],
           [-78.56805848568828, 22.496334363575357],
           [-78.68478822201641, 22.59399658887468],
           [-78.87292909115703, 22.647237731344028],
           [-78.99377870053203, 22.658643864396936],
           [-79.07892274350078, 22.66244569813558],
           [-79.18603944271953, 22.609210447129517],
           [-79.21075868100078, 22.601603728217658],
           [-79.24646424740703, 22.59399658887468],
           [-79.33710145443828, 22.625690228598167],
           [-79.54172181576641, 22.76125636441152],
           [-79.58292054623516, 22.803039383628686],
           [-79.61313294857891, 22.79670944588222],
           [-79.80127381771953, 22.948546680031033],
           [-79.86169862240703, 22.963721057856812],
           [-79.95920228451641, 22.95486954432739],
           [-79.98254823178203, 22.986479431766206],
           [-80.02512025326641, 23.023137635137743],
           [-80.07867860287578, 23.053467923824456],
           [-80.11987733334453, 23.05852230796195],
           [-80.16450929135235, 23.076842859219923],
           [-80.20914124936016, 23.112213411807264],
           [-80.2826123186961, 23.141892220777326],
           [-80.35882997006328, 23.13368384544452],
           [-80.44260072201641, 23.145680532201162],
           [-80.47899293393047, 23.17977051520663],
           [-80.50371217221172, 23.17219571342821],
           [-80.57718324154766, 23.186082522493916],
           [-80.67125367611797, 23.193656538111366],
           [-80.71451234311016, 23.18797606660814],
           [-80.8209423968211, 23.20943435942673],
           [-80.88823365658672, 23.24161533763605],
           [-80.93301685304985, 23.258813371472673],
           [-80.99962146730766, 23.243672300074543],
           [-81.03189380617485, 23.206443195267674],
           [-81.06965930910454, 23.19255850013176],
           [-81.10673816652641, 23.18372203433637],
           [-81.13008411379204, 23.193820804730862],
           [-81.14862354250297, 23.198238776987115],
           [-81.23994739504204, 23.15973439973191],
           [-81.31822498293266, 23.12058745736102]]]]),
    cuba_west_cut2x = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-84.8185099330959, 21.981819831970586],
          [-84.7580851284084, 21.969084696523737],
          [-84.62762248192402, 22.022564585171153],
          [-84.46282756004902, 22.086204799716267],
          [-84.47656047020527, 22.214670514951926],
          [-84.4230021205959, 22.34301870511986],
          [-84.44360148583027, 22.378579502697264],
          [-84.4999064174709, 22.363340272664345],
          [-84.4779337612209, 22.4445968722333],
          [-84.5438517299709, 22.412861667818987],
          [-84.61663615379902, 22.34174850875155],
          [-84.65508830223652, 22.25407703901961],
          [-84.80340373192402, 22.018745262013894]]]),
    land_dist = ee.Image("projects/coral_atlas/global_datasets/mod44w6_global_distToLand"),
    west = 
    /* color: #ef3dff */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-170.05421307096222, 16.6451400858547],
          [-169.26319744596222, 16.276379337331182],
          [-166.52210857877472, 22.956876785083164],
          [-161.24867107877472, 21.900749850607188],
          [-159.88636639127472, 23.118638908420024],
          [-168.41175701627472, 25.956563835498525],
          [-172.8005727562403, 27.17740555675168],
          [-178.03578045377466, 29.409455643699086],
          [-179.88075843416314, 29.138941969116722],
          [-179.21131756314966, 27.701525535727267],
          [-174.21253826627472, 25.084107254287407],
          [-168.27992107877472, 23.48189007138448]]]),
    east = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-160.10125396109765, 22.64228527575897],
          [-161.24383208609765, 21.675686283465996],
          [-155.13543364859765, 17.913808970579183],
          [-153.16888091422265, 20.074384925080125],
          [-159.26629302359765, 23.138220615639327]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
///////////////////////////////
// Global coral atlas project - Hawaii
// Contact: mitchell.lyons@gmail.com
// Region coordinator: Paul Tudman (tuddy117@gmail.com)
// Description:
// - Developing a process to combine OBIA and supervised classification
// - This script loads the raw classification data (from *_classification script)
// - Then applied some cleanup and object-based relational rules
///////////////////////////////

// Table of contents
// 1. Setting constants
// 2. Data loads & vis
// 3. OBIA clean up rules
// 4. Export

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
var param_module = require('users/mitchest/global_reefs:Modules/reef_params')

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.hawaii  //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// 1. Setting constants

// These will get written to the asset metadata 

var vars = {
  
  // analysis type
  geomorphic: true, // map geomorphic zonation (when set to true) or benthic habitat (when set to false)

  // analysis parameters
  image_data_scale: sensor_params.pixel,
  small_object_geo: ee.Number(400).int(), // smallest object szie in pixels (geomorphic)
  small_object_benthic: ee.Number(130).int(), // smallest object szie in pixels (benthic)
  smooth_radius: ee.Number(3), // radius in pixels for initial smooth 
  dist_to_land: 2000, //distance to land in meters to disallow reef crest, and convert to terrestrial reef flat
  wave_height: 0.4, //cut off height for waves in metres, Hs95 threshold
  
  //############
  /* This is a stop-gap until we figure out how to chain together vectorisations in GEE
  - GEOMORPHIC: for large regions, the first pass does the small object filter, then the second pass does the OBIA clean
  -           : *in an ideal world* for smaller regions, can do both at once, but not handling that at present
  -           : 1st pass - obia_2nd_pass + obia_clean set to false (fast clean not used in this pass, can be left as true)
  -           : 2nd pass - obia_2nd_pass + obia_clean set to true (review any OBIA rules)
  -           : 3rd pass - manual_clean set to true 
  - BENTHIC : can do both at once
            : production run should have obia_2nd_pass and obia_clean set to true (so it uses best geo map) */
  obia_2nd_pass: true,
  obia_clean: true, // run object-based relationship rules + small object clean up
  fast_clean: true, // run a faster (but less precise) version of the OBIA clean; only applies to geomorphic (`obia_clean: true` also)
  smooth_output: false, // run smoother over final output (includes noise removal) (should be false for second pass)
  //############
  
  // apply any manual touch ups
  manual_clean: true,
  
  // results/layers to show
  export_small_area: false,
  show_eg_area: false, // constrain the map add to the corresponding example_area polygon geomtery (you can change that)
                              // - you can either set this, or have it false and just navigate to the area you want to see (keeping in mind ALL tiles in the zoom area will calcualte)
  reproject_display: true,
  //reproject_res: ee.Number(sensor_params.pixel).pow(2),
  
  // export options
  do_export: false, // export the results?
  geomorph_output_name: region_params.sname + '_geo-clean',
  benthic_output_name: region_params.sname + '_benthic-clean',
  asset_output: region_params.asset // asset path

}

/*
############################
MANUAL ADDITION
############################
*/

// This can be hand drawn or imported from elsewhere, or could just be a big box
// Reef_boundary defines export extent and can be used to clip out unwanted areas
reef_boundary = ee.FeatureCollection([ee.Feature(east),ee.Feature(west)]).geometry()
Map.addLayer(reef_boundary, {}, "Manual reef outline", false)

if (vars.manual_clean) {
  
  vars.obia_2nd_pass = true
  vars.obia_clean = false
  vars.fast_clean = false
  vars.smooth_output = false
  vars.do_export = false
  
  print("Doing manual clean ups - make sure this is what you want to do")
  print("Export the manual map, check 'manual' layer and ignore the 'final' map layer")
  
  var depth = ee.Image(region_params.pixels).select('depth')
  var depth_cont = depth.lt(900)
  Map.addLayer(depth_cont, {}, "depth contour", false)
  
 // update these values based on inspection of the layer
  Map.addLayer(waves.lt(vars.wave_height), {}, vars.wave_height + "m Hs95 threshold", false)
  
  // add no reef and river mouth here (check east africa)
  var baha_img = ee.Image().byte().paint(ee.Feature(baha_cut, {zone: 1}), "zone").clip(baha_cut)
  var baha_extent = ee.Image().byte().paint(ee.Feature(bahamas_extent, {zone: 1}), "zone").clip(bahamas_extent)
  var cuba_west = ee.Image().byte().paint(ee.Feature(cuba_west_cut, {zone: 1}), "zone").clip(cuba_west_cut)
  var cuba_west2 = ee.Image().byte().paint(ee.Feature(cuba_west_cut2, {zone: 1}), "zone").clip(cuba_west_cut2)
  var cuba_west2x = ee.Image().byte().paint(ee.Feature(cuba_west_cut2x, {zone: 1}), "zone").clip(cuba_west_cut2x)
  var cuba_east = ee.Image().byte().paint(ee.Feature(cuba_east_cut, {zone: 1}), "zone").clip(cuba_east_cut)
  
  
  // define the manually edited map
  var man_geo = ee.Image(region_params.geo_map_clean)
  
  
  // WAVE clean ############# ---> (to be integrated into RF classifier when feasible)
  // remove
  man_geo = man_geo.where({
    test: waves.lte(vars.wave_height)
               .and(man_geo.eq(22)),
    value: ee.Image(21)
  })
  
  //BAHAMAS clean (can delete all these - see East AFrica for examples)
  // deep -> deep lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(depth_cont)
                     .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // deep -> deep lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(baha_img.eq(1))
                     .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // slope -> shallow lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(depth_cont)
                     .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  })
  
  // slope -> shallow lagoon
  man_geo = man_geo.where({
    test: baha_extent.eq(1)
                     .and(baha_img.eq(1))
                     .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  })
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: baha_img.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  })
  

  // CUBA WEST CLEAN
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24)).or(man_geo.eq(13)).or(man_geo.eq(14))),
    value: ee.Image(11)
  })
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: cuba_west.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  })
  
  // CUBA WEST 2 CLEAN
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_west2.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  })
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_west2.eq(1)
                   .and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  })
  
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_west2x.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  });
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_west2x.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(11)
  });
  
  
  //CUBA EAST
  // deep classes -> deep lagoon
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(2).or(man_geo.eq(23))),
    value: ee.Image(12)
  });
  
  // shallow classes -> shallow lagoon
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                   //.and(depth_cont)
                   .and(man_geo.eq(21).or(man_geo.eq(22)).or(man_geo.eq(24)).or(man_geo.eq(13)).or(man_geo.eq(14))),
    value: ee.Image(11)
  });
  
  // reef crest -> TRF
  man_geo = man_geo.where({
    test: cuba_east.eq(1)
                  .and(man_geo.eq(15)),
    value: ee.Image(16)
  });
  
  
  /*// LAND mask clean ############# ---> to be moved to first stage clean up
  var land_mask = mod_land.select('water_mask').mean().eq(0)

  var land_mask_buff = ee.Image(1)
    .cumulativeCost({
      source: land_mask, 
      maxDistance: 2000,
      geodeticDistance: false,
    }).lt(2000).unmask(0)
  
  Map.addLayer(land_mask_buff, {}, "Land mask", false)
  
  // reef crest close to land -> ORF
  man_geo = man_geo.where({
    test: land_mask_buff.eq(1)
                        .and(man_geo.eq(15)),
    value: ee.Image(14)
  })*/
  
  
  // Add the manual layer to the map
  Map.addLayer(man_geo, map_palettes.geo, 'Manually cleaned GEO', false);
  var output_name = (vars.manual_clean) ? output_name + "-man" : output_name;
  // Export
  Export.image.toAsset({
    image: man_geo,
    description: vars.geomorph_output_name,
    assetId: vars.asset_output + 'in_out/' + vars.geomorph_output_name,
    region: reef_boundary,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
  
}
/*
############################
*/

/* TRIAL #######
    Looks like with the sentinel/ls8 depth we can try to retain full resolution,
    because theres more (good) data either side of the depth threshold/marginal areas
  ##############
  
  Used to be --> output resolution (bigger for geomorphic) - relates back to object size and the min mapping unit defined in classification stage
*/
//if (vars.geomorphic) vars.image_data_scale = ee.Number(sensor_params.pixel)//.pow(2)



// 2. Data loads & vis

// load input data
if (vars.obia_2nd_pass) {
  // if it's 2nd pass, you want to make sure you're loading the latest geo clean map
  // - could change the path in reef_params to a list, check if it length is > 1, then take last element??
  
  // OR run a separate operation that joins the east/west clean1 maps via EPSG:3832, load via one ee.Image(), then save here as EPSG:4326
  //var geo_map = geo1.unmask(0, false).add(geo2.unmask(0,false)).selfMask().clip(swp_extent)
  
  var geo_map = ee.Image(region_params.geo_map_clean);
} else {
  //print(ee.List(region_params.geo_map).length())
  // Run check to see if the region has been split into multiple areas
  if (ee.List(region_params.geo_map).length().getInfo() > 1) {
    var geo_map = ee.Image(region_params.geo_map[0]).unmask(0, false)
             .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
             .selfMask();
  } else {
    var geo_map = ee.Image(region_params.geo_map);
  }
}

//var benthic_map = (vars.obia_2nd_pass) ? ee.Image(region_params.benthic_map_clean) : ee.ImageCollection(region_params.benthic_map).mosaic()
//var benthic_map = ee.Image(region_params.benthic_map)

// Run check to see if the region has been split into multiple areas
if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
    var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
             .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
             .selfMask();
} else {
    var benthic_map = ee.Image(region_params.benthic_map);
}


var depth = ee.Image(region_params.pixels).select('depth');
var image = ee.Image(region_params.image);

var display_pal = (vars.geomorphic) ? map_palettes.geo : map_palettes.benthic;
//Map.centerObject(eg_area, 11)
Map.addLayer(depth, {min:0, max:2500}, 'Depth data', false);
Map.addLayer(image, {bands: ['b3','b2','b1'], min:200, max:1200}, 'Dove low tide', false);

if (vars.geomorphic) {
  if (vars.obia_2nd_pass) {
    if (ee.List(region_params.geo_map).length().getInfo() > 1) {
      var geo_map_display = ee.Image(region_params.geo_map[0]).unmask(0, false)
                       .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
                       .selfMask();
    } else {
    var geo_map_display = ee.Image(region_params.geo_map);
    }
    Map.addLayer(geo_map_display, display_pal, 'Raw GEO classification', false);
  } else {
    Map.addLayer(geo_map, display_pal, 'Raw GEO classification', false);
  }
}
if (!vars.geomorphic) {
  Map.addLayer(geo_map, map_palettes.geo, 'Clean GEO classification', false);
  Map.addLayer(benthic_map, display_pal, 'Raw BENTHIC classification', false);
}

// 3. Object-based re-classificaiton and cleaning

/*

// if we want to retain the land/waves flags, need to add them in before makign the mask

######## Not that straight forwards - the land and bright masks are a LOT of not land and not breakign waves... =(

// add in land, for geomorphic clean up rules
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-2).and(globcover.select('landcover').neq(210)),
    value: ee.Image(1)
  })
  
  // change -3 to reef rim, hope that clouds have been handleded by masking
  geo_map = geo_map.unmask(0).where({
    test: depth.eq(-3),
    value: ee.Image(15)
  })
  
  // remask
  geo_map = geo_map.updateMask(geo_map.gt(0))

*/

/* OUTPUT EXTENT
  - to the mapping extent just so it doesn't balloon out
  - to the 'reef boundary' extent for noise/deep removal
*/  
var class_extent_mask = geo_map.gt(0)


/*

########
Initial small object clean
 - this was originally at the end, but we needed to massively reduce the number of objects to 
   iterate through in the OBIA cleaning, so this happens first now
 - future collabs with google might fix this, but need to change the parallel serialisation of vector procesing
 
 - includes a possible special case for:
      - geomorphic to clean up turbid areas over size threshold; fix shallow vs. deep lagoon
      - benthic to allow breaking waves (temporal class) to grow into surrounding class
########

*/

if (vars.geomorphic && !vars.obia_2nd_pass) {
  
  // make a smooth map with masked area as a value
  var smooth_map = geo_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 2
                      })
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = geo_map.where({
    test: geo_map.connectedPixelCount(vars.small_object_geo, false).lt(vars.small_object_geo), 
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask)
  
  // shallow lagoon > 5m == deep lagoon
  clean_map = clean_map.where({
    test: clean_map.eq(11)
                   .and(depth.gt(500)),
    value: ee.Image(12)
  })
  
  /*// deep lagoon == deep (to hard to differentiate deep water vs. deep lagoon effectively over large areas)
  clean_map = clean_map.where({
    test: clean_map.eq(12),
    value: ee.Image(2)
  })*/
  
  // deep water in depth data == deep (s2 + ls8 data should be good enough for this)
  clean_map = clean_map.where({
    test: depth.gt(2000),
    value: ee.Image(2)
  })
  
  
  // LAND mask cleaning
  Map.addLayer(land_dist.lte(vars.dist_to_land), {}, "Land mask", false)
  
  // reef crest close to land -> TRF
  clean_map = clean_map.where({
    test: land_dist.lte(vars.dist_to_land)
                   .and(clean_map.eq(15)),
    value: ee.Image(16)
  })
  
  // TRF far from land -> ORF
  clean_map = clean_map.where({
    test: land_dist.gt(vars.dist_to_land)
                   .and(clean_map.eq(16)),
    value: ee.Image(14)
  })
  
  
  
  /*//CLEAN UP SMALL (but slightly larger) TURBID AREAS
  var smooth_noturbid = clean_map
                          .updateMask(clean_map.neq(3))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(1.5),
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          })
  
  clean_map = clean_map.where({
    test: clean_map.eq(3).connectedPixelCount(vars.small_object_geo.multiply(10), false).lt(vars.small_object_geo.multiply(10)), 
    value: smooth_noturbid
  }).updateMask(class_extent_mask)*/
}


if (!vars.geomorphic) {
  
  // make a smooth map with masked area as a value, and without temporal class (basically breaking waves)
  var smooth_map = benthic_map
                      //.unmask(99)
                      .focal_mode({
                        radius: vars.smooth_radius, // relates to smoothness required
                        kernelType: 'circle', units: 'pixels', iterations: 1
                      })
  //smooth_map = smooth_map.updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  
  //replace small objects with smooth underneath
  var clean_map = benthic_map.where({
    test: benthic_map.connectedPixelCount(vars.small_object_benthic, false).lt(vars.small_object_benthic),
    value: smooth_map
  //}).updateMask(smooth_map.neq(99)).updateMask(class_extent_mask)
  }).updateMask(class_extent_mask)
  
  
  /*// CLEAN UP ALL TEMPORAL AREAS
  var smooth_notemp = benthic_map
                          .updateMask(benthic_map.neq(2))
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(2),
                            kernelType: 'circle', units: 'pixels', iterations: 3
                          })
  
  
  clean_map = clean_map1.where({
    test: benthic_map.eq(2), 
    value: smooth_notemp
  }).updateMask(clean_map1.gte(0))
  
  // this catches any left over unmasked temporal, and assigned it back to temporal
  clean_map = clean_map.where({
    test: clean_map.unmask(99).eq(99).and(clean_map1.eq(2)),
    value: ee.Image(2)
  })*/
  
}



if (vars.geomorphic && vars.obia_2nd_pass) {
  var clean_map = geo_map
}

Map.addLayer(clean_map, display_pal, 'Clean map - init smooth/loaded', false)

if (vars.obia_clean) {
  
  if (vars.geomorphic && !vars.fast_clean) { // SHOULD TRY TO PUT THIS OUT TO A MODULE TO KEEP THE RULES THE SAME EVERYWEHRE?
    
    // #########
    // THE PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_properties = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
      // reduce the classes in the buffer zone
      var diff_classes = ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.frequencyHistogram(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        }).get('classification')
      )
      // calculate the percentages
      var diff_sum = diff_classes.toArray().reduce(ee.Reducer.sum(), [0]).get([0])
      var diff_percs = diff_classes.map(function(k,v){return(ee.Number(v).divide(diff_sum).multiply(100).toUint8())})
      
      /* NOW, we can try to do the class logic right here (see /users/mitchest/global_reefs/obia_dev),
         or we can return the neighbour % and do image logic via (painted) rasters */
      
      return(f.set(diff_percs))
    }
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours = function() {
      // reduce map to vectors
      var map_fc = clean_map
            .updateMask(segment_id).updateMask(clean_map.eq(classn)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            })
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_properties))
    }
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
    //Map.addLayer(segment_id.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))))
    Map.addLayer(clean_map.updateMask(segment_id).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    //var classn = ee.Number(15) // one class
    var classn = clean_map.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)), // shallow L 
      value: ee.Image(99) // 99 ensures it's ignored in logic
    })
    
    // Minimum size of object to reclass based on neighbourhood
    var max_size = ee.Number(1000).divide(vars.image_data_scale).pow(2) // the first number is the square dimension of the desired min size
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours()
    
    // #########
    // REEF RIM
    // #########
    
    var focus_class = ee.Number(15); //RR
    
    // start the object-based neighbourhood rules
    // paint out to rasters (only paint the layers needed)
    var objsize = ee.Image(30000).paint(map_fc_neighbours, 'count').rename('count');
    //var nb24 = ee.Image().byte().paint(map_fc_neighbours, '24').unmask(0).rename('nb24') //OCL
    var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22'); //SL ex
    var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21'); //Sl sh
    var nb16 = ee.Image().byte().paint(map_fc_neighbours, '16').unmask(0).rename('nb16'); //TRF
    var nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15'); //RR
    var nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14'); //ORF
    var nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13'); //IRF
    //var nb3 = ee.Image().byte().paint(map_fc_neighbours, '3').unmask(0).rename('nb3') //Turbid
    
    // RR surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    });
    
    // RR surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    });
    
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    });
    
    // RR with decent border to TRF --> TRF (often dark, probably seagrass)
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(40)),
      value: ee.Image(16)
    });
    
    /*// RR surrounded by OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb24.gt(75)),
      value: ee.Image(24)
    })*/
    
    /* with 2nd/3rd pass method, we don't really need this
    // RR surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb13.add(nb14).gt(75))
              .and(nb21.add(nb22).lte(0)), // to not get rid of complex reef rims (if touching slope, it's probably RR)
      value: ee.Image(13) // could try assigning to a place-holder, then deal with at the end?
    })*/
    
    /*// small RR objects touching OCL + stuff --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(objsize.lte(max_size))
              .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
              .and(nb24.gt(1)),
      value: ee.Image(14)
    })*/
    
    // ####
    // ORF
    // ####
    
    focus_class = ee.Number(14); // ORF
    
    //classn = ee.Number(14)
    //map_fc_neighbours = reduce_neighbours()
    //var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22') //SL ex
    //var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21') //Sl sh
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    //var nb1 = ee.Image().byte().paint(map_fc_neighbours, '1').unmask(0).rename('nb1') //Land
    
    // ORF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    });
    
    // ORF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    });
    
    // ORF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    })
    
    // ORF touching slope and RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb21.gt(0).or(nb22.gt(0)))
              .and(nb15.gt(0)),
      value: ee.Image(15)
    })
    
    /*// ORF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // IRF
    // ####
    
    focus_class = ee.Number(13) // IRF
    
    //classn = ee.Number(13)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    
    // IRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // IRF surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })
    
    // IRF surrounded by RR --> RR
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb15.gt(85)),
      value: ee.Image(15)
    })
    
    /*// IRF touching land --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.gt(10)),
      value: ee.Image(16)
    })*/
    
    // ####
    // TRF
    // ####
    
    focus_class = ee.Number(16) // TRF
    
    //classn = ee.Number(16)
    //map_fc_neighbours = reduce_neighbours()
    //nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15') //RR
    //nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14') //ORF
    //nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13') //IRF
    
    // TRF surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // TRF surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // TRF surrounded by IRF + ORF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.add(nb14).gt(75)),
      value: ee.Image(13)
    })
    
    /*// TRF not touching land --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb1.lt(10)),
      value: ee.Image(13)
    })*/
    
    
    // ####
    // LAGOONS
    // ####
    
    var nb11 = ee.Image().byte().paint(map_fc_neighbours, '11').unmask(0).rename('nb11') // shallow lag
    //var nb12 = ee.Image().byte().paint(map_fc_neighbours, '12').unmask(0).rename('nb12') //deep lag
    
    // DL touching SL --> SL
    /* 
    This is a stop-gap until we have better depth product - below are the rules we want,
    but too much band-aiding is required to make it work, so for the moment just err on the side
    of shallow lagoon when it's mixed.
    */
    /*clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(0)),
      value: ee.Image(11)
    })*/
    
    /*// SL sourrounded by DL --> DL
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(nb12.gt(75)),
      value: ee.Image(12)
    })*/
    
    /*// DL sourrounded by SL --> SL
    clean_map = clean_map.where({
      test: clean_map.eq(12)
              .and(nb11.gt(75)),
      value: ee.Image(11)
    })*/
    
    /*// DL/SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    })*/
    
    // SL surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(11)
              .and(objsize.lte(max_size))
              .and(nb13.gt(80)),
      value: ee.Image(13)
    });
    
    /*// DL/SL touching OCL --> OCL
    clean_map = clean_map.where({
      test: clean_map.eq(11).or(clean_map.eq(12))
              .and(nb24.gt(0)),
      value: ee.Image(24)
    })*/
    
    
    /*// ####
    // Turbid
    // ####
    
    focus_class = ee.Number(3) // turbid
    
    // Turb surrounded by IRF --> IRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb13.gt(75)),
      value: ee.Image(13)
    })
    
    // Turb surrounded by ORF --> ORF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb14.gt(75)),
      value: ee.Image(14)
    })
    
    // Turb surrounded by TRF --> TRF
    clean_map = clean_map.where({
      test: clean_map.eq(focus_class)
              .and(nb16.gt(75)),
      value: ee.Image(16)
    })*/
  
  } else if (vars.geomorphic && vars.fast_clean) {
    print("Executing the fast version OBIA");
    
    /* fast version of the geo clean up
      - blanket version assigns the underlying most common in neighbourhood
      - mode OBIA version iterates through objects+buffers but take the mode instead of doing the class percs, to see if that speeds things up
    */
    
    
    //############
    //# blanket version
    //############
    // make a very smooth map to capture the broader neighbourhood
    var smooth_map = clean_map
                        .focal_mode({
                          radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
    
    
    // first make a make size threshold, so we're not vectorising huge objects when we don't have t
    // - the unmask(99) captures small no data values/ data gaps
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt().multiply(2)).select('labels').pow(2).log().int()
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    
    // replace small objects with smooth underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: smooth_map
    }).selfMask()
    //############
    //############
    
    
    /*    
    //############
    //# mode OBIA version
    //############
    
    // #########
    // THE FASTER PLAN - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
    //                 - BUT, just assign the mode of the neighbours, so save resouces even further??
    // #########
    
    // FUNCTION that maps over feature colleciton and assigns neighbour percentages
    var set_neighbour_mode = function(f) {
      // make the 1px buffer
      var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
      // reduce the classes in the buffer zone
      var diff_mode = ee.Number(ee.Dictionary(
        clean_map.unmask(ee.Image(0)).reduceRegion({
          reducer: ee.Reducer.mode(),
          geometry: diff.geometry(),
          scale: vars.image_data_scale,
          maxPixels: 1e11
        })).get('classification'))
      
      return(f.set('mode',diff_mode))
    }
    
    // FUNCTION to reduce the map to vectors and map the neighbour properties function
    var reduce_neighbours_mode = function() {
      // reduce map to vectors
      var map_fc = clean_map.unmask(0)
            .updateMask(classn.gt(0)) // only vectorise class/es of interest
            .reduceToVectors({
              scale: vars.image_data_scale, 
              eightConnected: false,
              bestEffort: true, 
              maxPixels: 1e13,
              tileScale: 1,
              geometry: reef_boundary
            })
      // map the function, calculate neighbour properties
      return(map_fc.map(set_neighbour_mode))
    }
    
    // first make a make size threshold, so we're not vecortising huge objects when we don't have to
    var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
    Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
    
    // This is where we select the single or group of classes to vectorise for cleaning up
    var classn = segment_id.where({
      test: clean_map.neq(16) //TRF
              .and(clean_map.neq(15)) //RR
              .and(clean_map.neq(14)) //ORF
              .and(clean_map.neq(13)) //IRF
              //.and(clean_map.neq(12)) // deep L
              .and(clean_map.neq(11)) // shallow L 
              .and(clean_map.unmask(0).neq(0)), // no data values (want to reclaim the small gaps 
      value: ee.Image(0) // 99 ensures it's ignored in logic
    })
    
    // calculate neighbours
    var map_fc_neighbours = reduce_neighbours_mode()
    
    //print(map_fc_neighbours.limit(10))
    
    var mode_map = ee.Image().byte().paint(map_fc_neighbours, 'mode').unmask(0).rename('mode') // paint out the mode values to an image
    //Map.addLayer(mode_map, display_pal, "mode map", false)
    
    // replace small objects with mode underneath
    var clean_map = clean_map.unmask(0).where({
      test: segment_id.gt(0), 
      value: mode_map
    }).selfMask()
    
    //############
    //############
    */
    
  } else {
    
    // BENTHIC CLEAN-UP RULES
    
    // reclaim shallow no data to surrounding class
    var smooth_map = clean_map
                        .focal_mode({
                          radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
    
    var clean_map = clean_map.unmask(0).where({
      test: geo_map.gt(2).and(clean_map.eq(0)), 
      value: smooth_map
    }).selfMask()
    
    // cut benthic off to < 10 - 15 m
    clean_map = clean_map.where({
      test: depth.gt(1500),
      value: ee.Image(0)
    })
    
    // Deep (or land or missing) in geo == masked from benthic
    clean_map = clean_map.where({
      test: geo_map.unmask(0).lte(2),
      value: ee.Image(0)
    })
    
    /*// Deep lagoon in geo == masked from benthic
    clean_map = clean_map.where({
      test: geo_map.eq(12),
      value: ee.Image(0)
    })*/
    
    // Deep/shallow lagoon in geo && rock in benthic == seagrass
    clean_map = clean_map.where({
      test: geo_map.eq(11).or(geo_map.eq(12))
                   .and(clean_map.eq(13)),
      value: ee.Image(14)
    })
    
    // Deep/shallow lagoon in geo && coral in benthic == sand
    clean_map = clean_map.where({
      test: geo_map.eq(11).or(geo_map.eq(12))
                   .and(clean_map.eq(15)),
      value: ee.Image(11)
    })
    
    /*// turbid in geo == turbid (temporal - class num 2)
    // ############## ---> need to decide here whether to push geo turbid through regardless of benthic class
    clean_map = clean_map.where({
      test: geo_map.eq(3),
      value: ee.Image(2)
    })*/
    
    /*
    // Ignore in benthic + ORF in geo == rock
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(14)),
      value: ee.Image(13)
    })
    
    // Ignore in benthic + IRF in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(13)),
      value: ee.Image(11)
    })
    
    // Ignore in benthic + TRF in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(0)
                     .and(geo_map.eq(16)),
      value: ee.Image(11)
    })
    
    // Ignore in benthic + RR in geo == rock
    */
    
    /*// seagrass in benthic + ORF/RR/slope in geo == coral/algae
    clean_map = clean_map.where({
      test: clean_map.eq(14)
                     .and(geo_map.eq(14).or(geo_map.eq(15)).or(geo_map.eq(21)).or(geo_map.eq(22))),
      value: ee.Image(15)
    })*/
    
    // ####--> CR: "Seagrass neighbouring deep water or no data not shallow a rock or coral algae class"
    
    // coral or algae in benthic + TRF in geo == seagrass
    clean_map = clean_map.where({
      test: clean_map.eq(15)
                     .and(geo_map.eq(16)),
      value: ee.Image(14)
    })
    
    // rock in benthic + TRF in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(13)
                     .and(geo_map.eq(16)),
      value: ee.Image(11)
    })
    
    // seagrass in benthic and slope in geo == coral
    clean_map = clean_map.where({
      test: clean_map.eq(14)
                     .and(geo_map.eq(21).or(geo_map.eq(22))),
      value: ee.Image(15)
    })
    
    // coral or algae in benthic + plat in geo == seagrass
    clean_map = clean_map.where({
      test: clean_map.eq(15)
                     .and(geo_map.eq(23)),
      value: ee.Image(14)
    })
    
    /*// BMA in benthic and slope/plat in geo == sand
    clean_map = clean_map.where({
      test: clean_map.eq(18)
                     .and(geo_map.eq(2).or(geo_map.eq(12)).or(geo_map.eq(21)).or(geo_map.eq(22)).or(geo_map.eq(23))),
      value: ee.Image(11)
    })*/
    
  }
  
/*  // ####
  // Final small object clean (safety net for oddities with scaling and border buffers??)
  // ####
  
  var clean_size = (vars.geomorphic) ? vars.small_object_geo : vars.small_object_benthic
  
  var map_vsmooth = clean_map
                        .focal_mode({
                          radius: 10, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 1
                        })
                        .updateMask(class_extent_mask)
  
  clean_map = clean_map.where({
    test: clean_map.connectedPixelCount(clean_size, false).lt(clean_size), 
    value: map_vsmooth
  })*/

}

// final smooth
if (vars.smooth_output) {
  // smooth the output lightly to make nice edges, and get rid of noise
  var noise_smooth = clean_map.unmask(99) // unmasking to a value allows us to include masked areas in the smooth, then re-mask after
                        .focal_mode({
                          radius: 2, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })
  clean_map = clean_map.updateMask(noise_smooth.neq(99)).updateMask(clean_map.gt(1)) // this ignores 0/land; make it .gt(2) if you want to mask deep too
} else {
  // just clip to the classified extent and move on
  if (vars.geomorphic) {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  } else {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  }
}

// 4. Export data

var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;

if (vars.do_export) {
  print("For export, the image data scale must be set to:", vars.image_data_scale);
  
  if (vars.export_small_area) {
    var export_convhull = export_small;
  } else {
    //var export_convhull = clean_map.gt(2).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: region_extent, crs: "EPSG:4326"}).geometry().convexHull({maxError: 100})
    var export_convhull = reef_boundary;
  }
  Map.addLayer(export_convhull, {}, "Export footprint", true);
  var output_name = (vars.obia_2nd_pass) ? output_name + "-p2" : output_name;
  Export.image.toAsset({
    image: clean_map.set(vars),
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: export_convhull,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  /*Export.image.toCloudStorage({
    image: clean_map,//.set(vars),
    description: 'swp_geo_clean',
    bucket: 'mitchest_unet_bucket',
    fileNamePrefix: 'swp_geo_clean',
    region: export_convhull,
    scale: 25,
    crs: 'EPSG:4326',
    maxPixels: 1e13
  })*/
  
} else {
  if (vars.show_eg_area) {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.clip(eg_area).reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name + '_final', false);
    } else {
      Map.addLayer(clean_map.clip(eg_area), display_pal, output_name + '_final', false);
    }
  } else {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name + '_final', false);
    } else {
      Map.addLayer(clean_map, display_pal, output_name + '_final', false);
    }
  }
}

//Generate title
var title = ui.Label({
  value: 'Classes',
  style: {fontWeight: 'bold', fontSize: '12px'}
});

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false);
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false);
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
var legend = (vars.geomorphic) ? geo_legend : benthic_legend;
pkg_vis.add_lgds([title, legend]);//, mask_legend])
// generate the legend