/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var depth_pal = {"opacity":1,"bands":["depth"],"max":5,"palette":["e4e1ff","7f89ff","3a52ff","0007ff","000258"]},
    geo = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo"),
    benthic = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic"),
    pixels = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_pixels"),
    geo_train = ee.FeatureCollection("projects/coral_atlas/nth_cari/training/nth_cari_geo_training"),
    wcmc = ee.FeatureCollection("projects/coral_atlas/global_datasets/wcmc_reefs_2018v4_dissolved"),
    benthic_baha = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_baha"),
    benthic_cari = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic_cari"),
    geo_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_geo-clean3"),
    benthic_clean = ee.Image("projects/coral_atlas/nth_cari/in_out/nth_cari_benthic-clean"),
    noreefmask = /* color: #43ff06 */ee.Geometry.MultiPoint(),
    BondariesWCMCForHI = /* color: #00ffff */ee.Geometry.Polygon(
        [[[-178.98452301460918, 29.245682688458757],
          [-178.9896008920856, 28.09183309274485],
          [-178.5062024545856, 27.411255440594505],
          [-176.2210462045856, 27.11828381981855],
          [-174.4852063608356, 26.84414952724335],
          [-174.5511243295856, 25.463592275178765],
          [-173.5623547983356, 24.847045514492123],
          [-172.9910657358356, 25.721211852601478],
          [-172.5296399545856, 25.622193074195295],
          [-172.0901868295856, 24.647498100361688],
          [-170.2005383920856, 24.287509180079482],
          [-167.3221204233356, 23.46373172551175],
          [-164.67846669903568, 22.64306485701608],
          [-166.78442411354348, 21.659670946601192],
          [-168.68984316095035, 19.689403197458088],
          [-170.5960462045856, 15.982962215730796],
          [-168.9866169009752, 15.85814285567876],
          [-168.07873304700556, 20.291800334858316],
          [-163.4549329233356, 22.533342458570626],
          [-161.6092297983356, 22.39120316943024],
          [-161.0818860483356, 21.33080797247133],
          [-159.9612805795856, 20.920891177438953],
          [-159.1702649545856, 21.08499380379387],
          [-156.8191907358356, 19.705155740417748],
          [-156.4896008920856, 19.14566807569612],
          [-156.0501477670856, 18.0837039133581],
          [-154.6658704233356, 18.792418684173427],
          [-154.0945813608356, 19.994495723204004],
          [-156.0281751108356, 21.69875714966666],
          [-158.2034680795856, 22.634781085064407],
          [-162.5101087045856, 23.986736050416525],
          [-167.1683118295856, 24.587571507481186],
          [-169.3436047983356, 25.93876291772303],
          [-171.8704602670856, 26.90294876694871],
          [-173.0130383920856, 26.804933056111935],
          [-175.1224133920856, 28.710324938451418]]]),
    rivermouth = /* color: #c20707 */ee.Geometry.MultiPoint(),
    turbidity = ee.Image("projects/coral_atlas/hawaii/hawaii_accturb"),
    low_rrs = ee.Image("projects/coral_atlas/workflow/mapping/hawaii/hawaii_islands_low_tide_normalized_sr_jan2018_jan2020_v2_shift_mosaic/20200224T183448Z/hawaii_islands_low_tide_normalized_sr_jan2018_jan2020_v2_shift_mosaic");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// little viewing script for looking at reefs and classifications for each region. 
//From this region Hawaii onwards the map_viewer script is going to be used from the very beginning
//in the workflow 

// imports
//var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis')
//var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// choogse where to centre (link this dynamically to map app?)
var centre_map = ee.Geometry.Point([134.3895004228908, -10.96544281366157])
Map.centerObject(centre_map, 5)
//splitting North Cari regions



//4. add turbidity for reference
Map.addLayer(turbidity.focal_mode(5), {min:5, max:20, palette: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']}, "Accumulative turbidity (smooth)", false)
Map.addLayer(turbidity, {min:5, max:20, palette: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']}, "Accumulative turbidity", false)




// add some background data
//Map.addLayer(any_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "Any tide mosaic", false)
//Map.addLayer(high_rrs, {bands: ['b3','b2','b1'], min: 66, max: 1260}, "High tide mosaic", false)

var imageVisParam = {"opacity":1,"bands":["b3","b2","b1"],"max":1536,"gamma":1};
Map.addLayer(low_rrs, imageVisParam, 'Dove sr lowtide', false)
//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)

//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)

/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/

// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)

// WCMC

//Map.addLayer(Artifact_layer, {color: 'ffff00'}, 'Artifact Layer', false)
//Map.addLayer(any_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Any tide depth", false)
//Map.addLayer(high_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "High tide depth", false)
//Map.addLayer(low_depth, {min: -1, max: 1200, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Low tide depth", false)
//Map.addLayer(pixels.select('depth'), {min: -1, max: 2500, palette:['#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']}, "Depth covariate (S2/LS8/Dove)", false)
/*

// nth cari
//Map.addLayer(benthic.updateMask(geo.gt(2)), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(ee.ImageCollection([benthic_baha,benthic_cari]).mosaic(), map_palettes.benthic, "Nth. Cari & Baha Benthic - RAW", false)
Map.addLayer(benthic_clean, map_palettes.benthic, "Nth. Cari & Baha Benthic - FINAL", false)
Map.addLayer(geo, map_palettes.geo, "Nth. Cari & Baha Geo - RAW", false)
Map.addLayer(geo_clean, map_palettes.geo, "Nth. Cari & Baha Geo - FINAL", false)

// wave data
var kd1 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd1')
var kd2 = ee.Image('users/danleeharris/reefwave/fiji_v1_kd2')

Map.addLayer(kd1, {}, "waves - kd1", false)
Map.addLayer(kd2, {}, "waves - kd2", false)*/
// add training data / sample point distributions
// ----> possibly - points are only intermediate in the mapping script, so will have to pull those out if we want that
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo_oldmaps, 'class_num'), map_palettes.geo, "Training data - geo (old maps) ", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_geo, 'class_num'), map_palettes.geo, "Training data - geo (new maps)", false)
//Map.addLayer(ee.Image().byte().paint(fiji_training_benthic, 'class_num'), map_palettes.benthic, "Training - benthic (manual curation)", false)
//Map.addLayer(geo_train, {}, "geomorphic training locations", false)
// WCMC
//filter wcmc by hawaii extent

var wcmc=wcmc.filterBounds(BondariesWCMCForHI)

Map.addLayer(wcmc, {color:'#ffff00'}, "WCMC layer", false)

// #############
// example confidence layers

/*
// depth and nir combos
var depth_nir_flag = fiji_dove_ocean.select('b4').multiply(fiji_high_depth_ocean).gt(250000)
//Map.addLayer(depth_nir_flag, {}, "NIR flag", false)
var conf_flag = fiji_high_depth_ocean.eq(-1)
                        .or(fiji_high_depth_ocean.gt(1000))
                        .add(depth_nir_flag.eq(1))
                        .selfMask()
Map.addLayer(conf_flag, {min:1,max:2,palette:["#f7f7f7","#bababa"]}, "Confidence flag", false)

//straight depth missing/-1
var depth_flag = fiji_high_depth_ocean.gt(0).selfMask()
//Map.addLayer(depth_flag, {min:0,max:1,palette:["#ffff00"]}, "Valid depth retrievals", false)

//Map.addLayer(fiji_geo_clean.gt(0).updateMask(fiji_high_depth_ocean.lte(0)), {min:0,max:1,palette:["#ff0000"]}, "Unmapped area via original algorithm", false)
*/


/*

////////// UI SET UP //////////


//Generate title
var title = ui.Label({
  value: 'Coral Atlas map classes',
  style: {fontWeight: 'bold', fontSize: '18px'}
})

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false)
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false)
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
pkg_vis.add_lgds([title, geo_legend, benthic_legend])//, mask_legend])
// generate the legend




///////// LINK TO DATA EXPORT /////////
// hopefully eventually we can link this to a download link in the app?

// // map to export 
// var export_map = gbr_geo_map10
// // extent
// var export_convhull = export_map.gt(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: export_map.geometry().bounds()}).geometry().convexHull({maxError: 100})
// // export
// Export.image.toDrive({
//     image: export_map,
//     description: 'gbr_sent2_geo_map',
//     folder: 'GBR Mapping',
//     region: export_convhull,
//     scale: 10,
//     maxPixels: 1e13
// })

*/