/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var sentinel = ee.ImageCollection("COPERNICUS/S2"),
    depth = ee.Image("projects/coral_atlas/fiji/full_mosaics/fj_high_depth"),
    fiji_square = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[176.63618326092933, -15.647431003809402],
          [176.63618326092933, -24.039498288169224],
          [181.87666177655427, -24.039498288169224],
          [181.87666177655427, -15.647431003809402]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// #####################################################
// Generate cloud masked sentinel-2 mosaic for Fiji
// #####################################################

var do_export = false

// define a mask for output imagery
var depth_mask = depth.gte(-1).focal_mode(10)

// define (convex hull) region to export image data
var export_convhull = depth_mask.gt(0)
                        .reproject({crs: "EPSG:3857", scale: 1000})
                        .reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, crs: "EPSG:3857", geometry: fiji_square})
                        .geometry()
                        .convexHull({maxError: 100})

// Bits 10 and 11 are clouds and cirrus, respectively, in Sentinel-2 imagery
var cloudBitMask = ee.Number(2).pow(10).int()
var cirrusBitMask = ee.Number(2).pow(11).int()
// function to mask cloud in each image within image collection
function maskS2clouds(image) {
  var qa = image.select('QA60')
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0))
  return image.updateMask(mask).updateMask(depth_mask)
}

var s2_col = sentinel
  .filterDate('2016-01-01', '2019-12-31')
  .filterBounds(export_convhull)
  .map(maskS2clouds)
  
var reflec = s2_col
  .median() // .reduce(ee.Reducer.median())
  .updateMask(depth_mask)
  .select(["B1", "B2", "B3", "B4", "B5"])


Map.addLayer(reflec, {}, 'sentinel', false)
Map.addLayer(export_convhull, {}, 'export conv hull', false)
Map.addLayer(depth_mask, {}, 'depth mask', false)

if (do_export) {
  Export.image.toAsset({
    image: reflec, 
    description: 'sentinel_2_export',
    assetId: 'gbr_reefs/gbr_sentinel2x', 
    region: export_convhull,
    scale: 10,
    maxPixels: 1e13})
}