/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var fj_area = ee.Image("projects/coral_atlas/fiji/full_mosaics/fj_high_depth_coastal"),
    b_ref = ee.FeatureCollection("projects/coral_atlas/sw_pacific/training/swp_benthic_reference"),
    g_ref = ee.FeatureCollection("projects/coral_atlas/sw_pacific/training/swp_geo_reference"),
    b_east = ee.Image("projects/coral_atlas/sw_pacific/in_out/swp_benthic_east0"),
    geo_east = ee.Image("projects/coral_atlas/sw_pacific/in_out/swp_geo_east0"),
    roi = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[176.1139501583184, -15.561220257602068],
          [176.1139501583184, -21.372864340334157],
          [183.1397069942559, -21.372864340334157],
          [183.1397069942559, -15.561220257602068]]], null, false),
    geo_west = ee.Image("projects/coral_atlas/sw_pacific/in_out/swp_geo_west0"),
    b_west = ee.Image("projects/coral_atlas/sw_pacific/in_out/swp_benthic_west0");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Map.addLayer(fj_area,{},'fj_area');
// print(fj_area,'fj_area');

Map.addLayer(b_ref,{},'b_ref',false);
//print(b_ref,'b_ref');

Map.addLayer(g_ref,{},'g_ref',false);
//print(g_ref,'g_ref');
Map.centerObject(roi,8);
Map.addLayer(b_west,{},'b_west',false);
Map.addLayer(geo_east,{},'geo',false);


var benthic_col=ee.ImageCollection([geo_east,b_west]);
var geo_col=ee.ImageCollection([geo_east,geo_west]);
var benthicIMG=benthic_col.mosaic().aside(Map.addLayer,{},'benthicIMG')//.aside(print,'benthic');
var geoIMG=geo_col.mosaic()//.aside(print,'geo');

var benthic_c=benthicIMG.clip(roi).aside(print);
Map.addLayer(benthic_c,{},'benthic_c');
var geo_c=geoIMG.clip(roi).aside(print);
Map.addLayer(geo_c,{},'geo_c');

//filter Feature collection of reference data and keep only those inside roi
// geomorphologial reference data
var g_ref_c=g_ref.filterBounds(roi);
g_ref_c=g_ref_c.map(function(ft){
  return ft.intersection(fj_area);
});
Map.addLayer(g_ref_c,{},'g_ref_c');
//print(g_ref_c,'g_ref_c')// <---- It shows an error but it works

// benthic reference data
var b_ref_c=b_ref.filterBounds(roi);
b_ref_c=b_ref_c.map(function(ft){
  return ft.intersection(fj_area);
});
Map.addLayer(b_ref_c,{},'b_ref_c');
//print(b_ref_c,'b_ref_c');

// ////taking a portion of featureCollection due to their size
// var randomGEO=g_ref_c.randomColumn().aside(print,'randomGEOref');
// var randomBenthic=b_ref_c.randomColumn().aside(print,'randomBENTHICref');
// var split_proportion=ee.Number(0.8);
// var Gref=randomGEO.filter(ee.Filter.gt('random',split_proportion));
// var Bref=randomBenthic.filter(ee.Filter.gt('random',split_proportion));

// extraction of centroids from feature collection
// function centroids (ft) {
//   var poi=ft.centroid();
//   return poi;
// }
// var pois=b_ref_c.map(centroids);
// print(pois,'pois');
// Map.addLayer(pois,{},'pois')

////////////////////////////////////////////////////////
// conversion of vector to image for stratified sampling
////////////////////////////////////////////////////////
function vector2img(ft){
  var imgColl=ft.reduceToImage(['class_num'], ee.Reducer.max());
  // print(imgColl,'imgColl');
  // Map.addLayer(imgColl,{},'imgColl');
  return imgColl.select(['max'],['class_num']);
}

//stratified sampling with 1 points per initial reference vector
function strfSam (img,ft) {
  var ref_col=img.int().stratifiedSample({
              numPoints: 1,
              classBand:'class_num', 
              region:ft.geometry(),//might take some time..
              scale:10,
              geometries:true
              });
  return ref_col;
}

var b_ref_img=vector2img(b_ref_c)//.aside(print,'b_ref_img');
var g_ref_img=vector2img(g_ref_c)//.aside(print,'g_ref_c');

var b_ref_samples=ee.FeatureCollection(strfSam(b_ref_img,b_ref_c));
print(b_ref_samples,'b_ref_samples');
Map.addLayer(b_ref_samples,{},'b_ref_samples',false);

var g_ref_samples=strfSam(g_ref_img,g_ref_c);
print(g_ref_samples,'g_ref_samples');
Map.addLayer(g_ref_samples,{},'g_ref_samples',false);


// /////validation function/////
function val_function (img,reference){
  var training=img.sampleRegions(reference,['class_num'],10);   //takes polygons as samples to train the classifier
  var trained=ee.Classifier.randomForest().train(training,'class_num'); //a known classifier test the match between ref samples and classification image
  var validationdata=img.sampleRegions(reference,['class_num'],10); //takes polygons as samples for the validation 
var validated=validationdata.classify(trained); //by classifying the validationdata we will be able to produce the error matrix
var AccuracyMatrix=validated.errorMatrix('class_num', 'classification');
print('Accuracy Matrix',AccuracyMatrix);
var overallAC=AccuracyMatrix.accuracy();
print('accuracy of classification',overallAC);
  return;
}


/////apply validation function////
print('accuracy assessment for benthic classification');
var benthic_validation=val_function(benthic_c,b_ref_samples);
print('accuracy assessment for geomorphological classification');
var geo_validation=val_function(geo_c,g_ref_samples);

