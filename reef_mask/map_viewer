/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var wcmc = ee.FeatureCollection("users/murrnick/global-reefs/existingData/WCMC008_CoralReefs2010_v3"),
    planet_mask = ee.FeatureCollection("projects/coral_atlas/global_datasets/20181001_GlobalCoralMask_v1"),
    cari_baha = 
    /* color: #e8fff0 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Polygon(
            [[[-83.74802887997924, 29.797979355890877],
              [-83.76670188165156, 29.806040314801056],
              [-83.83175621005824, 29.84035719838458],
              [-87.34229229460209, 29.86154721578147],
              [-84.88603582308929, 27.48334609998498],
              [-84.03911640020482, 24.015397674408057],
              [-84.64256423958409, 23.423089398259673],
              [-84.64256423958409, 23.418836887191958],
              [-84.85815924032454, 23.29113732295414],
              [-85.10968691980338, 23.02684148952643],
              [-85.3511086798967, 22.587809145476122],
              [-85.53649859996307, 22.08656466963374],
              [-85.5507596398644, 21.503947508602252],
              [-85.36121567995548, 20.99485392448161],
              [-84.69772704042185, 20.61897029183522],
              [-83.85204599993978, 20.4234724669016],
              [-82.1307859201948, 20.507702387512058],
              [-81.37734119993678, 20.4186298781462],
              [-81.27751571995293, 20.218028284034478],
              [-81.42725376026573, 20.01046794066372],
              [-82.54491637367869, 19.728101751932087],
              [-84.06088716469048, 19.044343882427146],
              [-84.50224574941535, 18.46637717956872],
              [-84.55981426046651, 18.04976868909448],
              [-83.71547609838399, 18.12229309892753],
              [-82.1991466802537, 18.35604186210316],
              [-81.66015827963821, 18.253699558245682],
              [-79.90549416010202, 18.219570745771833],
              [-79.5748114796686, 17.898789835507504],
              [-79.35614640020646, 17.59998716062109],
              [-79.28008883975883, 17.209896415662385],
              [-79.2515671201806, 16.93725094567956],
              [-79.08994511965051, 16.67331751078911],
              [-78.55754256033538, 16.336046032397654],
              [-78.04415411961628, 16.144361679891457],
              [-77.49273707968399, 16.053017986039254],
              [-76.74166944000831, 15.961632385481321],
              [-76.16246759996636, 16.021951291295935],
              [-74.81269223961152, 16.021951291295935],
              [-75.29785668040387, 18.83205117792302],
              [-75.30015131989768, 18.84523972711321],
              [-73.47635136040066, 20.024964634718515],
              [-73.4763495601768, 20.024965888911897],
              [-71.42786495990606, 20.562237986495504],
              [-70.02107928038106, 21.52905665387921],
              [-71.38419984012006, 22.35840524119371],
              [-72.36344016024003, 22.69211652061569],
              [-73.29514499971526, 23.112486533518553],
              [-73.62789659996088, 23.470514146641623],
              [-73.86278076008125, 23.785277923375514],
              [-74.22341904016969, 24.176822366013933],
              [-74.57993855995164, 24.42377068229589],
              [-75.42132479997633, 24.980866839479255],
              [-76.09060296024342, 25.613302868452276],
              [-76.32960191999791, 25.82102338064275],
              [-76.52093399983613, 26.01555709005257],
              [-76.54351355964263, 26.25027796464255],
              [-76.54470192027071, 26.52174840273964],
              [-76.4080361999051, 26.792578496799376],
              [-76.30108020041968, 27.091333607056974],
              [-76.37832611969878, 27.358689412147456],
              [-76.53576240039956, 27.57672715429358],
              [-76.77168624008698, 27.749575241940878],
              [-77.27637888015971, 27.859448919173335],
              [-78.71368176000419, 27.95471147635037],
              [-78.92927819984567, 27.95471147635037],
              [-79.50668723973581, 27.9384863522612],
              [-80.58920975974792, 28.44484988940451],
              [-80.58892507465129, 28.44457246166176],
              [-80.58875000018884, 28.44440187743585],
              [-80.58875000018884, 28.443544014660414],
              [-80.58544399961897, 28.440223158468378],
              [-83.74802887997924, 29.797979355890877]]], null, false),
        {
          "system:index": "0"
        }),
    trimmer = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[-86.94846124811284, 30.197739678882293],
           [-87.02536554498784, 29.826723371994056],
           [-85.91574640436284, 28.79211111152925],
           [-84.65231866998784, 27.29895484854458],
           [-84.27878351373784, 25.923855481261555],
           [-84.19089288873784, 24.652402645724507],
           [-83.30100031061284, 24.061907157589907],
           [-82.60886163873784, 24.17220809153051],
           [-83.19113702936284, 24.63243109036835],
           [-82.85056085748784, 24.93166813983205],
           [-82.31223077936284, 25.100914511942964],
           [-82.12546320123784, 25.369236415498303],
           [-82.25729913873784, 25.943615500466546],
           [-82.67477960748784, 26.485710823543403],
           [-82.96042413873784, 26.937147834777992],
           [-83.27902765436284, 27.48429155849791],
           [-83.41086359186284, 27.93170933272885],
           [-83.45480890436284, 28.3772823807667],
           [-83.44902460844042, 28.555642900431213],
           [-83.53124632245544, 28.69538967311156],
           [-83.94919366998784, 28.984495451509854],
           [-83.99289089519328, 29.22912887396694],
           [-84.20187921686284, 29.387338175140105],
           [-84.60326955601545, 29.306319242097928],
           [-84.89401788873784, 29.157336013328273],
           [-85.49826593561284, 29.16692976189759],
           [-85.79489679498784, 29.349040441709306],
           [-85.76193781061284, 29.79812625715408],
           [-86.28928156061284, 30.112243788872775]]],
         [[[-81.09510909245853, 30.116041826837737],
           [-80.19423018620853, 28.68518082963858],
           [-80.09535323308353, 27.88219146078193],
           [-79.67237960027103, 27.249150306505225],
           [-79.49659835027103, 30.18729080745607]]]]),
    srtm = ee.Image("CGIAR/SRTM90_V4");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
////////////////////////////////////
// Global Reef Outline Classification
// Nov 2019
// Nick Murray - nicholas.murray@jcu.edu.au
// Mitch Lyons - m.lyons@gmail.com
// Nick Fabina - 
////////////////////////////////////

var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

// load RF probabilities/mask via strings, so easy to update
var probs = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_0"),
    probs2 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_1"),
    probs3 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_2"),
    probs4 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_3"),
    probs5 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_4"),
    probs6 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_5"),
    probs7 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_6"),
    probs8 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_7"),
    probs9 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_8"),
    probs10 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_9"),
    probs11 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_a"),
    probs12 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_b"),
    probs13 = ee.Image("projects/coral_atlas/reefMask/maskOut/probabilityMask/reefMask_gen5_prob_ui8_S30_v9_gridID_c");

var mask = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_a"),
    mask2 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_b"),
    mask3 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_c"),
    mask4 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_1"),
    mask5 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_2"),
    mask6 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_3"),
    mask7 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_4"),
    mask8 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_5"),
    mask9 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_6"),
    mask10 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_7"),
    mask11 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_8"),
    mask12 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_9")
    //mask13 = ee.Image("projects/coral_atlas/reefMask/maskOut/classificationMask/reefMask_gen5_clas_ui8_S30_v9_gridID_0");

/*// weird glitch
mask13 = mask13.divide(100)
mask13 = mask13.where(mask13.eq(2.55), 3).uint8()*/


//Map.setOptions('SATELLITE')
Map.setCenter(-83.182, 27.882, 7)

//var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')
var viriPlasma = ['440154','462372','404284','355d8c','2a768e','21908d','26a784','47bd6f','79d051','b8de30','fde725',"0d0887","3d049b","6903a5","8d0fa1","ae2891","cb4679","df6363","f0844c","faa638","fbcc27","f0f921"];


// bg data
var aoi = ee.Geometry.Polygon([-180, 30, 0, 30, 180, 30, 180, -30, 10, -30, -180, -30], null, false);
var ls8 = ee.Image("projects/remap-app/ls_8_cflte1_2k16to19_at_30m_ui8");
var ls8new = ee.Image("projects/coral_atlas/reefMask/baseLayers/ls_8_intMn2575_2k16to19_at_30m_ui8")
var lsVis = {min: 0, max: 150, bands: ['Red', 'Green', 'Blue']};
Map.addLayer(ls8, lsVis, 'Landsat 8 At-surface', false);

// e.g. mappign region data
//Map.addLayer(swp_geo_east, map_palettes.geo, "SWP Geo - east RAW", false)
//Map.addLayer(swp_geo_west, map_palettes.geo, "SWP Geo - west RAW", true)



var landMask = ee.Image(1).where(srtm.gte(0), 0);

var reefVisualiser = function (reefProb, threshold){
  var reefProbMasked = reefProb.updateMask(ls8.select(['Blue']))
    .updateMask(reefProb.gt(threshold))
    .updateMask(landMask);
  return reefProbMasked;
};


// Landsat 8 + WCMC + random forest reef mask layer
var RFmask = ee.ImageCollection([mask, mask2, mask3, mask4, mask5, mask6, mask7, mask8, mask9, mask10, mask11, mask12, /*mask13*/])
                    .mosaic().clip(aoi)
// weird glitch
RFmask = RFmask.divide(100)
RFmask = RFmask.where(RFmask.eq(2.55), 3).uint8()
Map.addLayer(RFmask, {palette: ['Green', 'darkblue', 'Orange'], min:[1], max:[3]}, 'Landsat8 RF reef mask', false, 0.7)

var RFprobs = ee.ImageCollection([probs, probs2, probs3, probs4, probs5, probs6, probs7, probs8, probs9, probs10, probs11, probs12, probs13])
                    .mosaic().clip(aoi)
Map.addLayer(reefVisualiser(RFprobs,50), {palette: viriPlasma, min:[1], max:[100]}, 'Landsat8 RF reef probabilities', false, 0.7)



// Planet visual + milenium + FCNN
var CNNreefProbs = ee.ImageCollection('users/nfabina/reef_probs_v1').mosaic().clip(aoi)
var CNNreefPreds = ee.ImageCollection('users/nfabina/reef_preds_v1').mosaic().clip(aoi)
Map.addLayer(reefVisualiser(CNNreefProbs,30), {palette: viriPlasma, min:[0], max:[100]}, 'Planet CNN reef probabilities', false, 0.7)
Map.addLayer(CNNreefPreds, {palette: ['darkblue', 'Orange'], min:[0], max:[1]}, 'Planet CNN reef mask', false, 0.7)


// combined  predictions
var RFpCNN = CNNreefProbs.gt(30).and(RFprobs.gt(30)).selfMask().add(2).unmask(2)
var RFpCNN_mask = RFpCNN.where(landMask.eq(0), 1)
Map.addLayer(RFpCNN_mask, {palette: ['Green', 'darkblue', 'Orange'], min:[1], max:[3]}, 'Landsat RF + Planet CNN', false, 0.7)


var RFpCNN_mask_smooth = RFpCNN_mask.focal_mode(2)
Map.addLayer(RFpCNN_mask_smooth, {palette: ['Green', 'darkblue', 'Orange'], min:[1], max:[3]}, 'Landsat RF + Planet CNN', false, 0.7)

// Add some other data

//Map.addLayer(cari_baha, {}, "Mapping region outline", false);

Map.addLayer(wcmc, {color: 'aqua'}, 'wcmc', false)

Map.addLayer(planet_mask, {color: 'grey'}, 'Original Planet Dove acquisition mask', false)


// add the potential upated "tightened" mask to reduce un-needed Planet acquisition
var buffered_RFmask = RFmask.eq(3).selfMask().focal_mode(3)
Map.addLayer(buffered_RFmask.reproject({crs:"EPSG:4326", scale: 100}), {}, "Buffered RF mask", false)


/*// add the geom that trims out the manual trimming polys
var manual_mask = planet_mask.filterBounds(cari_baha.geometry()).geometry().difference(trimmer, 100).intersection(cari_baha.geometry(), 100)
Map.addLayer(manual_mask, {color: 'grey'}, 'Modified Planet Dove acquisition mask', false)

Export.table.toCloudStorage({
  collection: ee.FeatureCollection(manual_mask),
  description: "manual_mask_export",
  bucket: 'coral-atlas-data-pipeline',
  fileNamePrefix: 'coral-gee-export-bucket/updated_region_masks/nthcari_baha_mask_update',
  fileFormat: 'GeoJSON'
})*/


// var vector = finalOut.addBands(finalOut).reduceToVectors({
//   reducer: "max",
//   //geometry: points,
//   geometryType: "polygon",
//   bestEffort: true,
//   eightConnected: false,
//   geometry: aoi,
//   scale: 100});
  
// //Map.addLayer(vector, {color:'white'}, 'vector')
// var simple = vector.map(function (feature) {
//     var feat = feature.simplify(10);
//     return feat });
// Map.addLayer(simple, {color:'green'}, 'vector')