/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gebco = ee.Image("projects/coral_atlas/global_datasets/GEBCO_RN5136"),
    wcmc = ee.FeatureCollection("projects/coral_atlas/global_datasets/wcmc_reefs_2018v4_filtered"),
    lsCover = ee.FeatureCollection("projects/coral_atlas/reefMask/globalLandsatFootprint"),
    ls19 = ee.Image("projects/remap-app/ls_8_cflte1_2k16to19_at_30m_ui8");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Training data for global reef mas
var aoi = ee.Geometry.Polygon([-180, 30, 0, 30, 180, 30, 180, -30, 10, -30, -180, -30], null, false);

// // Landsat
// var nvis = {bands:['Red', 'Green', 'Blue'], 'min': 0, 'max': 128}
// Map.addLayer(ls19, nvis, 'ls8 2019')
// var lsMask = ls19.select('Blue').add(1)
// var mask = ee.Image(1).updateMask(lsMask) // binary image
// var lsCover = mask.reduceToVectors({geometry: aoi, geometryType: "polygon", maxPixels: 1e8, bestEffort:true, scale: 100}) 
// Map.addLayer(lsCover) // AOI for training in 

// Export.table.toAsset({
//   collection:lsCover,
//   description: 'exportReefTrain',
//   assetId: 'projects/coral_atlas/reefMask/globalLandsatFootprint'
// });



// Land Points
var land = gebco.gt(200)
    .selfMask() //land == 1
    .updateMask(ls19.select(0).gt(0))
    .reduceToVectors({
      geometry: lsCover,
      scale:100,
      geometryType:'polygon',
      bestEffort:true
    })
Map.addLayer(land, {color:'darkgreen'},'land');
var landPoints = ee.FeatureCollection.randomPoints(land, 6000 ,0, 10)
    .map(
      function(feature) {
        return feature.set({CLASS:1});
  });
Map.addLayer(landPoints, {color:'green'}, 'Land Points');

// Water Points
var water = gebco.lt(-1000)
    .selfMask()
    .updateMask(ls19.select(0).gt(0))
    .remap([1],[2]) //water == 2
    .reduceToVectors({
      geometry: lsCover,
      scale:100,
      geometryType:'polygon',
      bestEffort:true
  })
Map.addLayer(water,{color:'darkblue'},'water');
var waterPoints = ee.FeatureCollection.randomPoints(water, 6000 ,0, 10)
    .map(
      function(feature) {
        return feature.set({CLASS:2});
  });
Map.addLayer(waterPoints, {color:'blue'}, 'Water Points');


// Reef Points
Map.addLayer(wcmc, {color:'orange'}, 'WCMC Reef');
var wcmcLimit = wcmc.randomColumn('random', 0)
    .sort('random')
    .filterBounds(lsCover)
    .limit(5000) // limit to 500 reefs only to avoid geo timeouts
var reefPoints = ee.FeatureCollection.randomPoints(wcmcLimit, 6000,0, 10)
    .map(
      function(feature) {
        return feature.set({CLASS:3});
  });

var reefPoints1 = reefPoints.filter(ee.Filter.bounds(land).not()).aside(print); // exclude any ambiguous points
var reefPoints2 = reefPoints1.filter(ee.Filter.bounds(water).not()).aside(print); // exclude any ambiguous points

Map.addLayer(reefPoints, {color:'yellow'}, 'Reef Points');
Map.addLayer(reefPoints2, {color:'red'}, 'Reef Points');

// Export
var reefMaskTrainingSet = reefPoints2.merge(waterPoints.merge(landPoints));
Export.table.toAsset({
  collection:reefMaskTrainingSet,
  description: 'exportReefTrain',
  assetId: 'projects/coral_atlas/reefMask/reefMaskTrainingData_v3'
});
