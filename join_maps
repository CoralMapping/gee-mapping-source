/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var map1 = ee.Image("projects/coral_atlas/fiji/in_out/fj_geo_atd-clean"),
    map2 = ee.Image("projects/coral_atlas/fiji/in_out/fj_ocean_geo-clean"),
    map3 = ee.Image("projects/coral_atlas/fiji/in_out/fj_ocean_geo_tm-clean"),
    swap_maps = /* color: #d63000 */ee.Geometry.MultiPolygon(
        [[[[177.51585092045468, -18.45420669903227],
           [178.06244339449836, -18.31867106134707],
           [178.16956445365076, -18.318671211547677],
           [178.64199570678306, -18.600051530618114],
           [179.0447654521406, -17.828802179037023],
           [178.9184175814488, -17.54094515699785],
           [178.7700963877395, -17.373253680391954],
           [179.4293009744173, -17.07942420159895],
           [-179.87304038892194, -17.221148545947703],
           [-179.49399957246953, -16.744364826078424],
           [-179.43907296310846, -16.7545602347706],
           [-179.39238880697468, -16.73581124208068],
           [-179.30451883633452, -16.522322698320952],
           [-179.22964326163623, -16.310662066230655],
           [-179.27976058610977, -16.232104920904636],
           [-179.45120058466352, -16.02239429060535],
           [-179.61210959667346, -16.047416650224832],
           [-179.71373667309297, -16.06193453802493],
           [-179.77416352213265, -16.08964710566478],
           [179.87975435533212, -15.88897638950656],
           [179.2699921705928, -16.200459914663423],
           [179.0887111758335, -16.05797767183392],
           [178.56134867736114, -16.237383267362183],
           [178.31964067547244, -16.360629724713],
           [177.987951247924, -16.424881349422463],
           [177.77186384009474, -16.555870597104025],
           [177.6865287878735, -16.58273885293438],
           [177.64185129637121, -16.614318127436555],
           [177.5696714722335, -16.617004312557675],
           [177.50251289847552, -16.65249117580432],
           [177.4008862796329, -16.655127550573006],
           [177.24981611578028, -16.720901840624915],
           [177.0712821029415, -16.89180627923559],
           [176.778834068141, -17.175538584605796],
           [176.8831317474827, -17.47008298446124],
           [176.96141660896035, -17.655941194834952],
           [177.0259652743407, -17.78414228671682],
           [177.17084329340128, -17.90375861475187],
           [177.22302926400357, -18.219730836671257],
           [177.46473764561813, -18.41790128104249]]],
         [[[-179.21236312006562, -17.15094015835939],
           [-179.19039046381562, -17.25588822016888],
           [-179.16876919617835, -17.308673033836993],
           [-179.08121382807343, -17.310306538850508],
           [-178.85874068354218, -17.462330018350258],
           [-178.71866499994843, -17.347013417728668],
           [-178.5744694433078, -17.169966408270078],
           [-178.74613082026093, -16.83508388070908],
           [-178.97272383783906, -16.710171474573],
           [-179.23639571283906, -17.112225563591643]]],
         [[[-178.628714438425, -18.125276799191425],
           [-178.58064925287812, -18.2133519776287],
           [-178.3815220556125, -18.23422253581231],
           [-178.2833317479953, -18.223787569596734],
           [-178.26959883783906, -18.202915760216893],
           [-178.41173445795624, -17.946380678531728],
           [-178.48520552729218, -17.96858934072456]]]]),
    pixels = ee.Image("projects/coral_atlas/fiji/in_out/fj_high_ocean_pixels");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/*
Little test case to join maps from different sub-regions

This is potentially useful when a mapping region contains different 
reef types, where the different reef types are mapped better by different
trianing data sets or algorithm specifications

TODO: polygons to be auto-generated based on apriori information,
        for the meantime they are manual

*/

var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals')

var swap_raster = ee.Image().byte().paint(swap_maps)

var map_out = map2.where({
  test: swap_raster.eq(0),
  value: map3
})


Map.addLayer(map1.updateMask(map2.eq(map1)), map_palettes.geo, "map's equal", false)
Map.addLayer(map1, map_palettes.geo, "map1", false)
Map.addLayer(map2, map_palettes.geo, "map2", false)
Map.addLayer(map3, map_palettes.geo, "map3", false)

var export_geom = map_out.gte(0).reduceToVectors({scale: 1000, maxPixels: 1e13, bestEffort: true, geometry: map_out.gte(0).geometry().bounds(100), crs: "EPSG:4326"}).geometry().convexHull({maxError: 100})
Map.addLayer(export_geom, {}, "export area", true)


/*
Temporary add in to deal with turbid issues from differnt maps
###########
*/

// shallow lagoon > 10m == deep lagoon
map_out = map_out.where({
  test: map_out.eq(11)
                 .and(pixels.select('depth').focal_mean(5).gt(10)),
  value: ee.Image(12)
})

//CLEAN UP SMALL (but slightly larger) TURBID AREAS
var class_extent_mask = map_out.gte(1)

var smooth_noturbid = map_out
                        .updateMask(map_out.neq(3))
                        .focal_mode({
                          radius: ee.Number(5).multiply(1.5),
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        })

map_out = map_out.where({
  test: map_out.eq(3).connectedPixelCount(ee.Number(100).multiply(10), false).lt(ee.Number(100).multiply(10)), 
  value: smooth_noturbid
}).updateMask(class_extent_mask)

/*
###########
*/




Map.addLayer(map_out.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(25))), map_palettes.geo, "combined map", false)


Export.image.toAsset({
  image: map_out, 
  description: 'combined_geo_map',
  assetId: 'projects/coral_atlas/fiji/in_out/fj_geo-clean',
  pyramidingPolicy: {'.default': 'mode'},
  region: export_geom,
  scale: 25,
  maxPixels: 1e13
})