/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageVisParam = {"opacity":1,"bands":["depth"],"min":1500,"max":2500,"gamma":1},
    test_area = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[120.29526303750056, -4.745741910602106],
          [120.29526303750056, -5.259104744078933],
          [120.65060208779353, -5.259104744078933],
          [120.65060208779353, -4.745741910602106]]], null, false),
    mid_mask = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                150.54852578849113,
                -17.233329767211128
              ],
              [
                150.28622720450676,
                -17.250380283577183
              ],
              [
                150.30819986075676,
                -17.448312810951435
              ],
              [
                150.09121988028804,
                -17.703603107027767
              ],
              [
                150.15952351756397,
                -17.94879460074064
              ],
              [
                150.2707044378947,
                -18.026267998487555
              ],
              [
                150.53000547875627,
                -17.761259587948224
              ],
              [
                150.7600126048974,
                -17.61592863755859
              ],
              [
                150.75863931388176,
                -17.304144663176455
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.04395386993656,
                -17.02653406167497
              ],
              [
                152.0163163882471,
                -17.049675993351343
              ],
              [
                152.04944703399906,
                -17.092505620277613
              ],
              [
                152.07656953155765,
                -17.06772799253855
              ],
              [
                152.06043336212406,
                -17.03917220917501
              ],
              [
                152.04790208160648,
                -17.027026473019273
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.0547685366846,
                -17.148284238594663
              ],
              [
                152.04532716095218,
                -17.164522513185215
              ],
              [
                152.0877275210596,
                -17.175347240015647
              ],
              [
                152.09793967665087,
                -17.19855204308798
              ],
              [
                152.11776826202637,
                -17.217164106484987
              ],
              [
                152.1345910769678,
                -17.170755008836622
              ],
              [
                152.12823960602054,
                -17.135817528797283
              ],
              [
                152.1115884524561,
                -17.12499049696502
              ],
              [
                152.0906457644678,
                -17.13056813757167
              ],
              [
                152.06918809234867,
                -17.127615289858845
              ],
              [
                152.0540818911768,
                -17.131060274297127
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.06489655792484,
                -17.115475312176784
              ],
              [
                152.06884476959476,
                -17.124006190077548
              ],
              [
                152.07227799713382,
                -17.119084577496782
              ],
              [
                152.07691285431156,
                -17.116459664208133
              ],
              [
                152.08309266388187,
                -17.11334253157749
              ],
              [
                152.08721253692875,
                -17.113998774365562
              ],
              [
                152.09390733062992,
                -17.111373789328116
              ],
              [
                152.09665391266117,
                -17.112686286475196
              ],
              [
                152.1012887698389,
                -17.1115378519777
              ],
              [
                152.10952851593265,
                -17.110389410393473
              ],
              [
                152.11759660064945,
                -17.111045663595064
              ],
              [
                152.126522992251,
                -17.113178470518882
              ],
              [
                152.13922593414554,
                -17.118100239353772
              ],
              [
                152.1397409182764,
                -17.111865976842996
              ],
              [
                152.1071252566553,
                -17.10152976573079
              ],
              [
                152.07914445221195,
                -17.107764374448923
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.15210053741703,
                -17.134997321191765
              ],
              [
                152.15519044220218,
                -17.140246587306287
              ],
              [
                152.15725037872562,
                -17.145987802292233
              ],
              [
                152.1536454898096,
                -17.174035185571373
              ],
              [
                152.1481523257471,
                -17.186171334787705
              ],
              [
                152.16240022003421,
                -17.196010872169754
              ],
              [
                152.19862077057132,
                -17.16993495558588
              ],
              [
                152.1723565798975,
                -17.147792147492012
              ],
              [
                152.15742204010257,
                -17.133849024462442
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                151.70269105255375,
                -17.363858143474797
              ],
              [
                151.698056195376,
                -17.369264736088574
              ],
              [
                151.70646760284671,
                -17.369756236595805
              ],
              [
                151.70663926422367,
                -17.36516884724439
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                151.5929994326807,
                -17.324368799738643
              ],
              [
                151.5867337924219,
                -17.331005569824228
              ],
              [
                151.5966901522852,
                -17.33411903362006
              ],
              [
                151.59729096710453,
                -17.329530752755822
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                146.61218923592696,
                -13.856499973335291
              ],
              [
                146.6094426538957,
                -13.885164718879059
              ],
              [
                146.58952993416915,
                -13.91815811810432
              ],
              [
                146.60566610360274,
                -13.941317339116416
              ],
              [
                146.60961421027275,
                -13.949730665410103
              ],
              [
                146.61321920418868,
                -13.954145548015793
              ],
              [
                146.65613454842696,
                -13.95914335833417
              ],
              [
                146.6530446436418,
                -13.908160614987487
              ],
              [
                146.62660879159102,
                -13.86516643261869
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                149.34351788085587,
                -17.960995640212637
              ],
              [
                149.3514143041957,
                -17.94760488203007
              ],
              [
                149.33012829345353,
                -17.938459391386637
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                147.828003428204,
                -16.37677804267369
              ],
              [
                147.8302350261044,
                -16.401810346524694
              ],
              [
                147.83761646531337,
                -16.40592719364339
              ],
              [
                147.83984806321376,
                -16.420417802538655
              ],
              [
                147.8580441691708,
                -16.42980318886876
              ],
              [
                147.87658359788173,
                -16.415971935066963
              ],
              [
                147.86594059251064,
                -16.390776766928692
              ],
              [
                147.8616490580868,
                -16.389953340399796
              ],
              [
                147.8551259257626,
                -16.392094242134732
              ],
              [
                147.85049106858486,
                -16.38880053741191
              ],
              [
                147.84465458176845,
                -16.384848018238454
              ],
              [
                147.83229496262783,
                -16.37364877859108
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                147.90319111130947,
                -16.425851502495494
              ],
              [
                147.90284778855556,
                -16.43128505053989
              ],
              [
                147.9019894816708,
                -16.434084091746698
              ],
              [
                147.9019894816708,
                -16.437541675199718
              ],
              [
                147.9019894816708,
                -16.444950575300055
              ],
              [
                147.92550709031337,
                -16.455651820642608
              ],
              [
                147.97580387376064,
                -16.41201996754246
              ],
              [
                147.96395923875087,
                -16.39802277027266
              ],
              [
                147.93992664597744,
                -16.413007966951476
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                147.96258594773525,
                -16.47441873283936
              ],
              [
                147.96704914353603,
                -16.504376175426618
              ],
              [
                148.03399708054775,
                -16.483966113452205
              ],
              [
                148.05047657273525,
                -16.479027871892693
              ],
              [
                148.06695606492275,
                -16.44840796524908
              ],
              [
                148.0202641703915,
                -16.419429840774278
              ],
              [
                147.99142505906337,
                -16.440834554591806
              ],
              [
                147.97734882615322,
                -16.432272952041487
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                147.72876424472673,
                -16.734581745870504
              ],
              [
                147.71846456210955,
                -16.74477373541772
              ],
              [
                147.72206945102556,
                -16.750691414551014
              ],
              [
                147.7299658743654,
                -16.746417553625562
              ],
              [
                147.73357076328142,
                -16.74000658237862
              ],
              [
                147.73116750400408,
                -16.735239310037155
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.4825283162993,
                -19.048494830623138
              ],
              [
                152.42691003016648,
                -19.239204519044293
              ],
              [
                152.4660488241118,
                -19.335772332496745
              ],
              [
                152.53540002040086,
                -19.173064907348355
              ],
              [
                152.5161739461821,
                -19.05628320748563
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.21610985926804,
                -19.054985170066562
              ],
              [
                152.24357567958054,
                -19.129605803785513
              ],
              [
                152.18452416590867,
                -19.149066519204588
              ],
              [
                152.21851311854542,
                -19.28214858197931
              ],
              [
                152.3348995321196,
                -19.25022520021318
              ],
              [
                152.36442528895554,
                -19.202247426167947
              ],
              [
                152.39189110926804,
                -19.159444629172434
              ],
              [
                152.35481225184617,
                -19.116630719506773
              ],
              [
                152.29850732020554,
                -19.051090996867778
              ],
              [
                152.24014245204148,
                -19.045249565699425
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                153.5721010667893,
                -21.633032116584168
              ],
              [
                153.5471243364426,
                -21.64771183387818
              ],
              [
                153.5569948656174,
                -21.664144963771793
              ],
              [
                153.5624880296799,
                -21.660794671701876
              ],
              [
                153.55167336293187,
                -21.650424226974547
              ],
              [
                153.5690969926926,
                -21.638138274449318
              ],
              [
                153.57562012501683,
                -21.63622348640203
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                153.6405081255051,
                -21.89042785389272
              ],
              [
                153.64668793507542,
                -21.890746422223888
              ],
              [
                153.65492768116917,
                -21.87991469974983
              ],
              [
                153.6624807817551,
                -21.872268282830625
              ],
              [
                153.67037720509495,
                -21.866214578893437
              ],
              [
                153.68102021046604,
                -21.859204706276298
              ],
              [
                153.69749970265354,
                -21.827974731269148
              ],
              [
                153.76925415821995,
                -21.72403823190797
              ],
              [
                153.78676361866917,
                -21.713831819637104
              ],
              [
                153.7768072588059,
                -21.70968525780734
              ],
              [
                153.75929779835667,
                -21.722443527731514
              ],
              [
                153.7108892900559,
                -21.76932044368645
              ],
              [
                153.68102021046604,
                -21.84199719674084
              ],
              [
                153.64668793507542,
                -21.87927751398974
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                147.7350134355637,
                -17.203048458155635
              ],
              [
                147.7466864091965,
                -17.310589129763354
              ],
              [
                147.77037567921604,
                -17.318455495014778
              ],
              [
                147.82118744679417,
                -17.330254411441555
              ],
              [
                147.79715485402073,
                -17.35909301455258
              ],
              [
                147.818097542009,
                -17.36695730104014
              ],
              [
                147.9004950029465,
                -17.34729595215858
              ],
              [
                147.85895294972386,
                -17.24961339585179
              ],
              [
                147.78101868458714,
                -17.175497483299058
              ],
              [
                147.74290985890354,
                -17.180417600764358
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                159.0245986221472,
                -19.7279971253702
              ],
              [
                158.7444472549597,
                -20.396192459081806
              ],
              [
                158.5796523330847,
                -20.72792873368975
              ],
              [
                158.82821800691283,
                -20.93457555289159
              ],
              [
                159.0245986221472,
                -20.650845134505172
              ],
              [
                159.1015029190222,
                -20.982025662803743
              ],
              [
                158.7444472549597,
                -21.028178877300984
              ],
              [
                158.57560702104934,
                -21.17162302416528
              ],
              [
                158.5906386612097,
                -21.315032406906845
              ],
              [
                159.14012702951425,
                -21.294956869210257
              ],
              [
                159.3377089737097,
                -21.179358554327415
              ],
              [
                159.46130516511596,
                -20.820377265465346
              ],
              [
                159.21411278230346,
                -20.596863340360446
              ],
              [
                159.0630507705847,
                -20.285454180816657
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                159.396494342084,
                -21.35844488075472
              ],
              [
                159.38138814091212,
                -21.430049884516535
              ],
              [
                159.16370216020556,
                -21.49651782903877
              ],
              [
                159.24112248018832,
                -21.60980607602976
              ],
              [
                159.52146382450587,
                -21.510563545404516
              ],
              [
                159.57364888309962,
                -21.56676888434033
              ],
              [
                159.58051533817775,
                -21.48245272108248
              ],
              [
                159.48713154911525,
                -21.43516318538823
              ],
              [
                159.45554585575587,
                -21.367397422896758
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.44858021854884,
                -19.05061149420256
              ],
              [
                158.44961018681056,
                -19.072677330489498
              ],
              [
                158.43793721317775,
                -19.08598031231409
              ],
              [
                158.42695088505275,
                -19.091495869458782
              ],
              [
                158.41562123417384,
                -19.103824097355318
              ],
              [
                158.42077107548243,
                -19.132045790484156
              ],
              [
                158.45510335087306,
                -19.096686814198343
              ],
              [
                158.4578499329043,
                -19.083709147146585
              ],
              [
                158.47158284306056,
                -19.07332628121525
              ],
              [
                158.45578999638087,
                -19.05061149420256
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.46643300175197,
                -19.10349968207312
              ],
              [
                158.46574635624415,
                -19.116475797025466
              ],
              [
                158.539560748334,
                -19.178746960824903
              ],
              [
                158.54333729862697,
                -19.168694353744325
              ],
              [
                158.539560748334,
                -19.15864113350714
              ],
              [
                158.4952721130801,
                -19.134965000895715
              ],
              [
                158.47604603886134,
                -19.11777335251233
              ],
              [
                158.4732994568301,
                -19.108041438125273
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.87071847241396,
                -19.023037170698103
              ],
              [
                158.87432336132997,
                -19.01914224818001
              ],
              [
                158.87758492749208,
                -19.017600482801573
              ],
              [
                158.87758492749208,
                -19.013948876183022
              ],
              [
                158.87071847241396,
                -19.017194752693708
              ],
              [
                158.86719941418642,
                -19.02173887333416
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.91071557324403,
                -19.01427346668578
              ],
              [
                158.9115738801288,
                -19.016464436004114
              ],
              [
                158.916294567995,
                -19.017925066174875
              ],
              [
                158.91552209179872,
                -19.01573411610619
              ],
              [
                158.9122605256366,
                -19.01411117151361
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.90393494885438,
                -19.004454323675134
              ],
              [
                158.91320466320985,
                -19.00778153624347
              ],
              [
                158.91294717114442,
                -18.999990885232055
              ],
              [
                158.90479325573915,
                -18.998854718146703
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.77362395635612,
                -19.49029268148022
              ],
              [
                158.77705718389518,
                -19.488674424968778
              ],
              [
                158.7828936707116,
                -19.480421065177755
              ],
              [
                158.7974848877526,
                -19.470872536021933
              ],
              [
                158.79096175542838,
                -19.46812116048687
              ],
              [
                158.77637053838737,
                -19.4763751469544
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                158.8223757874108,
                -19.43234903038441
              ],
              [
                158.81997252813346,
                -19.436881682210323
              ],
              [
                158.82392073980338,
                -19.44011921319104
              ],
              [
                158.82701064458854,
                -19.436557925561498
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                155.70096740148415,
                -21.023312555883052
              ],
              [
                155.65290221593727,
                -21.057919222509142
              ],
              [
                155.68860778234352,
                -21.078423080718707
              ],
              [
                155.72431334874977,
                -21.07201592868473
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                155.5349964640128,
                -23.322285449147348
              ],
              [
                155.57756848549718,
                -23.32354652595268
              ],
              [
                155.5624622843253,
                -23.276878718243925
              ],
              [
                155.53156323647374,
                -23.285709018327307
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                151.90061424326257,
                -17.120793892000005
              ],
              [
                151.90885398935632,
                -17.123090639637393
              ],
              [
                151.91091392587975,
                -17.119153340609582
              ],
              [
                151.90507743906335,
                -17.116528428291144
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                151.99228141855554,
                -17.211001901553097
              ],
              [
                151.99468467783288,
                -17.226086953898747
              ],
              [
                152.00292442392663,
                -17.219200452260374
              ],
              [
                152.0018944556649,
                -17.21460930864561
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                148.42678384689373,
                -17.8220058831464
              ],
              [
                148.42706279663128,
                -17.823742251242738
              ],
              [
                148.43453006652874,
                -17.82950278656719
              ],
              [
                148.43613939193767,
                -17.82993175515045
              ],
              [
                148.43710498718303,
                -17.826867671180015
              ],
              [
                148.4346158972172,
                -17.825008767889056
              ],
              [
                148.42950897125286,
                -17.8220058831464
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                150.7444579836211,
                -17.705795971196654
              ],
              [
                150.73407247031543,
                -17.71339995049014
              ],
              [
                150.73544576133105,
                -17.717855896106013
              ],
              [
                150.74274136985156,
                -17.720880970402995
              ],
              [
                150.7469470735869,
                -17.71278673830024
              ],
              [
                150.74608876670214,
                -17.70747214485678
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.40158148539388,
                -19.19100631780755
              ],
              [
                152.39728995097005,
                -19.196032017116867
              ],
              [
                152.3916251255306,
                -19.207541911390905
              ],
              [
                152.37995215189778,
                -19.22537255116488
              ],
              [
                152.36759253275716,
                -19.24611849615801
              ],
              [
                152.35883780253255,
                -19.251952820809276
              ],
              [
                152.36330099833333,
                -19.25535608104204
              ],
              [
                152.39591665995442,
                -19.209487166073433
              ],
              [
                152.4029547764095,
                -19.196680483268647
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.32141562235677,
                -19.27933895962576
              ],
              [
                152.31746741068685,
                -19.279500994165396
              ],
              [
                152.31489249003255,
                -19.28047319803702
              ],
              [
                152.3154074741634,
                -19.28290368246896
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.25189276469075,
                -19.307368549236166
              ],
              [
                152.25283689737554,
                -19.30518143171793
              ],
              [
                152.25103445780599,
                -19.303642348712486
              ],
              [
                152.24828787577474,
                -19.30461440920694
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                152.15456076395833,
                -19.223103304438894
              ],
              [
                152.15885229838216,
                -19.229424699503742
              ],
              [
                152.16777868998372,
                -19.238176998745935
              ],
              [
                152.1748168064388,
                -19.23995981732377
              ],
              [
                152.17327185404622,
                -19.236880391256623
              ],
              [
                152.1715552402767,
                -19.234773382248136
              ],
              [
                152.1664053989681,
                -19.231207613106303
              ],
              [
                152.15850897562825,
                -19.222454942475178
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                150.6368497637293,
                -17.773992425211254
              ],
              [
                150.63762223992558,
                -17.775259294974596
              ],
              [
                150.63818013940067,
                -17.776853086114905
              ],
              [
                150.63835180077763,
                -17.778160801562453
              ],
              [
                150.63856637749882,
                -17.779182447596874
              ],
              [
                150.6383088854334,
                -17.779713701226225
              ],
              [
                150.63715017113896,
                -17.780449280566824
              ],
              [
                150.63577688012333,
                -17.77999976021853
              ],
              [
                150.63500440392704,
                -17.779059850381174
              ],
              [
                150.63470399651737,
                -17.778365131236644
              ],
              [
                150.6340602663538,
                -17.777752141513126
              ],
              [
                150.6328157213709,
                -17.780367549678537
              ],
              [
                150.63577688012333,
                -17.782329080678164
              ],
              [
                150.63942468438358,
                -17.781756969694648
              ],
              [
                150.64071214471073,
                -17.779427641775936
              ],
              [
                150.64084089074345,
                -17.77750694503493
              ],
              [
                150.6389955309412,
                -17.77591315972599
              ],
              [
                150.63796556267948,
                -17.774237626511425
              ],
              [
                150.6375364092371,
                -17.773420287536013
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                150.8253781045517,
                -17.654739408479408
              ],
              [
                150.82786719451752,
                -17.654330467118694
              ],
              [
                150.8291975701889,
                -17.654534937915155
              ],
              [
                150.83014170776215,
                -17.65527103085952
              ],
              [
                150.83207289825287,
                -17.656456952049965
              ],
              [
                150.83340327392426,
                -17.656988569357704
              ],
              [
                150.83387534271088,
                -17.658419838920537
              ],
              [
                150.83370368133393,
                -17.659973775844602
              ],
              [
                150.8356777871689,
                -17.66001466874036
              ],
              [
                150.83421258105088,
                -17.65603993218677
              ],
              [
                150.8312883421762,
                -17.652719471447906
              ],
              [
                150.82643890827728,
                -17.65231052549899
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        }
      ],
      "coordinates": []
    }),
    imageVisParam2 = {"opacity":1,"bands":["b3","b2","b1"],"min":44.94,"max":2202.06,"gamma":1},
    brs_sl = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[147.10680617969024, -15.482576389053412],
           [147.10191383044707, -15.482410956914025],
           [147.0956482339212, -15.484809738517354],
           [147.09350242297637, -15.486712149534087],
           [147.09315910022246, -15.490516976124198],
           [147.10423125903594, -15.50093853379749],
           [147.10963859240996, -15.503585194906915],
           [147.1201099364041, -15.50879570985596],
           [147.1241439787625, -15.493577329307456],
           [147.11676253955352, -15.484478849146273],
           [147.1124710051297, -15.483155400499324]]],
         [[[147.74480085727976, -16.730489429851918],
           [147.7387927090864, -16.735256821027683],
           [147.74222593662546, -16.745941919661465],
           [147.73982267734812, -16.754818314916918],
           [147.74016600010202, -16.7594207272668],
           [147.73158293125437, -16.758105763668752],
           [147.7200816189985, -16.75892761698253],
           [147.71321516392038, -16.75301019389712],
           [147.7094386136274, -16.747421347611123],
           [147.6929591214399, -16.752517067001506],
           [147.7094386136274, -16.767803406534217],
           [147.73862104770944, -16.770761911002367],
           [147.743942550395, -16.768953941519534],
           [147.74960737583444, -16.76763904382517],
           [147.76128034946726, -16.764187394120462],
           [147.75510053989694, -16.745613156333913],
           [147.74823408481882, -16.73131140235576]]],
         [[[148.1866572415571, -17.38921435531182],
           [148.18056326267526, -17.39314589392454],
           [148.17807418862287, -17.39664735446195],
           [148.17652922031687, -17.39548020499372],
           [148.17657196842276, -17.397998669893603],
           [148.1848547970991, -17.410509178401334],
           [148.19438200352, -17.417470409362558],
           [148.2027934109907, -17.407642712086528],
           [148.19815855381296, -17.393555424337197],
           [148.1920216083786, -17.388436239734627],
           [148.19112043735788, -17.38823145745665]]],
         [[[148.45969541322515, -17.719426049473004],
           [148.45059736024666, -17.721551764074757],
           [148.45866544496346, -17.727683491909247],
           [148.4633003021412, -17.72424975016102]]],
         [[[149.61874966584185, -18.078116977392064],
           [149.6210670944307, -18.07958565601325],
           [149.62630276642778, -18.081462283033005],
           [149.62801938019732, -18.079340877096506],
           [149.61952214203814, -18.07615872011419]]],
         [[[151.0672535873572, -17.45061820427271],
           [151.07034349214234, -17.450454443405334],
           [151.07729577790894, -17.45184640608791],
           [151.0811581588904, -17.451518886413115],
           [151.08193063508668, -17.447424840821423],
           [151.07351922761598, -17.445295900776284],
           [151.0653653122107, -17.444313304678595]]],
         [[[151.07446336518922, -17.413319008370816],
           [151.0708584762732, -17.4183965602074],
           [151.0708584762732, -17.42412911035545],
           [151.07437753450074, -17.424948031398202],
           [151.07755326997437, -17.41847845504804],
           [151.07729577790894, -17.41479315086402],
           [151.07643747102418, -17.413400905488086]]],
         [[[155.84208269443428, -17.33731102527838],
           [155.83006639804756, -17.357301133882373],
           [155.8492924722663, -17.392360484250155],
           [155.87435503330147, -17.394981474300764],
           [155.88602800693428, -17.38122085760622],
           [155.84997911777413, -17.33763874953864]]],
         [[[155.86714525546944, -17.417258372692075],
           [155.85066576328194, -17.425447725996055],
           [155.85512895908272, -17.442807939843743],
           [155.87332506503975, -17.44051517609717]]],
         [[[158.43088674895017, -19.828920343688697],
           [158.44770956389158, -19.86960897603227],
           [158.46968222014158, -19.929654061868597],
           [158.46933889738767, -19.95030946551174],
           [158.39312124602048, -19.9070591223648],
           [158.3443694149658, -19.877358008605498],
           [158.30866384855955, -19.857015990309595],
           [158.29424429289548, -19.85959924838312],
           [158.33166647307127, -19.90415382451032],
           [158.39140463225095, -19.928040244709262],
           [158.45079946867673, -19.96870340908872],
           [158.47792196623533, -19.985159329608308],
           [158.49731970183103, -19.984836681015526],
           [158.4962897335693, -19.95515018488758],
           [158.48358679167478, -19.883330962622352],
           [158.45406103483884, -19.825529153642577],
           [158.44891119353025, -19.816485626431216],
           [158.43431997648923, -19.818746556466493]]],
         [[[158.2425635958399, -19.48631703538091],
           [158.27758251673833, -19.50249910812104],
           [158.32221447474615, -19.358745805827716],
           [158.38332592494146, -19.216810838819384],
           [158.3908790255274, -19.170120457446757],
           [158.35929333216802, -19.161688838747814],
           [158.30161510951177, -19.28228471781714],
           [158.26316296107427, -19.409915837829228]]],
         [[[158.3873262522588, -19.10411337083643],
           [158.3454409813619, -19.11352091711048],
           [158.35917378643848, -19.159254617424292],
           [158.4092989085088, -19.160876139988204],
           [158.4206285593877, -19.114169911387933],
           [158.45187092999316, -19.067450484255673],
           [158.4532442210088, -19.090162963710526],
           [158.47693349102832, -19.09665167144865],
           [158.50062276104785, -19.059013627579773],
           [158.44740773419238, -19.018770408908214],
           [158.42543507794238, -19.038568695109383],
           [158.41994191387988, -19.068099455447634]]],
         [[[158.9248563536063, -19.004372698326783],
           [158.91060845931918, -19.00161349461226],
           [158.91472833236605, -19.010540164674577],
           [158.92605798324496, -19.021413824465984],
           [158.93189447006137, -19.03196221756079],
           [158.9413358457938, -19.026120113356587],
           [158.933267761077, -19.015733643147595],
           [158.92451303085238, -19.003236561162755]]],
         [[[159.53090381281334, -21.8605494410296],
           [159.51219272272544, -21.859752850323634],
           [159.50000476496177, -21.870108182888288],
           [159.5156259502645, -21.87711752013948],
           [159.55236148493248, -21.863895073472552],
           [159.55939960138755, -21.842704744491183],
           [159.55218982355552, -21.84063334073121],
           [159.54257678644615, -21.84079268054762],
           [159.54034518854576, -21.842704744491183],
           [159.543091770577, -21.848122120096694],
           [159.5420618023153, -21.85290198685234],
           [159.53897189753013, -21.858318975856214]]],
         [[[159.42310046808677, -21.883648638150344],
           [159.4248170818563, -21.88651586380202],
           [159.42825030939537, -21.88635657500012],
           [159.43082523004966, -21.88189641632414],
           [159.4273920025106, -21.880462764276167]]]]),
    sl_brs = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[146.570795877087, -13.792982352953347],
           [146.53921018372762, -13.809986281942917],
           [146.55740628968465, -13.83298962312686],
           [146.54024015198934, -13.883655623350094],
           [146.57869230042684, -13.93197800281789],
           [146.6034115387081, -13.855657357899567],
           [146.64117704163777, -13.847323888802231]]],
         [[[146.61680112611043, -13.849990631429252],
           [146.62366758118856, -13.860323970022495],
           [146.6487301422237, -13.888654957974504],
           [146.6593731475948, -13.910650748480608],
           [146.6693295074581, -13.954636052894132],
           [146.68821225892293, -13.979290812947653],
           [146.67722593079793, -13.993616014751991],
           [146.61268125306356, -13.956301998160882],
           [146.6044415069698, -13.94130805755143],
           [146.58967862855184, -13.922980807367358],
           [146.58435712586626, -13.917648970697096],
           [146.58238303843618, -13.92048151018899],
           [146.58143888245806, -13.92348066074981],
           [146.58418546448934, -13.935976643868974],
           [146.59723172913777, -13.957634745707002],
           [146.62984739075887, -13.984621224806322],
           [146.65456662904012, -14.001944210208707],
           [146.67722593079793, -14.023596105306577],
           [146.6971386505245, -14.012270753341564],
           [146.71533475648152, -13.972294460036442],
           [146.69404874573934, -13.946306146036934],
           [146.6748226715206, -13.88632194857001],
           [146.62710080872762, -13.845657159123107]]],
         [[[147.82170515415476, -16.40265314387583],
           [147.83131819126413, -16.425706265811996],
           [147.85844068882272, -16.462914820472083],
           [147.82204847690866, -16.51854968548656],
           [147.79011946079538, -16.523816062432612],
           [147.80659895298288, -16.55376584916916],
           [147.83852796909616, -16.553107662074616],
           [147.87045698520944, -16.509662348877285],
           [147.88590650913522, -16.50472476307538],
           [147.9168055569868, -16.426694195677115],
           [147.89448957798288, -16.37992667975854],
           [147.83234815952585, -16.377620948331273]]],
         [[[147.98238020298288, -16.42307176162107],
           [147.97585707065866, -16.44250039032736],
           [147.96555738804147, -16.49221564816544],
           [147.96315412876413, -16.503737230784047],
           [147.9665873563032, -16.53434838548186],
           [147.9992030179243, -16.536981376455653],
           [148.01224928257272, -16.512954002682992],
           [148.0270121609907, -16.500774603652992],
           [148.06237440464304, -16.501762151072608],
           [148.09670668003366, -16.469170425393624],
           [148.09567671177194, -16.42307176162107],
           [148.077137283061, -16.416156018250977],
           [148.02426557895944, -16.399688972867427],
           [147.9827235257368, -16.420766541163843]]],
         [[[148.34989459921627, -17.69639261080601],
           [148.34920795370846, -17.699090975241237],
           [148.3522978584936, -17.704978175054926],
           [148.3577910225561, -17.707104060867195],
           [148.36122425009518, -17.709884027391375],
           [148.36362750937252, -17.70890286765369],
           [148.36379917074947, -17.7043240512773],
           [148.35444362570553, -17.69671968744273]]],
         [[[148.39512737204342, -17.70440581687988],
           [148.387488440769, -17.706122885929172],
           [148.38877590109615, -17.708739340509123],
           [148.39692981650143, -17.707594646324495]]],
         [[[148.44087512900143, -17.714789745594963],
           [148.4413042824438, -17.71732431410219],
           [148.4431925575903, -17.718141909205773],
           [148.44619663168697, -17.718795982604885],
           [148.451603965061, -17.720594672151353],
           [148.45254810263424, -17.71936829487216],
           [148.45469386984615, -17.718795982604885],
           [148.45538051535397, -17.7111104695185],
           [148.44396503378658, -17.712663950844025],
           [148.44147594382076, -17.714217418717162]]],
         [[[148.56389386903572, -17.55321440657701],
           [148.55908735048104, -17.561724960900122],
           [148.573850228899, -17.59379960692167],
           [148.5838065887623, -17.617033805019783],
           [148.58346326600838, -17.640592190370445],
           [148.56526716005135, -17.67199857926125],
           [148.53265149843025, -17.68868099340195],
           [148.51033551942635, -17.69751223270399],
           [148.52200849305916, -17.69653100533742],
           [148.5508476043873, -17.695222693841483],
           [148.58174665223885, -17.67984931996175],
           [148.59135968934822, -17.65400600598631],
           [148.59410627137947, -17.62554135478604],
           [148.58878476869393, -17.601162880602722],
           [148.58500821840096, -17.59019967501319],
           [148.5757385040455, -17.576374556756416],
           [148.56990201722908, -17.563118630840975]]],
         [[[148.5255450606656, -17.85995832262825],
           [148.51249879601716, -17.870823348366503],
           [148.49601930382966, -17.87825693062775],
           [148.49739259484528, -17.881932762953582],
           [148.50254243615387, -17.88013569887723],
           [148.51258462670563, -17.879808958000563],
           [148.52545922997712, -17.87065996943937],
           [148.52889245751618, -17.865513456351774],
           [148.52743333581208, -17.86093865295662]]],
         [[[151.41314952577636, -17.639430385225864],
           [151.41366450990722, -17.642211398236753],
           [151.41915767396972, -17.638694227538053],
           [151.4210459491162, -17.638448840973787],
           [151.4243933459668, -17.636894718307136],
           [151.4254233142285, -17.633213848006175]]],
         [[[151.4896177204876, -17.595910651404758],
           [151.4951109300242, -17.598201599967545],
           [151.50506724441334, -17.593783452434714],
           [151.51605357253834, -17.59280165984793],
           [151.53133143508717, -17.587647161255227],
           [151.54060114944264, -17.58527440614653],
           [151.55347575271412, -17.58453802753895],
           [151.55656565749928, -17.58069244608217],
           [151.5557073506145, -17.578401422509884],
           [151.52635325515553, -17.584701667488737],
           [151.50789965713307, -17.589528979366946]]],
         [[[151.57141436660572, -17.580283336858667],
           [151.57089938247486, -17.58437438744107],
           [151.57356013381764, -17.583392543743255],
           [151.57304514968678, -17.579628760175957]]],
         [[[151.59724940383717, -17.57324651336435],
           [151.60025347793385, -17.575128481348287],
           [151.60394419753834, -17.574146587451537],
           [151.6261743458538, -17.563509062017822],
           [151.62235504346327, -17.560849819417815],
           [151.60583247268482, -17.56931886494565]]],
         [[[151.63964976394462, -17.55655341890107],
           [151.64514303184149, -17.55774018048514],
           [151.65767420852467, -17.552379904784726],
           [151.66359652602955, -17.54599669720308],
           [151.66170825088307, -17.541250063744663],
           [151.65269602859303, -17.548697312472136]]],
         [[[151.68823618056706, -17.52061935972115],
           [151.67544740798405, -17.53183231103056],
           [151.67690652968815, -17.53445129469602],
           [151.68651956679753, -17.529540669299557],
           [151.69081110122136, -17.521928937218355]]],
         [[[151.70394319655827, -17.50654080495628],
           [151.69699091079167, -17.514807995582537],
           [151.6914119160407, -17.517345374637856],
           [151.69364351394108, -17.5213559982261],
           [151.7035140431159, -17.512597991382233],
           [151.70780557753972, -17.507523065127057]]],
         [[[151.71286958815983, -17.50040155855763],
           [151.71424287917546, -17.50195685393198],
           [151.7210235035651, -17.497372787258573],
           [151.72703165175847, -17.489841569585717],
           [151.73801797988347, -17.483046833800515],
           [151.75115007522038, -17.477398004818195],
           [151.75372499587468, -17.473877631393684],
           [151.75003427627018, -17.47256770762052],
           [151.71862024428776, -17.491560679360706]]],
         [[[151.76359552504948, -17.456684131950972],
           [151.75810236098698, -17.46536295837872],
           [151.76119226577214, -17.469702216502302],
           [151.76823038222722, -17.462251728530045]]],
         [[[151.8064250385993, -17.43334750185696],
           [151.7851390278571, -17.44554842842494],
           [151.78668398024968, -17.447186074551745],
           [151.79226297500065, -17.445630311080645],
           [151.80839914443425, -17.43834261073248]]],
         [[[151.82084459426335, -17.428761707735816],
           [151.82230371596745, -17.432528618501724],
           [151.85517686965397, -17.412628623647866],
           [151.86041254165104, -17.411809647361054],
           [151.85938257338933, -17.409188898573547],
           [151.84067148330143, -17.416641554381]]],
         [[[151.87405962111882, -17.411973442912124],
           [151.87457460524968, -17.41451225517449],
           [151.8799819386237, -17.41434846189973],
           [151.89045328261784, -17.40959839304946],
           [151.88959497573308, -17.40607671056822]]],
         [[[151.908134404444, -17.398050296943453],
           [151.90882104995183, -17.40091691369244],
           [151.92152399184636, -17.394036957995173],
           [151.91929239394597, -17.390023530979967]]],
         [[[152.05982517962093, -17.332883001815656],
           [152.05682110552425, -17.333210733981808],
           [152.05501866106624, -17.34099420094961],
           [152.04883885149593, -17.35189050002758],
           [152.04008412127132, -17.364752215301365],
           [152.04180073504085, -17.368356610516354],
           [152.04686474566097, -17.366390585553567],
           [152.05450367693538, -17.34730266351875],
           [152.0584518886053, -17.344926774509723],
           [152.06343006853695, -17.33984718445082],
           [152.06257176165218, -17.333210733981808]]],
         [[[152.05064129595394, -17.321125080909876],
           [152.05433201555843, -17.318666913651402],
           [152.04763722185726, -17.316782296481744]]],
         [[[152.1416342882506, -17.176369906751503],
           [152.14506751578966, -17.177763946732213],
           [152.1467841295592, -17.16866149644465],
           [152.14729911369005, -17.15529402548645],
           [152.14506751578966, -17.139875133326516],
           [152.13811523002306, -17.13716849359387],
           [152.1339095262877, -17.140531282475077],
           [152.14326507133165, -17.16292098274171]]],
         [[[152.08584434074083, -17.12634154045214],
           [152.0954573778502, -17.12486508889437],
           [152.10404044669787, -17.120927827431103],
           [152.11476928275744, -17.12141998967233],
           [152.11880332511583, -17.126095466006635],
           [152.12978965324083, -17.133723622367498],
           [152.13554030936876, -17.132165207263863],
           [152.1335662035338, -17.126833688366165],
           [152.1259272722594, -17.11953336067573],
           [152.11777335685412, -17.11649830866184],
           [152.11228019279162, -17.112396808361737],
           [152.10335380119005, -17.113545237558505],
           [152.10086471122423, -17.116416279541845],
           [152.09562903922716, -17.117646712544303],
           [152.08876258414904, -17.120763773061313]]],
         [[[152.35226351636527, -19.233678463122388],
           [152.32411105054496, -19.262039966509878],
           [152.29750353711722, -19.274679513735073],
           [152.29733187574027, -19.278568409061705],
           [152.31398302930472, -19.272897072526952],
           [152.32771593946097, -19.26690144617658],
           [152.33629900830863, -19.259933280552644],
           [152.34059054273246, -19.25960917261844],
           [152.34762865918754, -19.252640697103296],
           [152.3623915376055, -19.236757949242094],
           [152.3675413789141, -19.22638471302666],
           [152.3627348603594, -19.219252733150288]]],
         [[[159.00063736581842, -19.084545421131384],
           [159.00046570444147, -19.099956209633426],
           [159.01179535532037, -19.119744801288235],
           [159.0080188050274, -19.1346657791055],
           [158.9996073975567, -19.141639252161674],
           [158.9893077149395, -19.15169350865744],
           [158.99274094247858, -19.154612371600788],
           [159.0154002442364, -19.144882627636],
           [159.02913315439264, -19.133043998975488],
           [159.02844650888483, -19.123312983791692],
           [159.02020676279108, -19.108390980869746],
           [159.0124820008282, -19.09590087808235],
           [159.00561554575006, -19.086005452084613]]],
         [[[158.93935642767383, -19.21064530408373],
           [158.9357515387578, -19.212914722812307],
           [158.93480740118457, -19.219155462787185],
           [158.93901310491992, -19.2222352211668],
           [158.94107304144336, -19.218263943011298],
           [158.9402147345586, -19.215022012154577],
           [158.94064388800098, -19.21153686517701]]],
         [[[158.95909432646147, -19.2650994370364],
           [158.95394448515287, -19.28551630138407],
           [158.93128518339506, -19.353554119527406],
           [158.92029885527006, -19.39986840402809],
           [158.88836983915678, -19.428039179238525],
           [158.8674271511685, -19.43872336829093],
           [158.87498025175444, -19.45361530714673],
           [158.8780701565396, -19.441313368859117],
           [158.89592293974272, -19.436780840748643],
           [158.91411904569975, -19.430953118688112],
           [158.9275086331021, -19.417030491867855],
           [158.93609170194975, -19.392096296926887],
           [158.9271653103482, -19.384809609461193],
           [158.93351678129545, -19.388695883361628],
           [158.93489007231108, -19.38173291017634],
           [158.93317345854155, -19.377036783421126],
           [158.93780831571928, -19.37088303310382],
           [158.9420998501431, -19.362461735054026],
           [158.96184090849272, -19.31775679835925],
           [158.96939400907866, -19.302528410686673],
           [158.97076730009428, -19.286326441920284],
           [158.9669907498013, -19.27644245356576],
           [158.96424416777006, -19.268178333436065]]],
         [[[159.43271350519615, -21.878869800659473],
           [159.43889331476646, -21.885400838452956],
           [159.45211124079185, -21.88779016781266],
           [159.45331287043052, -21.89097587802386],
           [159.46120929377037, -21.888745888348527],
           [159.46687411920982, -21.888108742036255],
           [159.4713373150106, -21.89113516166624],
           [159.47665881769615, -21.887312305142945],
           [159.47562884943443, -21.88094064989293],
           [159.43717670099693, -21.876798921369364],
           [159.43151187555748, -21.879188394805645]]],
         [[[159.54480845578325, -21.388758695398277],
           [159.531075545627, -21.400186709472543],
           [159.53193385251177, -21.41193345722266],
           [159.53373629696978, -21.432627810156227],
           [159.55330569394243, -21.439578536993213],
           [159.55862719662798, -21.432468019439746],
           [159.55759722836626, -21.422001346573722],
           [159.55588061459673, -21.397389725632113],
           [159.55098826535357, -21.392674688905043],
           [159.5585413659395, -21.398748267323082],
           [159.56197459347857, -21.394592688288704],
           [159.55622393735064, -21.388918533920137]]],
         [[[153.69833766735178, -21.83012574932637],
           [153.65988551891428, -21.869798795015164],
           [153.61748515880686, -21.911690483058322],
           [153.6253815821467, -21.914079371749533],
           [153.6447793177424, -21.903090152063925],
           [153.66486369884592, -21.88349857180539],
           [153.68408977306467, -21.86087730318914],
           [153.70056926525217, -21.845582020558965],
           [153.70880901134592, -21.835702947083927]]]]),
    rs_brs = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[148.18189363834665, -17.38767814890186],
           [148.1762288129072, -17.394189768489056],
           [148.17676525042182, -17.395479777243786],
           [148.17773084995554, -17.396278352085726],
           [148.1839535748701, -17.388906774111373]]],
         [[[148.28777179236624, -17.50306405843733],
           [148.28948840613577, -17.507484271977123],
           [148.28914508338187, -17.508793944221566],
           [148.29000339026663, -17.512722904288633],
           [148.2890592526934, -17.516733630002946],
           [148.2926641416094, -17.522217540114127],
           [148.29446658606741, -17.521644602033014],
           [148.29360827918265, -17.51959837983519],
           [148.29541072364066, -17.51648807791365],
           [148.29369410987113, -17.507729836242298],
           [148.29129085059378, -17.504455618744153],
           [148.29146251197074, -17.50150877254031],
           [148.28923091407034, -17.50069019566832]]],
         [[[148.33283594141946, -17.574847868521633],
           [148.3299177160659, -17.575175160816052],
           [148.33326509195254, -17.586221024788838],
           [148.3350675286597, -17.586548312154882],
           [148.3368699563932, -17.585321016908587],
           [148.33592582523633, -17.578202614894078]]],
         [[[148.46759183656502, -17.698167517945794],
           [148.45677716981697, -17.70994178504605],
           [148.462184503191, -17.712394660126826],
           [148.46887929689217, -17.704708872803042],
           [148.47042424928475, -17.700129949430185]]],
         [[[148.56358512886845, -17.554291712089004],
           [148.5601519013294, -17.563129534857605],
           [148.58555778511845, -17.618928776461917],
           [148.57851966866338, -17.658027055101666],
           [148.51122840889775, -17.6962991514091],
           [148.5168932343372, -17.700224033770166],
           [148.5256479645618, -17.695154377893385],
           [148.52684959420048, -17.69335543333918],
           [148.5392092133411, -17.693682515507493],
           [148.546933975304, -17.69319189203164],
           [148.5769747162708, -17.675201439345653],
           [148.58813270577275, -17.654101251389164],
           [148.5931108857044, -17.620892072167294],
           [148.58899101265752, -17.6063304540502],
           [148.58263954171025, -17.59045858885201]]],
         [[[148.4168167581944, -17.81907963445413],
           [148.4149284830479, -17.822123424398796],
           [148.41576533226055, -17.822654550203364],
           [148.41855482963604, -17.82161272501708],
           [148.41887669471782, -17.820959027673076],
           [148.41799693016094, -17.819324773823887]]],
         [[[148.42434831931405, -17.777754770990004],
           [148.41447779013924, -17.781350947294353],
           [148.40907045676522, -17.78854308273091],
           [148.4094996102076, -17.7927928448036],
           [148.4127611763697, -17.792547668971963],
           [148.41653772666268, -17.78494705121223],
           [148.42494913413339, -17.780860563878637],
           [148.42542120030913, -17.779552861670517]]],
         [[[148.50259508151362, -17.8809840007847],
           [148.50345338839838, -17.88196421512575],
           [148.51426805514643, -17.881310739499533],
           [148.5272284891064, -17.872815337567502],
           [148.5304900552685, -17.868812555481846],
           [148.5298034097607, -17.862440593942875],
           [148.5253402139599, -17.860725026812965],
           [148.52122034091303, -17.870119596280794],
           [148.5096331979687, -17.877389835248252]]],
         [[[148.50860322970698, -17.830698789244284],
           [148.51049150485346, -17.835601192856974],
           [148.52336610812495, -17.8509611834258],
           [148.5290309335644, -17.844915387881752],
           [148.52705682772944, -17.843199651731773],
           [148.52559770602534, -17.839768129817326],
           [148.52336610812495, -17.83617313115464],
           [148.52079118747065, -17.834048779646608],
           [148.51864542025874, -17.83078049707691],
           [148.51813043612788, -17.829064624721344],
           [148.51564134616206, -17.827021897987123],
           [148.50971902865717, -17.826041380835537]]],
         [[[150.82231141234314, -17.6611711388363],
           [150.8248434176532, -17.66158006465491],
           [150.8283195605365, -17.656386637724705],
           [150.82827664519226, -17.65573233708885],
           [150.8281049838153, -17.655118928082793],
           [150.82904912138855, -17.654260151962827],
           [150.82879162932312, -17.653687632273616],
           [150.8295641055194, -17.65360584359796],
           [150.8303365817157, -17.65286974384503],
           [150.82857705260193, -17.652215430427038],
           [150.82441426421082, -17.653973892345803],
           [150.82278348112976, -17.659249175041754]]],
         [[[150.80559873353639, -17.423371605120355],
           [150.8014788604895, -17.425787421654512],
           [150.8005776382605, -17.42963628364508],
           [150.80585622560181, -17.432666181728415],
           [150.80615663301148, -17.43151973972141],
           [150.80332422029176, -17.428817383635835],
           [150.8043971038977, -17.42693389967075],
           [150.81057691346803, -17.42545985518443],
           [150.81139230500855, -17.422634569983]]],
         [[[151.5498885635264, -17.347158139824167],
           [151.51572794951272, -17.35813599455148],
           [151.5179595474131, -17.367474845950408],
           [151.5095481399424, -17.368785523845848],
           [151.48826212920022, -17.38090884972335],
           [151.49341197050882, -17.387297847071515],
           [151.50422663725686, -17.377632354316376],
           [151.5286025527842, -17.376813221301983],
           [151.56035990752054, -17.360265949921846]]],
         [[[151.72894505011408, -17.207613505200513],
           [151.72551182257502, -17.222780816098904],
           [151.7295458649334, -17.224666394817493],
           [151.73315075384943, -17.214500438393465],
           [151.73855808722345, -17.207777482780173],
           [151.74482372748224, -17.201218266241135],
           [151.74954441534845, -17.202202163543706],
           [151.75031689154474, -17.199824402775587],
           [151.74799946295587, -17.19875850010174],
           [151.73898724066584, -17.198512521689963]]]]),
    brs_rs = 
    /* color: #ffc82d */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[148.20662064207886, -17.39971405455796],
           [148.20516152037476, -17.40030785202905],
           [148.20046229018067, -17.419021721709516],
           [148.20392777960842, -17.416841250422042],
           [148.20730728758667, -17.410975402123636],
           [148.20709271086548, -17.400410230708474]]],
         [[[148.33933634413575, -17.432943269278578],
           [148.34150356901978, -17.432431466478384],
           [148.33998007429932, -17.429811013651197],
           [148.33875698698853, -17.430015737883362]]],
         [[[148.29109949721192, -17.499629148209294],
           [148.29161448134278, -17.501511880495546],
           [148.29788012160157, -17.511907485728702],
           [148.298137613667, -17.519519638114506],
           [148.29564852370117, -17.52353021365686],
           [148.3046607459912, -17.52303912753613],
           [148.3010558570752, -17.509533738526898],
           [148.29891008986328, -17.501757452833846],
           [148.2941035713086, -17.499383572994706],
           [148.2915286506543, -17.498319409896798]]],
         [[[148.29290194166992, -17.504868007056665],
           [148.2926444496045, -17.509370030679637],
           [148.29401774062012, -17.50977930002111],
           [148.29436106337403, -17.50683254017782]]],
         [[[148.3345096137365, -17.572965886870392],
           [148.33347964547477, -17.574356910729936],
           [148.3374278571447, -17.579511788230377],
           [148.3384578254064, -17.584093778213543],
           [148.34377932809195, -17.58352103581553],
           [148.33948779366813, -17.574929682151474]]],
         [[[148.3438864510229, -17.707022296493914],
           [148.34165485312252, -17.707022296493914],
           [148.34380062033443, -17.711355756937873],
           [148.35143955160885, -17.71487150642844],
           [148.36379917074947, -17.715852633523138],
           [148.361910895603, -17.711928092945598],
           [148.3457747261694, -17.709720501141014]]],
         [[[148.38886173178463, -17.710129316487485],
           [148.38903339316158, -17.71176456855828],
           [148.39615734030514, -17.71528031003677],
           [148.4007063667944, -17.71250042712743],
           [148.39933307577877, -17.709802264284832],
           [148.3937540810278, -17.710946944385938]]],
         [[[148.43787105490475, -17.717079034844307],
           [148.44001682211666, -17.72075818848817],
           [148.45443637778072, -17.730241880847892],
           [148.45795543600826, -17.7290973239122],
           [148.4559813301733, -17.726317655208533],
           [148.4486857216528, -17.721003462713828],
           [148.44267757345943, -17.718877741612037],
           [148.43890102316647, -17.714707984724235]]],
         [[[148.52975076440094, -17.848765835028132],
           [148.5288066268277, -17.851135106489558],
           [148.53000825646637, -17.860366794255246],
           [148.5299224257779, -17.864778228031543],
           [148.52940744164704, -17.866166990083492],
           [148.52923578027008, -17.868127576861294],
           [148.53095239403962, -17.86804588617733],
           [148.53275483849762, -17.865676840009957],
           [148.53344148400544, -17.859223071335087],
           [148.5324973464322, -17.85448471230418],
           [148.53146737817048, -17.85056321626685]]],
         [[[149.6232986923311, -18.069223049910537],
           [149.62304120026567, -18.07052860876213],
           [149.63274006806353, -18.07828016451241],
           [149.63531498871782, -18.075750747098258],
           [149.62793354950884, -18.070936593912705]]],
         [[[151.08124398957887, -17.43063829282455],
           [151.08141565095582, -17.436616118736328],
           [151.08210229646363, -17.441283600044777],
           [151.0836472488562, -17.446196609213985],
           [151.08502053987183, -17.450700084651203],
           [151.08055734407105, -17.452419564102534],
           [151.07257509004273, -17.45143700640246],
           [151.06768274079957, -17.450700084651203],
           [151.0631337143103, -17.447261077085187],
           [151.0609879470984, -17.448653064153902],
           [151.0621037460486, -17.450945725566015],
           [151.06673860322633, -17.45372963279569],
           [151.07738160859742, -17.455203448817954],
           [151.08570718537965, -17.45479405667413],
           [151.0891404129187, -17.45061820427271],
           [151.0851922012488, -17.428427266506297],
           [151.080729005448, -17.428672937420007]]],
         [[[150.94142579805055, -17.457374349981016],
           [150.94000958795772, -17.456770509039618],
           [150.9392371108562, -17.45690356006489],
           [150.9382500625769, -17.456309941175768],
           [150.93885087739625, -17.46040378715862],
           [150.94211244355836, -17.463351299298672],
           [150.95558786164918, -17.460731290862945],
           [150.95721864473023, -17.454099226096506],
           [150.95163964997926, -17.452789160060302],
           [150.95198297273316, -17.45483613410306],
           [150.94700479280152, -17.457701859131586]]],
         [[[150.94593190919556, -17.45117203430979],
           [150.94661855470338, -17.449575364428522],
           [150.94408654939332, -17.448961256903843]]],
         [[[150.81195020448365, -17.42242983747237],
           [150.8099760986487, -17.430045732271772],
           [150.80611371766724, -17.432420516190426],
           [150.8059420562903, -17.4332394000308],
           [150.81220769654908, -17.43659678535102],
           [150.82139158021607, -17.43176540647212],
           [150.82079076539674, -17.42595120466912],
           [150.81564092408814, -17.423330658801902]]],
         [[[151.87288597836812, -17.110518162312246],
           [151.87464537671542, -17.116301199775087],
           [151.89721884778476, -17.112609849662846],
           [151.91078009656405, -17.112609849662846],
           [151.9233972077701, -17.1158090239912],
           [151.9270879273746, -17.114906698339368],
           [151.92210974744296, -17.110395004448222],
           [151.91438498548007, -17.10801606726757],
           [151.90932097485995, -17.109410620336913],
           [151.89438643506503, -17.10801606726757],
           [151.88966574719882, -17.10982078101597]]],
         [[[151.79494884955255, -17.160053879431686],
           [151.78722408758966, -17.160627947667727],
           [151.78911236273615, -17.164892398956255],
           [151.7926314209637, -17.16530243718327],
           [151.79451969611017, -17.162678176868337]]],
         [[[151.76679638373224, -17.18711516358943],
           [151.77194622504084, -17.183507220629696],
           [151.7764952515301, -17.171206887139764],
           [151.7734911774334, -17.170140819804555],
           [151.76705387579767, -17.181949223540244],
           [151.76525143133966, -17.183015222964098],
           [151.76456478583185, -17.1842452146785],
           [151.76344898688166, -17.1849832057877]]],
         [[[151.74765614020197, -17.198922485528005],
           [151.74808529364435, -17.203104064809306],
           [151.743879589909, -17.20851538008999],
           [151.7442229126629, -17.21220482248794],
           [151.75134685980646, -17.205399793650578],
           [151.75246265875666, -17.200972291098207]]],
         [[[152.41200167554496, -19.153915894201933],
           [152.4121733369219, -19.176292221574815],
           [152.36043439778396, -19.246725161062248],
           [152.34697861211583, -19.260440240098198],
           [152.33283447295284, -19.26702386129648],
           [152.30419833081842, -19.279540618468562],
           [152.31229001053413, -19.284017599402823],
           [152.34921873691687, -19.26451050856289],
           [152.3746670579477, -19.24105145479975],
           [152.38882738965629, -19.201259317981393],
           [152.4005003632891, -19.17888638184658],
           [152.40359026807425, -19.16948235652507],
           [152.40513522046683, -19.159104878257935],
           [152.40513522046683, -19.150834857684096],
           [152.4095984162676, -19.148402419789782]]],
         [[[158.22236354427196, -19.662329123604888],
           [158.21566875057079, -19.664268937564398],
           [158.2386713750825, -19.687059993135613],
           [158.2489710576997, -19.71178704387584],
           [158.25909907893993, -19.74394265111506],
           [158.26407725887157, -19.776414856438617],
           [158.26768214778758, -19.796767194345765],
           [158.27575023250438, -19.807749914856995],
           [158.28158671932079, -19.815663464050782],
           [158.28862483577586, -19.803550728875624],
           [158.2719736822114, -19.774799480144154],
           [158.25497920589305, -19.701605779841227],
           [158.24176127986766, -19.674290935780384]]],
         [[[158.94184551763965, -19.209105323536605],
           [158.94253216314746, -19.21178001736344],
           [158.94450626898242, -19.21396837085983],
           [158.94510708380176, -19.2166429855753],
           [158.94407711554004, -19.219074415734656],
           [158.9416738562627, -19.220533256565137],
           [158.9397855811162, -19.22345089937573],
           [158.9449354224248, -19.224261346518297],
           [158.94957027960254, -19.217939752802938],
           [158.94836864996387, -19.21234737106676],
           [158.94708118963672, -19.208943219482187],
           [158.94416294622852, -19.208862167395054]]],
         [[[150.8312145913681, -17.66173216197144],
           [150.82632224212495, -17.663449638810114],
           [150.82409064422455, -17.663449638810114],
           [150.82181613097993, -17.664431046786085],
           [150.82400481353608, -17.666107606360672],
           [150.8290688241562, -17.664880856986013],
           [150.83336035858002, -17.662631794740953],
           [150.83387534271088, -17.660668953808827],
           [150.83258788238373, -17.660423597186917]]]]),
    rc_brs = 
    /* color: #00ffff */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[148.33034682534537, -17.574765822979657],
           [148.3298318412145, -17.576525039742535],
           [148.33356547616324, -17.58638451929521],
           [148.33639788888297, -17.586261790489235],
           [148.33682704232535, -17.584748128364716],
           [148.33601165078483, -17.584257208197176],
           [148.33656955025992, -17.579634311244618],
           [148.33210635445914, -17.57591136141961]]],
         [[[148.50491251010249, -17.828574372441217],
           [148.52302278537104, -17.85071608760155],
           [148.52920259494135, -17.845650698311424],
           [148.5272284891064, -17.84099368095176],
           [148.52594102877924, -17.837888935025475],
           [148.5206195260937, -17.83151586588387],
           [148.51864542025874, -17.829146333303523],
           [148.51495470065424, -17.82726702643189],
           [148.50971902865717, -17.82628651062931]]],
         [[[150.82145310545837, -17.663093082103703],
           [150.82471467162048, -17.662029881982104],
           [150.8283195605365, -17.654832669831322],
           [150.82613087798035, -17.653892103800192],
           [150.82265473509705, -17.658553991593237]]],
         [[[150.80765867005982, -17.423576336574914],
           [150.8035817123572, -17.424395260097285],
           [150.8043971038977, -17.42595120466912],
           [150.80783033143678, -17.426074041833626],
           [150.80838823091187, -17.42459999040389]]],
         [[[150.63594854150028, -17.777098283490282],
           [150.63513314995976, -17.779223313316756],
           [150.6358627108118, -17.779918029124616],
           [150.6364206102869, -17.777302614379433]]]]),
    srs_brs = 
    /* color: #bf04c2 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[148.55133231003134, -17.538902768274713],
           [148.5540788920626, -17.554615489851127],
           [148.57742483932822, -17.598800208174733],
           [148.58566458542197, -17.630868273048872],
           [148.5822313578829, -17.653443387693965],
           [148.55270560104697, -17.679940997453166],
           [148.51734335739462, -17.694006043129104],
           [148.5101335795626, -17.697276826156305],
           [148.515970066379, -17.70152875502155],
           [148.52077658493369, -17.697930975612735],
           [148.52644141037314, -17.694823744470785],
           [148.53639777023642, -17.693842502414],
           [148.53880102951376, -17.69580498116624],
           [148.55047400314658, -17.69498728429235],
           [148.570901707004, -17.684520435526665],
           [148.5841196330294, -17.67846901043588],
           [148.59338934738486, -17.64264694666877],
           [148.5954492839083, -17.638230034277928],
           [148.59527762253134, -17.634303799040474],
           [148.59596426803915, -17.629068685685862],
           [148.59424765426962, -17.618434393753752],
           [148.59304602463095, -17.611399056101277],
           [148.585492924045, -17.591109570341196],
           [148.58017142135947, -17.58227311432008],
           [148.57399161178915, -17.568690312174],
           [148.55888541061728, -17.543813140122662],
           [148.55459387619345, -17.538902768274713]]],
         [[[148.5279151346142, -17.84851020998986],
           [148.51538385409663, -17.871057891620367],
           [148.4953853036816, -17.875795808906283],
           [148.49487031955073, -17.88192223874205],
           [148.49847520846674, -17.88257571211805],
           [148.50053514499018, -17.880942024169332],
           [148.50431169528315, -17.8811053936405],
           [148.51263727206538, -17.880615284776123],
           [148.51315225619624, -17.87857314994959],
           [148.52079118747065, -17.87522399800704],
           [148.52688516635249, -17.87007761709821],
           [148.53349412936518, -17.862235226275605],
           [148.53091920871088, -17.849735700928203]]],
         [[[158.9585793423306, -19.271256892599215],
           [158.95617608305326, -19.278386612455563],
           [158.95514611479155, -19.291835011890097],
           [158.9523995327603, -19.306254357245685],
           [158.95102624174467, -19.319538471702977],
           [158.9391816067349, -19.340272492074696],
           [158.93386010404936, -19.366348262823944],
           [158.9256203579556, -19.39824896647601],
           [158.90999917265287, -19.4243154569592],
           [158.91274575468412, -19.427715125828797],
           [158.92029885527006, -19.424639238011707],
           [158.92802361723295, -19.41298271370124],
           [158.93283013578764, -19.393391394694294],
           [158.93763665434233, -19.373311893608584],
           [158.94776467558256, -19.345131647292128],
           [158.95377282377592, -19.332335560835833],
           [158.96029595610014, -19.31840450407299],
           [158.9669907498013, -19.304634269455626],
           [158.96819237943998, -19.292483099625358],
           [158.96784905668608, -19.287136299074294],
           [158.9669907498013, -19.280168993938375],
           [158.9656174587857, -19.272715269627575],
           [158.96287087675444, -19.263802762890652]]],
         [[[159.54746920712603, -21.39291444020359],
           [159.54111773617876, -21.396990152144323],
           [159.53648287900103, -21.40721888957421],
           [159.53794200070513, -21.40833761430566],
           [159.5464392388643, -21.405460876265746],
           [159.54712588437212, -21.408817065140376],
           [159.5457525933565, -21.415129687748433],
           [159.55073077328814, -21.42679533567667],
           [159.55725390561236, -21.426315943849232],
           [159.55622393735064, -21.406259975845572],
           [159.55613810666216, -21.395311931572493]]]]),
    srs_orf = 
    /* color: #00ff00 */
    /* shown: false */
    ee.Geometry.MultiPolygon(
        [[[[148.53042490579054, -17.86530342950247],
           [148.52604754067823, -17.870368259055248],
           [148.51420290566847, -17.878863778008892],
           [148.51059801675245, -17.880415800078868],
           [148.50132830239698, -17.880415800078868],
           [148.49841005898878, -17.88196780858595],
           [148.50227243997023, -17.88450000387258],
           [148.51403124429152, -17.882948017496624],
           [148.5262192020552, -17.876903309693688],
           [148.5316265354292, -17.87085839619063],
           [148.53299982644484, -17.866937261256925]]],
         [[[150.83035628448334, -17.65502566687917],
           [150.83057086120454, -17.657888225840082],
           [150.83241622100678, -17.657806439072964],
           [150.8327595437607, -17.655843545513125],
           [150.83172957549897, -17.654780302564376]]],
         [[[150.83181540618745, -17.65944216735416],
           [150.8300987924179, -17.661241451292355],
           [150.8317724908432, -17.662713579315145],
           [150.83473364959565, -17.661650376951194],
           [150.83348910461274, -17.65964663234401]]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
///////////////////////////////
// Global coral atlas project - Coral Sea
// Contact: mitchell.lyons@gmail.com
// Region coordinator: Rodney Borrego (rodbio2008@gmail.com)
// Description:
// - Developing a process to combine OBIA and supervised classification
// - This script loads the raw classification data (from *_classification script)
// - Then applied some cleanup and object-based relational rules
///////////////////////////////

// Table of contents
// 1. Setting constants
// 2. Data loads & vis
// 3. OBIA clean up rules
// 4. Export

// Load and libraries needed
var map_palettes = require('users/mitchest/global_reefs:Modules/colour_pals');
var pkg_vis = require('users/mitchest/global_reefs:Modules/pkg_vis');
var param_module = require('users/mitchest/global_reefs:Modules/reef_params');

// ###########################################
// SENSOR GENERICS
var sensor_params = param_module.dove;         //<------------ THIS IS WHERE YOU CHOOSE THE SENSOR
// REGION AND SENSOR SPECIFIC LOAD PATHS
var region_params = param_module.coral_sea;  //<------------ THIS IS WHERE YOU CHOOSE THE REGION
//  ^^ all the data paths are in this module ^^
// ###########################################

// 1. Setting constants

// These will get written to the asset metadata 

var vars = {
  
  // analysis type
  geomorphic: true, // map geomorphic zonation (when set to true) or benthic habitat (when set to false)

  // analysis parameters
  image_data_scale: sensor_params.pixel,
  small_object_geo: ee.Number(400).int(), // smallest object szie in pixels (geomorphic)
  small_object_benthic: ee.Number(130).int(), // smallest object szie in pixels (benthic)
  smooth_radius: ee.Number(3), // radius in pixels for initial smooth 
  dist_to_land_ORF: 1000, //distance to land in meters to convert terrestrial reef flat to ORF
  dist_to_land_RC: 500, //distance to land in meters to convert reef crest to TRF - not used for Indo
  wave_height: 0.4, //cut off height for waves in metres, Hs95 threshold
  geo_depth_cutoff: 1200, //depth in centimetres
  shallowlag_depth_cutoff: 500, //depth in centimetres
  benthic_depth_cutoff: 750, //depth in centimetres
  
  //############
  // Clean-up stage selection
  cleanup_stage: 3, // set to 1, 2 or 3
  geo_refinement: false, // set to true to apply the refinement_mask (the other stage 3 masks will still run)
  
  /*
  - GEOMORPHIC 1: The first pass does a small object filter, just to generally clean noise and reduce the amount of cleaning needed
  -            2: The second pass runs the OBIA cleanup rules
  -            3: The third pass is the MANUAL cleanup stage, which includes AT LEAST the no_reef masking
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY

  - BENTHIC 1: This is the main benthic stge - it does noise removal, no data reclaim and OBIA rules - review those if needed
            2: The second mas is the MANUAL stage - it's optional, but shuold include ALL region specific stuff
                        - see below where it starts/ends (only that section is run)
                        - please put region specific stuff in here ONLY
  */
  
  // DON'T TOUCH --->
  obia_2nd_pass: null,
  obia_clean: null, // run object-based relationship rules + small object clean up
  fast_clean: null, // run a faster (but less precise) version of the OBIA clean; only applies to geomorphic (`obia_clean: true` also)
  manual_clean: false, // apply manual touch ups
  // --------------<
  //############
  
  reproject_display: false,
  
  // export options
  do_export: false, // export the results?
  geomorph_output_name: region_params.sname + '_geo_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  benthic_output_name: region_params.sname + '_benthic_clean', // DO NOT CHANGE - change in the pop up dialouge if you must
  asset_output: region_params.asset // asset path

};


// Clean up stage auto-parameterisation (DON'T TOUCH) --->

if (vars.geomorphic) {
  var temp_outname = vars.geomorph_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.obia_2nd_pass = true;
    vars.obia_clean = true;
    vars.fast_clean = true;
    vars.manual_clean = false;
    vars.geomorph_output_name = temp_outname + '2';
  } else if (vars.cleanup_stage == 3) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false;
    vars.obia_clean = false;
    vars.fast_clean = false;
    vars.do_export = false;
    vars.geomorph_output_name = temp_outname + '3';
  }
}

if (!vars.geomorphic) {
  var temp_outname = vars.benthic_output_name;
  if (vars.cleanup_stage == 1) {
    vars.obia_2nd_pass = true,
    vars.obia_clean = true, 
    vars.fast_clean = false, 
    vars.manual_clean = false;
    vars.benthic_output_name = temp_outname + '1';
  } else if (vars.cleanup_stage == 2) {
    vars.manual_clean = true;
    vars.obia_2nd_pass = false,
    vars.obia_clean = false, 
    vars.fast_clean = false,
    vars.do_export = false;
    vars.benthic_output_name = temp_outname + '2';
  }
}

//Region extent is created in map viewer and exported to GEE asset
var region_extent = ee.FeatureCollection(region_params.extent_mask).geometry();
Map.addLayer(region_extent, {}, "Manual reef outline", false);
// -----------------------------------------<

//################################################################################################
//START OF CLEAN 3 - Manual Cleanup
//Review everything in this section
//This is the section to add/remove manual cleanups
//You MUST review it for each region

//###############################################################################################

if (vars.manual_clean && vars.geomorphic) {
  
  print("Doing GEOMORPHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.pixels).select('depth');
  
  // define the manually edited map - uses the output from the second pass of cleaning
  //var man_geo = ee.Image(region_params.geo_map_clean2);
  var man_geo = ee.Image(region_params.geo_map_clean2); // use this when testing for a small area
  
  // import the mid mask from asset ****only use ee.FC if mid_mask created in map viewer****
  //var mid_mask = ee.FeatureCollection(region_params.mid_mask).geometry();
  //Map.addLayer(mid_mask, {color: 'red'}, "mid mask import", true, 0.4);
  var midmask = ee.Image().byte().paint(ee.Feature(mid_mask.dissolve(),{zone: 1}), "zone").clip(mid_mask.dissolve());
  
  // the "MID MASK" CLEAN
  man_geo = man_geo.where({
    test: midmask.eq(1),
    value: ee.Image(0)
  });
  
  /*
  // the "REEF MASK" CLEAN
  
  // Define a kernel for reef mask Morphological Operations
  var kernel_rm = ee.Kernel.circle({radius: vars.smooth_radius.multiply(5)});

  // Create reef mask to clean areas inside the reef - Perform an dilation of deepwater
  var reef_mask = man_geo.eq(2)
            .focal_max({kernel: kernel_rm, iterations: 2});
  var global_reef_mask = ee.Image(region_params.global_reef_mask);
  

  // Reef crest, slope, sheltered slope (within reef mask) -> Inner reef flat
  man_geo = man_geo.where({
    test: reef_mask.eq(0)
                    .and(man_geo.eq(15).or(man_geo.eq(21)).or(man_geo.eq(22))),
    value: ee.Image(13)
  });
  
  // the "DEEP WATER" CLEAN
  
  // Define a kernel for deep water Morphological Operations
  var kernel_dw = ee.Kernel.circle({radius: vars.smooth_radius.multiply(5)});

  // Create mask to clean deepwater areas - Perform an dilation of deepwater followed by a erosion
  var deepwater = man_geo.eq(2)
            .focal_max({kernel: kernel_dw, iterations: 2})
            .focal_min({kernel: kernel_dw, iterations: 2});
    
  
    // Deep lagoon (outside reef mask and global mask) -> deepwater 
  man_geo = man_geo.where({
    test: deepwater.eq(1)
                    .and(man_geo.eq(12)),
                    //.and(global_reef_mask.eq(2)),
    value: ee.Image(2)
  });
  
 
  // Reef classes in deepwater -> deepwater
  man_geo = man_geo.where({
    test: deepwater.eq(1)
                    .and(man_geo.eq(15).or(man_geo.eq(21)).or(man_geo.eq(22)).or(man_geo.eq(24))),
    value: ee.Image(2)
  });
  
  */
  
  /*
  // WAVE clean (un-comment this sectio nbased on whether you have waves or not)
  
  var waves = ee.Image(region_params.waves)
  Map.addLayer(waves.lt(vars.wave_height), {}, vars.wave_height + "m Hs95 threshold", false)
  
  man_geo = man_geo.where({
    test: waves.lte(vars.wave_height)
               .and(man_geo.eq(22)),
    value: ee.Image(21)
  })
  */
  
  
  
/*
  ##############
  
  The rest of the manual geometry paintings and rules should go here
      - make the geom, paint the layer, use it in a rule
      - consult previous regions *_cleanup script for ideas/hints/existing rules etc.
  e.g. 
  var notreefcrest = ee.Image().byte().paint(ee.Feature(not_reef_crest, {zone: 1}), "zone").clip(not_reef_crest);
  var notdeepwater = ee.Image().byte().paint(ee.Feature(not_deep_water, {zone: 1}), "zone").clip(not_deep_water);
  
  */
  var Brs_Sl = ee.Image().byte().paint(ee.Feature(brs_sl, {zone: 1}), "zone").clip(brs_sl);
  var Sl_Brs = ee.Image().byte().paint(ee.Feature(sl_brs, {zone: 1}), "zone").clip(sl_brs);
  var Rs_Brs = ee.Image().byte().paint(ee.Feature(rs_brs, {zone: 1}), "zone").clip(rs_brs);
  var Brs_Rs = ee.Image().byte().paint(ee.Feature(brs_rs, {zone: 1}), "zone").clip(brs_rs);
  var Rc_Brs = ee.Image().byte().paint(ee.Feature(rc_brs, {zone: 1}), "zone").clip(rc_brs)
  var Srs_Brs = ee.Image().byte().paint(ee.Feature(srs_brs, {zone: 1}), "zone").clip(srs_brs)
   var Srs_Orf = ee.Image().byte().paint(ee.Feature(srs_orf, {zone: 1}), "zone").clip(srs_orf)  
  // Back reef slope -> shallow lagoon (inside the reef)
  man_geo = man_geo.where({
    test: Brs_Sl.eq(1)
                     .and(man_geo.eq(24)).or(man_geo.eq(12)),
    value: ee.Image(11)
  });
  
 // Shallow lagoon and deep lagoon > back reef slope (inside the reef)
  man_geo = man_geo.where({
    test:  Sl_Brs.eq(1)
                     .and(man_geo.eq(11).or(man_geo.eq(12))),
    value: ee.Image(24)
  });
  
// reef slope > back reef slope (outside the reef)
  man_geo = man_geo.where({
    test: Rs_Brs.eq(1)
                     .and(man_geo.eq(22)),
    value: ee.Image(24)
  });
  
 //Back reef slope > reef slope (outside the reef)
  man_geo = man_geo.where({
    test:  Brs_Rs.eq(1)
                     .and(man_geo.eq(24)),
    value: ee.Image(22)
  });
  
  //reef crest > Back reef slope (outside the reef)
  man_geo = man_geo.where({
    test:  Rc_Brs.eq(1)
                     .and(man_geo.eq(15)),
    value: ee.Image(24)
  });
   
  //sheltered reef slope > Back reef slope (outside the reef)
  man_geo = man_geo.where({
    test:  Srs_Brs.eq(1)
                     .and(man_geo.eq(21)),
    value: ee.Image(24)
  });
    
  //sheltered reef slope > outer reef falt (inside the reef)
  man_geo = man_geo.where({
    test:  Srs_Orf.eq(1)
                     .and(man_geo.eq(21)),
    value: ee.Image(14)
  }); 

  
  if (vars.geo_refinement) {
    // make the mask image layer
    var refine = ee.Image().byte().paint(ee.Feature(refinement_mask, {zone: 1}), "zone").clip(refinement_mask);
    // apply
    man_geo = man_geo.where({
      test: refine.eq(1),
      value: ee.Image(0)
    });
  }
  
  // Add data + the manual layer to the map
  var lowtide_image = ee.ImageCollection(region_params.image);
  Map.addLayer(lowtide_image, imageVisParam2, sensor_params.sname + ' low tide', false);
  var geo_clean1 = ee.Image(region_params.geo_map_clean1);
  Map.addLayer(geo_clean1, map_palettes.geo, 'Geo clean stage 1', false);
  var geo_clean2 = ee.Image(region_params.geo_map_clean2);
  Map.addLayer(geo_clean2.updateMask(geo_clean2.gt(2)), map_palettes.geo, 'Geo clean stage 2', false);
  Map.addLayer(man_geo.updateMask(man_geo.gt(2)), map_palettes.geo, 'Geo clean stage 3', false);
  //Map.addLayer(man_geo.updateMask(man_geo.gt(2)), map_palettes.geo, 'Geo clean stage 3 - no DW', false);
 // Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(1)), {palette: ['F8FF23'], opacity: 0.4}, 'global_reef_mask - land', false);
  //Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(3)), {palette: ['0000ff'], opacity: 0.4}, 'global_reef_mask - reef', false);
  //Map.addLayer(global_reef_mask.updateMask(global_reef_mask.eq(2)), {palette: ['FF0000'], opacity: 0.4}, 'global_reef_mask - water', false);

  // display distance to land mask for assessing cut-off distances
  var distToLand = ee.Image(region_params.distToLand);
    
  //Map.addLayer(distToLand.lte(vars.dist_to_land_RC), {}, 'RC to TRF ' + vars.dist_to_land_RC + 'm', false);
  Map.addLayer(distToLand.unmask(100000, false).lte(vars.dist_to_land_ORF), {}, 'TRF to ORF ' + vars.dist_to_land_ORF + 'm', false);
  
  // display distance to water mask
  var distToWater = ee.Image(region_params.distToWater);
    
  Map.addLayer(distToWater.unmask(100000, false).lte(vars.dist_to_land_ORF), {}, 'distToWater ' + vars.dist_to_land_ORF + 'm', false);
  
  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_geo,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: region_extent,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
} 

if (vars.manual_clean && !vars.geomorphic) {
  
  print("Doing BENTHIC manual clean ups - make sure this is what you want to do");
  print("Export the manual map, check 'manual' layer in the viewer for effects");
  
  var depth = ee.Image(region_params.pixels).select('depth');
  
  // define the final geomorphic map (the manually edited geo map - stage 3)
  var geo_map = ee.Image(region_params.geo_map_clean3);
  
  // define the clean benthic map to apply 2nd stage rules to
  var man_benthic = ee.Image(region_params.benthic_map_clean1);
  
  
  /*
  **Generic benthic rules**
    - should be generally applicable, but still review
  */
  
  // BMA on inner RF, outer RF,reef crest, reef slope -> rubble 
  man_benthic = man_benthic.where({
    test: man_benthic.eq(18)
                     .and(geo_map.eq(13).or(geo_map.eq(14)).or(geo_map.eq(15)).or(geo_map.eq(22))),
    value: ee.Image(12)
  });
  
  // Rubble on Outer reef flat and Reef crest -> rock 
  man_benthic = man_benthic.where({
    test: man_benthic.eq(12)
                     .and(geo_map.eq(14).or(geo_map.eq(15))),
    value: ee.Image(13)
  });
    
  // Seagrass on Back reef slope -> Sand 
  man_benthic = man_benthic.where({
    test: man_benthic.eq(14)
                     .and(geo_map.eq(24)),
    value: ee.Image(11)
  });  
  
    
  /*
  
  **Manual polygon guided rules**
   - same as per geomorphic clean section
   - add a geometry, paint the layer, create a rule
  
  */
  
  
  
     
  // Add the manual layer to the map

  var dove_image = ee.Image(region_params.image);
  Map.addLayer(dove_image, {bands: ['b3','b2','b1'], min:0, max:4000, gamma:1.5}, sensor_params.sname + ' low tide', true);
  
  var benthic_clean1 = ee.Image(region_params.benthic_map_clean1);
  var geo_clean1 = ee.Image(region_params.geo_map_clean1);
  var geo_clean2 = ee.Image(region_params.geo_map_clean2);
  Map.addLayer(geo_clean1, map_palettes.geo, 'Geo clean stage 1', false);
   Map.addLayer(geo_clean2.updateMask(geo_clean2.gt(2)), map_palettes.geo, 'Geo clean stage 2', false);
  // Map.addLayer(geo_clean2, map_palettes.geo, 'Geo clean stage 2', false);
  //Map.addLayer(geo_map.updateMask(geo_map.gt(2)), map_palettes.geo, 'Geo clean stage 3 - MANUAL', true);
  Map.addLayer(geo_map.updateMask(geo_map.gt(2)), map_palettes.geo, 'Geo clean stage 3 - MANUAL', true);
  Map.addLayer(benthic_clean1, map_palettes.benthic, 'Benthic clean stage 1', false);
  Map.addLayer(man_benthic, map_palettes.benthic, 'Benthic clean stage 2 - MANUAL', true);
  
  // Export
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  Export.image.toAsset({
    image: man_benthic,
    description: output_name,
    assetId: vars.asset_output + 'in_out/' + output_name,
    region: region_extent,
    scale: vars.image_data_scale,
    crs: 'EPSG:4326',
    maxPixels: 1e13,
    pyramidingPolicy: {'.default': 'mode'}
  });
  
}

// #################################################################################################
// END OF MANUAL SECTION
// #################################################################################################


// 2. Data loads & vis

if (!vars.manual_clean) {

  // load input data
  
  // define raw geo/benthic outputs
  // Run check to see if the region has been split into multiple areas
  
  // geo
  if (ee.List(region_params.geo_map).length().getInfo() > 1) {
    var geo_map_raw = ee.Image(region_params.geo_map[0]).unmask(0, false)
                 .add(ee.Image(region_params.geo_map[1]).unmask(0,false))
                 .selfMask();
  } else {
    var geo_map_raw = ee.Image(region_params.geo_map);
  }
  
  // benthic
  if (ee.List(region_params.benthic_map).length().getInfo() > 1) {
      var benthic_map = ee.Image(region_params.benthic_map[0]).unmask(0, false)
               .add(ee.Image(region_params.benthic_map[1]).unmask(0,false))
               .selfMask();
  } else {
      var benthic_map = ee.Image(region_params.benthic_map);
  }
  
  // set the geo map for further processing
  if (vars.geomorphic && vars.obia_2nd_pass) {
    // if it's 2nd pass, you want to make sure you're loading the latest geo clean map
    var geo_map = ee.Image(region_params.geo_map_clean1);
  } else if (vars.geomorphic) {
    var geo_map = geo_map_raw;
  }
  
  var depth = ee.Image(region_params.pixels).select('depth');
  var low_tide_image = ee.Image(region_params.image);
  
  var display_pal = (vars.geomorphic) ? map_palettes.geo : map_palettes.benthic;
  Map.addLayer(depth, {min:0, max:2500}, 'Depth data', false);
  Map.addLayer(low_tide_image, {bands: ['b3','b2','b1'], min:0, max:3000}, sensor_params.sname + ' low tide', false);
  
  // load for display purposes
  if (vars.geomorphic) {
    Map.addLayer(geo_map_raw, display_pal, 'Geomorphic map RAW', false);
    if (vars.cleanup_stage == 2) Map.addLayer(ee.Image(region_params.geo_map_clean1), display_pal, 'Geo clean stage 1', false);
  }
  if (!vars.geomorphic) {
    // Use the manually cleaned geomorphic map as input for the benthic clean
    var geo_map = ee.Image(region_params.geo_map_clean3);
    Map.addLayer(geo_map.updateMask(geo_map.gt(2)), map_palettes.geo, 'Geo clean stage 3', false);
    Map.addLayer(benthic_map, display_pal, 'Benthic map RAW', false);
  }
  
  // 3. Object-based re-classificaiton and cleaning
  
  /* OUTPUT EXTENT
    - to the mapping extent just so it doesn't balloon out
    - to the 'reef boundary' extent for noise/deep removal
  */  
  var class_extent_mask = geo_map.gt(0);
  
  /*
  
  ########
  Initial small object clean
   - this was originally at the end, but we needed to massively reduce the number of objects to 
     iterate through in the OBIA cleaning, so this happens first now
   - future collabs with google might fix this, but need to change the parallel serialisation of vector procesing
   
   - includes a possible special case for:
        - geomorphic to clean up turbid areas over size threshold; fix shallow vs. deep lagoon
        - benthic to allow breaking waves (temporal class) to grow into surrounding class
  ########
  
  */
  
  // ##############################################################################################
  // START OF CLEAN 1
  // ##############################################################################################
  
  if (vars.geomorphic && !vars.obia_2nd_pass) {
    
    // shallow lagoon > 5m == deep lagoon//this rule is making mini deep laggoons witin BRS 
    //so I will generate another clean up1 with shallow lagoons instead (comenting this up)
    
    // = geo_map.where({
     // test: geo_map.eq(11)
                    //.and(depth.gt(vars.shallowlag_depth_cutoff)),
      //value: ee.Image(12)
    //});
    
    // deep water in depth data == deep (s2 + ls8 data should be good enough for this)
    geo_map = geo_map.where({
      test: depth.gt(vars.geo_depth_cutoff),
      value: ee.Image(2)
    });
    
    // make a smooth map with masked area as a value - *** Change to ee.kernal*** see reef mask in clean 3
    var smooth_map = geo_map
                        .focal_mode({
                          radius: vars.smooth_radius, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 2
                        });
    
    // replace small objects with smooth underneath
    var clean_map = geo_map.where({
      test: geo_map.connectedPixelCount(vars.small_object_geo, false).lt(vars.small_object_geo), 
      value: smooth_map
    }).updateMask(class_extent_mask);
    
    // display distance to land mask for assessing cut-off distances
    var distToLand = ee.Image(region_params.distToLand);
    
    Map.addLayer(distToLand.lte(vars.dist_to_land_RC), {}, 'RC to TRF ' + vars.dist_to_land_RC + 'm', false);
    Map.addLayer(distToLand.unmask(100000, false).lte(vars.dist_to_land_ORF), {}, 'TRF to ORF ' + vars.dist_to_land_ORF + 'm', false);

    // // reef crest close to land -> TRF - Not need when using .focal masks (reef mask) as this will take care of RC inside the reef
    // clean_map = clean_map.where({
    //   test: distToLand.lte(vars.dist_to_land_RC)
    //                 .and(clean_map.eq(15)),
    //   value: ee.Image(16)
    // });
    
    // TRF outside of specified distance from land -> ORF
    clean_map = clean_map.where({
      test: distToLand.unmask(100000, false).gt(vars.dist_to_land_ORF)
                       .and(clean_map.eq(16)),
      value: ee.Image(14)
    });
  }
  
  if (!vars.geomorphic && vars.cleanup_stage == 1) {
    
    // make a smooth map with masked area as a value, and without temporal class (basically breaking waves)
    var smooth_map = benthic_map
                        .focal_mode({
                          radius: vars.smooth_radius, // relates to smoothness required
                          kernelType: 'circle', units: 'pixels', iterations: 1
                        });
    
    //replace small objects with smooth underneath
    var clean_map = benthic_map.where({
      test: benthic_map.connectedPixelCount(vars.small_object_benthic, false).lt(vars.small_object_benthic),
      value: smooth_map
    }).updateMask(class_extent_mask);
    
  }
  
  // ##############################################################################################
  // START OF CLEAN 2
  // ##############################################################################################
  
  if (vars.geomorphic && vars.obia_2nd_pass) {
    var clean_map = geo_map;
  }
  
  if (vars.obia_clean) {
    
    if (vars.geomorphic && !vars.fast_clean) { 
      
      // FUNCTION that maps over feature colleciton and assigns neighbour percentages
      var set_neighbour_properties = function(f) {
        // make the 1px buffer
        var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5));
        // reduce the classes in the buffer zone
        var diff_classes = ee.Dictionary(
          clean_map.unmask(ee.Image(0)).reduceRegion({
            reducer: ee.Reducer.frequencyHistogram(),
            geometry: diff.geometry(),
            scale: vars.image_data_scale,
            maxPixels: 1e11
          }).get('classification')
        );
        // calculate the percentages
        var diff_sum = diff_classes.toArray().reduce(ee.Reducer.sum(), [0]).get([0]);
        var diff_percs = diff_classes.map(function(k,v){return(ee.Number(v).divide(diff_sum).multiply(100).toUint8())});
        
        /* NOW, we can try to do the class logic right here (see /users/mitchest/global_reefs/obia_dev),
           or we can return the neighbour % and do image logic via (painted) rasters */
        
        return(f.set(diff_percs));
      };
      
      // FUNCTION to reduce the map to vectors and map the neighbour properties function
      var reduce_neighbours = function() {
        // reduce map to vectors
        var map_fc = clean_map
              .updateMask(segment_id).updateMask(clean_map.eq(classn)) // only vectorise class/es of interest
              .reduceToVectors({
                scale: vars.image_data_scale, 
                eightConnected: false,
                bestEffort: true, 
                maxPixels: 1e13,
                tileScale: 1,
                geometry: region_extent
              });
        // map the function, calculate neighbour properties
        return(map_fc.map(set_neighbour_properties));
      };
      
      // first make a make size threshold, so we're not vecortising huge objects when we don't have to
      var segment_id = clean_map.connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels');
      //Map.addLayer(segment_id.reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))))
      Map.addLayer(clean_map.updateMask(segment_id).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
      
      // This is where we select the single or group of classes to vectorise for cleaning up
      //var classn = ee.Number(15) // one class
      var classn = clean_map.where({
        test: clean_map.neq(16) //TRF
                .and(clean_map.neq(15)) //RR
                .and(clean_map.neq(14)) //ORF
                .and(clean_map.neq(13)) //IRF
                //.and(clean_map.neq(12)) // deep L
                .and(clean_map.neq(11)), // shallow L 
        value: ee.Image(99) // 99 ensures it's ignored in logic
      });
      
      // Minimum size of object to reclass based on neighbourhood
      var max_size = ee.Number(1000).divide(vars.image_data_scale).pow(2); // the first number is the square dimension of the desired min size;
      // calculate neighbours
      var map_fc_neighbours = reduce_neighbours();
      
      // #########
      // REEF RIM
      // #########
      
      var focus_class = ee.Number(15); //RR
      
      // start the object-based neighbourhood rules
      // paint out to rasters (only paint the layers needed)
      var objsize = ee.Image(30000).paint(map_fc_neighbours, 'count').rename('count');
      //var nb24 = ee.Image().byte().paint(map_fc_neighbours, '24').unmask(0).rename('nb24') //OCL
      var nb22 = ee.Image().byte().paint(map_fc_neighbours, '22').unmask(0).rename('nb22'); //SL ex
      var nb21 = ee.Image().byte().paint(map_fc_neighbours, '21').unmask(0).rename('nb21'); //Sl sh
      var nb16 = ee.Image().byte().paint(map_fc_neighbours, '16').unmask(0).rename('nb16'); //TRF
      var nb15 = ee.Image().byte().paint(map_fc_neighbours, '15').unmask(0).rename('nb15'); //RR
      var nb14 = ee.Image().byte().paint(map_fc_neighbours, '14').unmask(0).rename('nb14'); //ORF
      var nb13 = ee.Image().byte().paint(map_fc_neighbours, '13').unmask(0).rename('nb13'); //IRF
      //var nb3 = ee.Image().byte().paint(map_fc_neighbours, '3').unmask(0).rename('nb3') //Turbid
      
      // RR surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // RR surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // RR surrounded by IRF + ORF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.add(nb14).gt(75)),
        value: ee.Image(13)
      });
      
      // RR with decent border to TRF --> TRF (often dark, probably seagrass)
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(40)),
        value: ee.Image(16)
      });
      
      // RR surrounded by OCL --> OCL
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb24.gt(75)),
        value: ee.Image(24)
      })
      
      // small RR objects touching OCL + stuff --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(objsize.lte(max_size))
                .and(nb13.lte(75).and(nb14.lte(75))) // to ensure we're no re-writing previous rules
                .and(nb24.gt(1)),
        value: ee.Image(14)
      })
      
      // ####
      // ORF
      // ####
      
      focus_class = ee.Number(14); // ORF
      
      // ORF surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // ORF surrounded by TRF --> TRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(75)),
        value: ee.Image(16)
      });
      
      // ORF surrounded by RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb15.gt(85)),
        value: ee.Image(15)
      });
      
      // ORF touching slope and RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb21.gt(0).or(nb22.gt(0)))
                .and(nb15.gt(0)),
        value: ee.Image(15)
      });
      
      // ####
      // IRF
      // ####
      
      focus_class = ee.Number(13); // IRF
      
      // IRF surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // IRF surrounded by TRF --> TRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb16.gt(75)),
        value: ee.Image(16)
      });
      
      // IRF surrounded by RR --> RR
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb15.gt(85)),
        value: ee.Image(15)
      });
      
      // ####
      // TRF
      // ####
      
      focus_class = ee.Number(16); // TRF
      
      // TRF surrounded by ORF --> ORF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb14.gt(75)),
        value: ee.Image(14)
      });
      
      // TRF surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.gt(75)),
        value: ee.Image(13)
      });
      
      // TRF surrounded by IRF + ORF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(focus_class)
                .and(nb13.add(nb14).gt(75)),
        value: ee.Image(13)
      });
      
      // ####
      // LAGOONS
      // ####
      
      var nb11 = ee.Image().byte().paint(map_fc_neighbours, '11').unmask(0).rename('nb11'); // shallow lag
      
      // SL sourrounded by DL --> DL
      clean_map = clean_map.where({
        test: clean_map.eq(11)
                .and(nb12.gt(75)),
        value: ee.Image(12)
      })
      
      // DL sourrounded by SL --> SL
      clean_map = clean_map.where({
        test: clean_map.eq(12)
                .and(nb11.gt(75)),
        value: ee.Image(11)
      })
      
      // DL/SL surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(11).or(clean_map.eq(12))
                .and(objsize.lte(max_size))
                .and(nb13.gt(80)),
        value: ee.Image(13)
      })
      
      // SL surrounded by IRF --> IRF
      clean_map = clean_map.where({
        test: clean_map.eq(11)
                .and(objsize.lte(max_size))
                .and(nb13.gt(80)),
        value: ee.Image(13)
      });
      
    
    } else if (vars.geomorphic && vars.fast_clean) {
      print("Executing the fast version OBIA");
      
      /* fast version of the geo clean up
        - blanket version assigns the underlying most common in neighbourhood
        - mode OBIA version iterates through objects+buffers but take the mode instead of doing the class percs, to see if that speeds things up
      */
      
      
      // ## Blanket version
      
      // the "LAND MASK" CLEAN  ****to be moved to datagen for next region****
      var global_reef_mask = ee.Image(region_params.global_reef_mask);
  
      clean_map = clean_map.where({
        test: global_reef_mask.eq(1),
        value: ee.Image(0)
      });
      
      // make a very smooth map to capture the broader neighbourhood  - *** Change to ee.kernal*** see reef mask in clean 3
      var smooth_map = clean_map
                          .focal_mode({
                            radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                            kernelType: 'circle', units: 'pixels', iterations: 2
                          });
      
      // first make a make size threshold, so we're not vectorising huge objects when we don't have t
      // - the unmask(99) captures small no data values/ data gaps
      var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt().multiply(2)).select('labels').pow(2).log().int();
      Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false);
      
      // replace small objects with smooth underneath
      var clean_map = clean_map.unmask(0).where({
        test: segment_id.gt(0), 
        value: smooth_map
      }).selfMask();
      
      
      // ## mode OBIA version
      
      /* A possible faster plan
            - vectorise one/few class/es at a time, thus only spending resources on what is actually needed to clean up
            - BUT, just assign the mode of the neighbours, so save resouces even further??
      
      // FUNCTION that maps over feature colleciton and assigns neighbour percentages
      var set_neighbour_mode = function(f) {
        // make the 1px buffer
        var diff = f.buffer(vars.image_data_scale).difference(f, ee.ErrorMargin(0.5))
        // reduce the classes in the buffer zone
        var diff_mode = ee.Number(ee.Dictionary(
          clean_map.unmask(ee.Image(0)).reduceRegion({
            reducer: ee.Reducer.mode(),
            geometry: diff.geometry(),
            scale: vars.image_data_scale,
            maxPixels: 1e11
          })).get('classification'))
        
        return(f.set('mode',diff_mode))
      }
      
      // FUNCTION to reduce the map to vectors and map the neighbour properties function
      var reduce_neighbours_mode = function() {
        // reduce map to vectors
        var map_fc = clean_map.unmask(0)
              .updateMask(classn.gt(0)) // only vectorise class/es of interest
              .reduceToVectors({
                scale: vars.image_data_scale, 
                eightConnected: false,
                bestEffort: true, 
                maxPixels: 1e13,
                tileScale: 1,
                geometry: region_extent
              })
        // map the function, calculate neighbour properties
        return(map_fc.map(set_neighbour_mode))
      }
      
      // first make a make size threshold, so we're not vecortising huge objects when we don't have to
      var segment_id = clean_map.unmask(0).connectedComponents(ee.Kernel.plus(1),vars.small_object_geo.sqrt()).select('labels')
      Map.addLayer(clean_map.unmask(0).updateMask(segment_id.gt(0)).reproject(ee.Projection('EPSG:4326').atScale(ee.Number(vars.image_data_scale))), display_pal, 'Map objects to be iterated through (OBIA)', false)
      
      // This is where we select the single or group of classes to vectorise for cleaning up
      var classn = segment_id.where({
        test: clean_map.neq(16) //TRF
                .and(clean_map.neq(15)) //RR
                .and(clean_map.neq(14)) //ORF
                .and(clean_map.neq(13)) //IRF
                //.and(clean_map.neq(12)) // deep L
                .and(clean_map.neq(11)) // shallow L 
                .and(clean_map.unmask(0).neq(0)), // no data values (want to reclaim the small gaps 
        value: ee.Image(0) // 99 ensures it's ignored in logic
      })
      
      // calculate neighbours
      var map_fc_neighbours = reduce_neighbours_mode()
      
      //print(map_fc_neighbours.limit(10))
      
      var mode_map = ee.Image().byte().paint(map_fc_neighbours, 'mode').unmask(0).rename('mode') // paint out the mode values to an image
      //Map.addLayer(mode_map, display_pal, "mode map", false)
      
      // replace small objects with mode underneath
      var clean_map = clean_map.unmask(0).where({
        test: segment_id.gt(0), 
        value: mode_map
      }).selfMask()
      
      */
      
    } else {
      
      if (vars.cleanup_stage == 1) {
        // BENTHIC CLEAN-UP RULES
        
        // reclaim shallow no data to surrounding class
        var smooth_map = clean_map
                            .focal_mode({
                              radius: vars.smooth_radius.multiply(3), // relates to smoothness required
                              kernelType: 'circle', units: 'pixels', iterations: 2
                            });
        
        var clean_map = clean_map.unmask(0).where({
          test: geo_map.gt(2).and(clean_map.eq(0)), 
          value: smooth_map
        }).selfMask();
        
        // cut benthic off to < 10 - 15 m
        clean_map = clean_map.where({
          test: depth.gt(vars.benthic_depth_cutoff),
          value: ee.Image(0)
        });
        
        // Deep (or land or missing) in geo == masked from benthic
        clean_map = clean_map.where({
          test: geo_map.unmask(0).lte(2),
          value: ee.Image(0)
        });
        
      }
    }
  }
  
  // Final clip to the classified extent and move on
  if (vars.geomorphic) {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  } else {
    clean_map = clean_map.updateMask(clean_map.gt(1)); // this ignores 0/land; make it .gt(2) if you want to mask deep too
  }

  
  
  // 4. Export data
  
  var output_name = (vars.geomorphic) ? vars.geomorph_output_name : vars.benthic_output_name;
  
  if (vars.do_export) {
    print("For export, the image data scale must be set to:", vars.image_data_scale);
    
    Map.addLayer(region_extent, {}, "Export footprint", false);
    
    Export.image.toAsset({
      image: clean_map.set(vars),
      description: output_name,
      assetId: vars.asset_output + 'in_out/' + output_name,
      region: region_extent,
      scale: vars.image_data_scale,
      crs: 'EPSG:4326',
      maxPixels: 1e13,
      pyramidingPolicy: {'.default': 'mode'}
    });
    
  } else {
    if (vars.reproject_display) {
      Map.addLayer(clean_map.reproject(ee.Projection('EPSG:4326').atScale(vars.image_data_scale)), display_pal, output_name, true);
    } else {
      Map.addLayer(clean_map, display_pal, output_name, false);
    }
  }

}

//Generate title
var title = ui.Label({
  value: 'Classes',
  style: {fontWeight: 'bold', fontSize: '12px'}
});

// generate the legend
var geo_legend = pkg_vis.discrete_legend(map_palettes.geo_atlas_names, map_palettes.geo_atlas_cols, 'Geomorphic Zone', false);
var benthic_legend = pkg_vis.discrete_legend(map_palettes.benthic_atlas_names, map_palettes.benthic_atlas_cols, 'Benthic Habitat', false);
//var mask_legend = pkg_vis.discrete_legend(["Low confidence depth","Water conditions"], ["#f7f7f7","#bababa"], 'Confidence Mask reason', false)
var legend = (vars.geomorphic) ? geo_legend : benthic_legend;
pkg_vis.add_lgds([title, legend]);//, mask_legend])
// generate the legend
